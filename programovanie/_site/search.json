[
  {
    "objectID": "sidebar/anaconda.html",
    "href": "sidebar/anaconda.html",
    "title": "Inštalácia a vývojové prostredia",
    "section": "",
    "text": "Distribúcia Anaconda predstavuje kompletné riešenie pre prácu s jazykom Python, najmä v oblastiach dátovej analýzy, strojového učenia a vedeckých výpočtov. Obsahuje:\n\nnajpoužívanejšie knižnice (napr. NumPy, Pandas, Matplotlib, SciPy),\nsprávcu balíkov a prostredí conda,\nvývojové nástroje ako Jupyter Lab, Jupyter Notebook, či Spyder.\n\nJe ideálna pre začiatočníkov, lebo šetrí čas a znižuje riziko konfliktov medzi verziami knižníc.",
    "crumbs": [
      "Domov",
      "Základy Pythonu",
      "Inštalácia a vývojové prostredia"
    ]
  },
  {
    "objectID": "sidebar/anaconda.html#prečo-používať-anacondu",
    "href": "sidebar/anaconda.html#prečo-používať-anacondu",
    "title": "Inštalácia a vývojové prostredia",
    "section": "",
    "text": "Distribúcia Anaconda predstavuje kompletné riešenie pre prácu s jazykom Python, najmä v oblastiach dátovej analýzy, strojového učenia a vedeckých výpočtov. Obsahuje:\n\nnajpoužívanejšie knižnice (napr. NumPy, Pandas, Matplotlib, SciPy),\nsprávcu balíkov a prostredí conda,\nvývojové nástroje ako Jupyter Lab, Jupyter Notebook, či Spyder.\n\nJe ideálna pre začiatočníkov, lebo šetrí čas a znižuje riziko konfliktov medzi verziami knižníc.",
    "crumbs": [
      "Domov",
      "Základy Pythonu",
      "Inštalácia a vývojové prostredia"
    ]
  },
  {
    "objectID": "sidebar/anaconda.html#inštalácia-anacondy",
    "href": "sidebar/anaconda.html#inštalácia-anacondy",
    "title": "Inštalácia a vývojové prostredia",
    "section": "🔽 Inštalácia Anacondy",
    "text": "🔽 Inštalácia Anacondy\n\nNavštív oficiálnu stránku: https://www.anaconda.com/download\nVyber verziu pre svoj operačný systém (Windows / macOS / Linux).\nSpusti inštalátor a nechaj predvolené nastavenia.\nPo dokončení over úspešnú inštaláciu v termináli:\n\nconda --version",
    "crumbs": [
      "Domov",
      "Základy Pythonu",
      "Inštalácia a vývojové prostredia"
    ]
  },
  {
    "objectID": "navbar/index.html",
    "href": "navbar/index.html",
    "title": "Programovanie v jazyku Python",
    "section": "",
    "text": "Predmet Programovanie 1 je úvodom do sveta algoritmizácie a programovania s využitím viacerých softvérových riešení. Jedným z týchto riešení je aj programovací jazyk Python.\nKurz je určený najmä študentom prvého ročníka študijného programu Geodézia a kartografia a kladie dôraz na praktické využitie programovania v jazkyu Python v technických a analytických úlohách.\nTáto webová stránka slúži ako online skriptá, kde nájdete všetky potrebné informácie pre získanie základných zručností, potrebných na osvojenie si jazyka Python."
  },
  {
    "objectID": "navbar/index.html#vitajte-na-stránke-predmetu-programovanie-1",
    "href": "navbar/index.html#vitajte-na-stránke-predmetu-programovanie-1",
    "title": "Programovanie v jazyku Python",
    "section": "",
    "text": "Predmet Programovanie 1 je úvodom do sveta algoritmizácie a programovania s využitím viacerých softvérových riešení. Jedným z týchto riešení je aj programovací jazyk Python.\nKurz je určený najmä študentom prvého ročníka študijného programu Geodézia a kartografia a kladie dôraz na praktické využitie programovania v jazkyu Python v technických a analytických úlohách.\nTáto webová stránka slúži ako online skriptá, kde nájdete všetky potrebné informácie pre získanie základných zručností, potrebných na osvojenie si jazyka Python."
  },
  {
    "objectID": "navbar/index.html#čo-sa-naučíte",
    "href": "navbar/index.html#čo-sa-naučíte",
    "title": "Programovanie v jazyku Python",
    "section": "🎯 Čo sa naučíte?",
    "text": "🎯 Čo sa naučíte?\n\nZáklady programovacieho jazyka Python a jeho syntaktické pravidlá\nPrácu s číselnými a symbolickými výpočtami pomocou knižníc NumPy a SymPy\nTvorbu základných grafov a vizualizácií pomocou knižnice Matplotlib\nSpracovanie dát a tabuliek pomocou modulu Pandas\nZáklady algoritmizácie a efektívneho riešenia technických problémov"
  },
  {
    "objectID": "navbar/index.html#prečo-sa-to-učíme",
    "href": "navbar/index.html#prečo-sa-to-učíme",
    "title": "Programovanie v jazyku Python",
    "section": "❓ Prečo sa to učíme?",
    "text": "❓ Prečo sa to učíme?\nProgramovanie je dnes neoddeliteľnou súčasťou moderného inžinierstva. V oblasti geodézie a kartografie je dôležité vedieť realizovať zložitejšie matematické výpočty. S vývojom oboru geodézie je dôležitou zručnosťou, schopnosť automatizovať výpočty, spracovávať veľké objemy dát, vizualizovať výsledky a vytvárať vlastné analytické nástroje, či implementovať už existujúce riešenia.\nJazyk Python je výkonný a pritom prístupný jazyk, ktorý umožňuje efektívne riešiť reálne technické problémy. Získané zručnosti môžete využiť počas ďalšieho štúdia, pri riešení zadaní, záverečných prácach, aj v profesionálnej praxi."
  },
  {
    "objectID": "navbar/index.html#pre-koho-je-kurz-určený",
    "href": "navbar/index.html#pre-koho-je-kurz-určený",
    "title": "Programovanie v jazyku Python",
    "section": "🔧 Pre koho je kurz určený?",
    "text": "🔧 Pre koho je kurz určený?\nPre všetkých, ktorí chcú získať pevné základy v používaní jazyka Python a pripraviť sa na neskoršie aplikácie výpočtovej techniky v geodézii, kartografii, alebo príbuzných technických odboroch.\n\n\n📚 Tento kurz tvorí základ na efektívnu prácu s rozličnými dátami v geodetických aj iných inžinierskych aplikáciách."
  },
  {
    "objectID": "navbar/about.html",
    "href": "navbar/about.html",
    "title": "O projekte",
    "section": "",
    "text": "Táto stránka vznikla ako podpora k predmetu Programovanie 1, ktorý je súčasťou bakalárskeho štúdia programu Geodézia a kartografia na Stavebnej fakulte STU v Bratislave.\nCieľom projektu je sprístupniť študentom praktické a relatívne zrozumiteľné materiály k výučbe programovania v jazyku Python, najmä s dôrazom na jeho využitie v geodetických, technických a vedeckých aplikáciách.\nWebová stránka slúži ako sprievodca k prednáškam a cvičeniam – obsahuje prehľad tém, ukážky kódov, vizualizácie, zadania a užitočné odkazy.\nProjekt podporuje samostatnú prácu študentov, rozvoj programátorského myslenia a schopnosti riešiť úlohy spojené so spracovaním a vizualizáciou údajov pre geodetickú prax.\n\n\n🧭 Veríme, že vďaka tejto platforme sa vám bude Python učiť efektívnejšie a zábavnejšie."
  },
  {
    "objectID": "navbar/about.html#o-projekte",
    "href": "navbar/about.html#o-projekte",
    "title": "O projekte",
    "section": "",
    "text": "Táto stránka vznikla ako podpora k predmetu Programovanie 1, ktorý je súčasťou bakalárskeho štúdia programu Geodézia a kartografia na Stavebnej fakulte STU v Bratislave.\nCieľom projektu je sprístupniť študentom praktické a relatívne zrozumiteľné materiály k výučbe programovania v jazyku Python, najmä s dôrazom na jeho využitie v geodetických, technických a vedeckých aplikáciách.\nWebová stránka slúži ako sprievodca k prednáškam a cvičeniam – obsahuje prehľad tém, ukážky kódov, vizualizácie, zadania a užitočné odkazy.\nProjekt podporuje samostatnú prácu študentov, rozvoj programátorského myslenia a schopnosti riešiť úlohy spojené so spracovaním a vizualizáciou údajov pre geodetickú prax.\n\n\n🧭 Veríme, že vďaka tejto platforme sa vám bude Python učiť efektívnejšie a zábavnejšie."
  },
  {
    "objectID": "navbar/toc.html",
    "href": "navbar/toc.html",
    "title": "Obsah",
    "section": "",
    "text": "Inštalácia a vývojové prostredie\nVirtuálne prostredia\nPrvé programy a výstup (print)\nPremenné a dátové typy (int, float, str, bool)\nOperátory (aritmetické, relačné, logické)\nVstup od používateľa (input)\nFunkcia type() a konverzia dátových typov\n\n\n\n\n\n\nPodmienky (if, elif, else)\nCykly (for, while)\nPráca s rozsahmi a iteráciou (range, enumerate)\nVnorené cykly a podmienky\n\n\n\n\n\n\nDefinovanie vlastných funkcií\nParametre a návratová hodnota\nLokálne a globálne premenné\nDokumentovanie a komentovanie\n\n\n\n\n\n\nZoznamy (list)\nN-tice (tuple)\nMnožiny (set)\nSlovníky (dict)\nIterácia cez štruktúry a základné operácie\n\n\n\n\n\n\nInštalácia a import\nPráca s dokumentáciou\n\n\n\n\nPolia (ndarray)\nIndexovanie a rezanie\nVektorové výpočty\nMatematické funkcie\nImport/export dát zo súborov:\n\nNačítanie .txt alebo .csv: np.loadtxt(), np.genfromtxt()\nUkladanie do súboru: np.savetxt()\nParametre ako delimiter, dtype, header, fmt\n\n\n\n\n\n\nSymbolické výrazy a premenné\nZjednodušovanie výrazov, vyjadrovanie premenných, substitúcia\nRiešenie (sústavy) rovníc\nDerivovanie, integrovanie\nFormátovanie výstupu (napr. latex())\n\n\n\n\n\nZákladné typy grafov (plot, scatter, bar)\nOznačovanie osí, legendy, mriežka\nUkladanie grafov do súborov (.png, .pdf)\n\n\n\n\n\nDátová štruktúra DataFrame\nNačítanie a zápis .csv súborov\nIndexovanie a filtrovanie dát\nZákladné štatistické výpočty a agregácie\n\n\n\n\n\n\n\nPráca s textovými a číselnými súbormi\nAutomatizácia výpočtov\nVytváranie reportov s výpočtami a grafmi\nSpracovanie reálnych údajov z geodetickej praxe\n\n\n\n📁 Zručnosti z tohto predmetu využijete pri spracovaní meraní, analýze dát výpočtoch a automatizácii rozličných geodetických úloh počas ďalšieho štúdia aj v praxi."
  },
  {
    "objectID": "navbar/toc.html#štruktúra-znalostí-programovanie-v-jazyku-python",
    "href": "navbar/toc.html#štruktúra-znalostí-programovanie-v-jazyku-python",
    "title": "Obsah",
    "section": "",
    "text": "Inštalácia a vývojové prostredie\nVirtuálne prostredia\nPrvé programy a výstup (print)\nPremenné a dátové typy (int, float, str, bool)\nOperátory (aritmetické, relačné, logické)\nVstup od používateľa (input)\nFunkcia type() a konverzia dátových typov\n\n\n\n\n\n\nPodmienky (if, elif, else)\nCykly (for, while)\nPráca s rozsahmi a iteráciou (range, enumerate)\nVnorené cykly a podmienky\n\n\n\n\n\n\nDefinovanie vlastných funkcií\nParametre a návratová hodnota\nLokálne a globálne premenné\nDokumentovanie a komentovanie\n\n\n\n\n\n\nZoznamy (list)\nN-tice (tuple)\nMnožiny (set)\nSlovníky (dict)\nIterácia cez štruktúry a základné operácie\n\n\n\n\n\n\nInštalácia a import\nPráca s dokumentáciou\n\n\n\n\nPolia (ndarray)\nIndexovanie a rezanie\nVektorové výpočty\nMatematické funkcie\nImport/export dát zo súborov:\n\nNačítanie .txt alebo .csv: np.loadtxt(), np.genfromtxt()\nUkladanie do súboru: np.savetxt()\nParametre ako delimiter, dtype, header, fmt\n\n\n\n\n\n\nSymbolické výrazy a premenné\nZjednodušovanie výrazov, vyjadrovanie premenných, substitúcia\nRiešenie (sústavy) rovníc\nDerivovanie, integrovanie\nFormátovanie výstupu (napr. latex())\n\n\n\n\n\nZákladné typy grafov (plot, scatter, bar)\nOznačovanie osí, legendy, mriežka\nUkladanie grafov do súborov (.png, .pdf)\n\n\n\n\n\nDátová štruktúra DataFrame\nNačítanie a zápis .csv súborov\nIndexovanie a filtrovanie dát\nZákladné štatistické výpočty a agregácie\n\n\n\n\n\n\n\nPráca s textovými a číselnými súbormi\nAutomatizácia výpočtov\nVytváranie reportov s výpočtami a grafmi\nSpracovanie reálnych údajov z geodetickej praxe\n\n\n\n📁 Zručnosti z tohto predmetu využijete pri spracovaní meraní, analýze dát výpočtoch a automatizácii rozličných geodetických úloh počas ďalšieho štúdia aj v praxi."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Programovanie v jazyku Python",
    "section": "",
    "text": "Predmet Programovanie 1 je úvodom do sveta algoritmizácie a programovania s využitím viacerých softvérových riešení. Jedným z týchto riešení je aj programovací jazyk Python.\nKurz je určený najmä študentom prvého ročníka študijného programu Geodézia a kartografia a kladie dôraz na praktické využitie programovania v jazkyu Python v technických a analytických úlohách.\nTáto webová stránka slúži ako online skriptá, kde nájdete všetky potrebné informácie pre získanie základných zručností, potrebných na osvojenie si jazyka Python."
  },
  {
    "objectID": "index.html#vitajte-na-stránke-predmetu-programovanie-1",
    "href": "index.html#vitajte-na-stránke-predmetu-programovanie-1",
    "title": "Programovanie v jazyku Python",
    "section": "",
    "text": "Predmet Programovanie 1 je úvodom do sveta algoritmizácie a programovania s využitím viacerých softvérových riešení. Jedným z týchto riešení je aj programovací jazyk Python.\nKurz je určený najmä študentom prvého ročníka študijného programu Geodézia a kartografia a kladie dôraz na praktické využitie programovania v jazkyu Python v technických a analytických úlohách.\nTáto webová stránka slúži ako online skriptá, kde nájdete všetky potrebné informácie pre získanie základných zručností, potrebných na osvojenie si jazyka Python."
  },
  {
    "objectID": "index.html#čo-sa-naučíte",
    "href": "index.html#čo-sa-naučíte",
    "title": "Programovanie v jazyku Python",
    "section": "🎯 Čo sa naučíte?",
    "text": "🎯 Čo sa naučíte?\n\nZáklady programovacieho jazyka Python a jeho syntaktické pravidlá\nPrácu s číselnými a symbolickými výpočtami pomocou knižníc NumPy a SymPy\nTvorbu základných grafov a vizualizácií pomocou knižnice Matplotlib\nSpracovanie dát a tabuliek pomocou modulu Pandas\nZáklady algoritmizácie a efektívneho riešenia technických problémov"
  },
  {
    "objectID": "index.html#prečo-sa-to-učíme",
    "href": "index.html#prečo-sa-to-učíme",
    "title": "Programovanie v jazyku Python",
    "section": "❓ Prečo sa to učíme?",
    "text": "❓ Prečo sa to učíme?\nProgramovanie je dnes neoddeliteľnou súčasťou moderného inžinierstva. V oblasti geodézie a kartografie je dôležité vedieť realizovať zložitejšie matematické výpočty. S vývojom oboru geodézie je dôležitou zručnosťou, schopnosť automatizovať výpočty, spracovávať veľké objemy dát, vizualizovať výsledky a vytvárať vlastné analytické nástroje, či implementovať už existujúce riešenia.\nJazyk Python je výkonný a pritom prístupný jazyk, ktorý umožňuje efektívne riešiť reálne technické problémy. Získané zručnosti môžete využiť počas ďalšieho štúdia, pri riešení zadaní, záverečných prácach, aj v profesionálnej praxi."
  },
  {
    "objectID": "index.html#pre-koho-je-kurz-určený",
    "href": "index.html#pre-koho-je-kurz-určený",
    "title": "Programovanie v jazyku Python",
    "section": "🔧 Pre koho je kurz určený?",
    "text": "🔧 Pre koho je kurz určený?\nPre všetkých, ktorí chcú získať pevné základy v používaní jazyka Python a pripraviť sa na neskoršie aplikácie výpočtovej techniky v geodézii, kartografii, alebo príbuzných technických odboroch.\n\n\n📚 Tento kurz tvorí základ na efektívnu prácu s rozličnými dátami v geodetických aj iných inžinierskych aplikáciách."
  },
  {
    "objectID": "wip.html",
    "href": "wip.html",
    "title": "🔧 Work in Progress",
    "section": "",
    "text": "🚧 Stránka vo výstavbe\nTento obsah je momentálne vo vývoji.\n🛠️ Pracujeme na jeho doplnení alebo úprave.\nProsím, vráťte sa neskôr.\n\n\nAk si myslíš, že tu niečo chýba alebo máš návrh na zlepšenie, nás kontaktuje.",
    "crumbs": [
      "Domov",
      "🏗️ Riadiace štruktúry",
      "🔧 Work in Progress"
    ]
  },
  {
    "objectID": "toc.html",
    "href": "toc.html",
    "title": "Obsah",
    "section": "",
    "text": "Inštalácia a vývojové prostredie\nVirtuálne prostredia\nPrvé programy a výstup (print)\nPremenné a dátové typy (int, float, str, bool)\nOperátory (aritmetické, relačné, logické)\nFunkcia type() a konverzia dátových typov\nVstup od používateľa (input)\nKomentovanie kódu\n\n\n\n\n\n\nZoznamy (list)\nN-tice (tuple)\nMnožiny (set)\nSlovníky (dict)\nIterácia cez štruktúry a základné operácie\n\n\n\n\n\n\nPodmienky (if, elif, else)\nCykly (for, while)\nPráca s rozsahmi a iteráciou (range, enumerate)\nVnorené cykly a podmienky\n\n\n\n\n\n\nDefinovanie vlastných funkcií\nParametre a návratová hodnota\nLokálne a globálne premenné\nDokumentovanie kódu\n\n\n\n\n\n\nInštalácia a import\nPráca s dokumentáciou\n\n\n\n\nPolia (ndarray)\nIndexovanie a rezanie\nVektorové výpočty\nMatematické funkcie\nImport/export dát zo súborov:\n\nNačítanie .txt alebo .csv: np.loadtxt(), np.genfromtxt()\nUkladanie do súboru: np.savetxt()\nParametre ako delimiter, dtype, header, fmt\n\n\n\n\n\n\nSymbolické výrazy a premenné\nZjednodušovanie výrazov, vyjadrovanie premenných, substitúcia\nRiešenie (sústavy) rovníc\nDerivovanie, integrovanie\nFormátovanie výstupu (napr. latex())\n\n\n\n\n\nZákladné typy grafov (plot, scatter, bar)\nOznačovanie osí, legendy, mriežka\nUkladanie grafov do súborov (.png, .pdf)\n\n\n\n\n\nDátová štruktúra DataFrame\nNačítanie a zápis .csv súborov\nIndexovanie a filtrovanie dát\nZákladné štatistické výpočty a agregácie\n\n\n\n\n\n\n\nPráca s textovými a číselnými súbormi\nAutomatizácia výpočtov\nVytváranie reportov s výpočtami a grafmi\nSpracovanie reálnych údajov z geodetickej praxe\n\n\n\n\n\n\nDoplnkové materiály (nielen) pre študentov, ktorých Python pohltil.\n\n\n\n📁 Zručnosti z tohto predmetu využijete pri spracovaní meraní, analýze dát výpočtoch a automatizácii rozličných geodetických úloh počas ďalšieho štúdia aj v praxi."
  },
  {
    "objectID": "toc.html#štruktúra-znalostí-programovanie-v-jazyku-python",
    "href": "toc.html#štruktúra-znalostí-programovanie-v-jazyku-python",
    "title": "Obsah",
    "section": "",
    "text": "Inštalácia a vývojové prostredie\nVirtuálne prostredia\nPrvé programy a výstup (print)\nPremenné a dátové typy (int, float, str, bool)\nOperátory (aritmetické, relačné, logické)\nFunkcia type() a konverzia dátových typov\nVstup od používateľa (input)\nKomentovanie kódu\n\n\n\n\n\n\nZoznamy (list)\nN-tice (tuple)\nMnožiny (set)\nSlovníky (dict)\nIterácia cez štruktúry a základné operácie\n\n\n\n\n\n\nPodmienky (if, elif, else)\nCykly (for, while)\nPráca s rozsahmi a iteráciou (range, enumerate)\nVnorené cykly a podmienky\n\n\n\n\n\n\nDefinovanie vlastných funkcií\nParametre a návratová hodnota\nLokálne a globálne premenné\nDokumentovanie kódu\n\n\n\n\n\n\nInštalácia a import\nPráca s dokumentáciou\n\n\n\n\nPolia (ndarray)\nIndexovanie a rezanie\nVektorové výpočty\nMatematické funkcie\nImport/export dát zo súborov:\n\nNačítanie .txt alebo .csv: np.loadtxt(), np.genfromtxt()\nUkladanie do súboru: np.savetxt()\nParametre ako delimiter, dtype, header, fmt\n\n\n\n\n\n\nSymbolické výrazy a premenné\nZjednodušovanie výrazov, vyjadrovanie premenných, substitúcia\nRiešenie (sústavy) rovníc\nDerivovanie, integrovanie\nFormátovanie výstupu (napr. latex())\n\n\n\n\n\nZákladné typy grafov (plot, scatter, bar)\nOznačovanie osí, legendy, mriežka\nUkladanie grafov do súborov (.png, .pdf)\n\n\n\n\n\nDátová štruktúra DataFrame\nNačítanie a zápis .csv súborov\nIndexovanie a filtrovanie dát\nZákladné štatistické výpočty a agregácie\n\n\n\n\n\n\n\nPráca s textovými a číselnými súbormi\nAutomatizácia výpočtov\nVytváranie reportov s výpočtami a grafmi\nSpracovanie reálnych údajov z geodetickej praxe\n\n\n\n\n\n\nDoplnkové materiály (nielen) pre študentov, ktorých Python pohltil.\n\n\n\n📁 Zručnosti z tohto predmetu využijete pri spracovaní meraní, analýze dát výpočtoch a automatizácii rozličných geodetických úloh počas ďalšieho štúdia aj v praxi."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "O projekte",
    "section": "",
    "text": "Táto stránka vznikla ako podpora k predmetu Programovanie 1, ktorý je súčasťou bakalárskeho štúdia programu Geodézia a kartografia na Stavebnej fakulte STU v Bratislave.\nCieľom projektu je sprístupniť študentom praktické a relatívne zrozumiteľné materiály k výučbe programovania v jazyku Python, najmä s dôrazom na jeho využitie v geodetických, technických a vedeckých aplikáciách.\nWebová stránka slúži ako sprievodca k prednáškam a cvičeniam – obsahuje prehľad tém, ukážky kódov, vizualizácie, zadania a užitočné odkazy.\nProjekt podporuje samostatnú prácu študentov, rozvoj programátorského myslenia a schopnosti riešiť úlohy spojené so spracovaním a vizualizáciou údajov pre geodetickú prax.\n\n\n🧭 Veríme, že vďaka tejto platforme sa vám bude Python učiť efektívnejšie a zábavnejšie."
  },
  {
    "objectID": "about.html#o-projekte",
    "href": "about.html#o-projekte",
    "title": "O projekte",
    "section": "",
    "text": "Táto stránka vznikla ako podpora k predmetu Programovanie 1, ktorý je súčasťou bakalárskeho štúdia programu Geodézia a kartografia na Stavebnej fakulte STU v Bratislave.\nCieľom projektu je sprístupniť študentom praktické a relatívne zrozumiteľné materiály k výučbe programovania v jazyku Python, najmä s dôrazom na jeho využitie v geodetických, technických a vedeckých aplikáciách.\nWebová stránka slúži ako sprievodca k prednáškam a cvičeniam – obsahuje prehľad tém, ukážky kódov, vizualizácie, zadania a užitočné odkazy.\nProjekt podporuje samostatnú prácu študentov, rozvoj programátorského myslenia a schopnosti riešiť úlohy spojené so spracovaním a vizualizáciou údajov pre geodetickú prax.\n\n\n🧭 Veríme, že vďaka tejto platforme sa vám bude Python učiť efektívnejšie a zábavnejšie."
  },
  {
    "objectID": "content/anaconda.html",
    "href": "content/anaconda.html",
    "title": "Inštalácia a vývojové prostredia",
    "section": "",
    "text": "Distribúcia Anaconda predstavuje kompletné riešenie pre prácu s jazykom Python, najmä v oblastiach dátovej analýzy, strojového učenia a vedeckých výpočtov. Obsahuje:\n\nnajpoužívanejšie knižnice (napr. NumPy, Pandas, Matplotlib, SciPy),\nsprávcu balíkov a prostredí conda,\nvývojové nástroje ako Jupyter Lab, Jupyter Notebook, či Spyder.\n\nJe ideálna pre začiatočníkov, lebo šetrí čas a znižuje riziko konfliktov medzi verziami knižníc.\nDostupná je taktiež zjednodušená, tzv. “lightweight” verzia, s názvom MiniConda.",
    "crumbs": [
      "Domov",
      "🚀 Základy Pythonu",
      "Inštalácia a vývojové prostredia"
    ]
  },
  {
    "objectID": "content/anaconda.html#prečo-používať-anacondu",
    "href": "content/anaconda.html#prečo-používať-anacondu",
    "title": "Inštalácia a vývojové prostredia",
    "section": "",
    "text": "Distribúcia Anaconda predstavuje kompletné riešenie pre prácu s jazykom Python, najmä v oblastiach dátovej analýzy, strojového učenia a vedeckých výpočtov. Obsahuje:\n\nnajpoužívanejšie knižnice (napr. NumPy, Pandas, Matplotlib, SciPy),\nsprávcu balíkov a prostredí conda,\nvývojové nástroje ako Jupyter Lab, Jupyter Notebook, či Spyder.\n\nJe ideálna pre začiatočníkov, lebo šetrí čas a znižuje riziko konfliktov medzi verziami knižníc.\nDostupná je taktiež zjednodušená, tzv. “lightweight” verzia, s názvom MiniConda.",
    "crumbs": [
      "Domov",
      "🚀 Základy Pythonu",
      "Inštalácia a vývojové prostredia"
    ]
  },
  {
    "objectID": "content/anaconda.html#inštalácia-anacondy",
    "href": "content/anaconda.html#inštalácia-anacondy",
    "title": "Inštalácia a vývojové prostredia",
    "section": "🔽 Inštalácia Anacondy",
    "text": "🔽 Inštalácia Anacondy\n\nNavštívte oficiálnu stránku distribúcie Anacondy na tomto linku.\nZ ponuky inštalátorov distribúcie Anacondy vyberte verziu pre svoj operačný systém (Windows / macOS / Linux), prípadne stiahnite detegovanú verziu.\nSpustite inštalátor a nechajte predvolené nastavenia.",
    "crumbs": [
      "Domov",
      "🚀 Základy Pythonu",
      "Inštalácia a vývojové prostredia"
    ]
  },
  {
    "objectID": "content/venv.html",
    "href": "content/venv.html",
    "title": "Virtuálne prostredia",
    "section": "",
    "text": "Virtuálne prostredie je izolovaný priestor, v ktorom môžeme nainštalovať konkrétne verzie balíkov bez ovplyvnenia iných projektov. V prostredí Anaconda môžeme virtuálne prostredia spravovať pohodlne aj cez grafické rozhranie – Anaconda Navigator.",
    "crumbs": [
      "Domov",
      "🚀 Základy Pythonu",
      "Virtuálne prostredia"
    ]
  },
  {
    "objectID": "content/venv.html#virtuálne-prostredia",
    "href": "content/venv.html#virtuálne-prostredia",
    "title": "Virtuálne prostredia",
    "section": "",
    "text": "Virtuálne prostredie je izolovaný priestor, v ktorom môžeme nainštalovať konkrétne verzie balíkov bez ovplyvnenia iných projektov. V prostredí Anaconda môžeme virtuálne prostredia spravovať pohodlne aj cez grafické rozhranie – Anaconda Navigator.\n\n\n\n\nSpustite Anaconda Navigator\nPrejdite na kartu Environments\nKliknite na Create\nVyplňte:\n\nVhodný názov prostredia, napr. programovanie_1\nZvoľte jazyk Python a jeho verziu napr. 3.12.11\n\nKliknite na Create\n\n\n\n\n\n\nVyber prostredie zo zoznamu vľavo.\nV hornej časti nastav filter na Not installed.\nVyhľadaj balík, napr. numpy alebo matplotlib.\nZaškrtni požadované balíky a klikni na Apply.",
    "crumbs": [
      "Domov",
      "Základy Pythonu",
      "Virtuálne prostredia"
    ]
  },
  {
    "objectID": "content/venv.html#význam-virtuálneho-prostredia",
    "href": "content/venv.html#význam-virtuálneho-prostredia",
    "title": "Virtuálne prostredia",
    "section": "",
    "text": "Virtuálne prostredie je izolovaný priestor, v ktorom môžeme nainštalovať konkrétne verzie balíkov bez ovplyvnenia iných projektov. V prostredí Anaconda môžeme virtuálne prostredia spravovať pohodlne aj cez grafické rozhranie – Anaconda Navigator.",
    "crumbs": [
      "Domov",
      "🚀 Základy Pythonu",
      "Virtuálne prostredia"
    ]
  },
  {
    "objectID": "content/anaconda.html#dostupná-je-taktiež-zjednodušená-tzv.-lightweight-verzia-s-názvom-miniconda.",
    "href": "content/anaconda.html#dostupná-je-taktiež-zjednodušená-tzv.-lightweight-verzia-s-názvom-miniconda.",
    "title": "Inštalácia a vývojové prostredia",
    "section": "Dostupná je taktiež zjednodušená, tzv. lightweight verzia, s názvom MiniConda.",
    "text": "Dostupná je taktiež zjednodušená, tzv. lightweight verzia, s názvom MiniConda.",
    "crumbs": [
      "Domov",
      "Základy Pythonu",
      "Inštalácia a vývojové prostredia"
    ]
  },
  {
    "objectID": "content/venv.html#vytvorenie-virtuálneho-prostredia-v-anaconda-navigator",
    "href": "content/venv.html#vytvorenie-virtuálneho-prostredia-v-anaconda-navigator",
    "title": "Virtuálne prostredia",
    "section": "🧭 Vytvorenie virtuálneho prostredia v Anaconda Navigator",
    "text": "🧭 Vytvorenie virtuálneho prostredia v Anaconda Navigator\n\nSpustite Anaconda Navigator\nPrejdite na kartu Environments\nKliknite na Create\nVyplňte:\n\nVhodný názov prostredia, napr. programovanie_1\nZvoľte jazyk Python a jeho verziu napr. 3.12.11\n\nKliknite na Create",
    "crumbs": [
      "Domov",
      "🚀 Základy Pythonu",
      "Virtuálne prostredia"
    ]
  },
  {
    "objectID": "content/venv.html#inštalácia-balíkov-cez-používateľské-rozhranie-gui",
    "href": "content/venv.html#inštalácia-balíkov-cez-používateľské-rozhranie-gui",
    "title": "Virtuálne prostredia",
    "section": "📦 Inštalácia balíkov cez používateľské rozhranie (GUI)",
    "text": "📦 Inštalácia balíkov cez používateľské rozhranie (GUI)\n\nVyber prostredie zo zoznamu vľavo.\nV hornej časti nastav filter na Not installed.\nVyhľadaj balík, napr. numpy alebo matplotlib.\nZaškrtni požadované balíky a klikni na Apply.",
    "crumbs": [
      "Domov",
      "Základy Pythonu",
      "Virtuálne prostredia"
    ]
  },
  {
    "objectID": "content/venv.html#inštalácia-balíkov-pomocou-kódu",
    "href": "content/venv.html#inštalácia-balíkov-pomocou-kódu",
    "title": "Virtuálne prostredia",
    "section": "🐍 Inštalácia balíkov pomocou kódu",
    "text": "🐍 Inštalácia balíkov pomocou kódu",
    "crumbs": [
      "Domov",
      "Základy Pythonu",
      "Virtuálne prostredia"
    ]
  },
  {
    "objectID": "content/venv.html#videonávod",
    "href": "content/venv.html#videonávod",
    "title": "Virtuálne prostredia",
    "section": "🎞️ Videonávod",
    "text": "🎞️ Videonávod",
    "crumbs": [
      "Domov",
      "🚀 Základy Pythonu",
      "Virtuálne prostredia"
    ]
  },
  {
    "objectID": "content/anaconda.html#videonávod",
    "href": "content/anaconda.html#videonávod",
    "title": "Inštalácia a vývojové prostredia",
    "section": "🎞️ Videonávod",
    "text": "🎞️ Videonávod",
    "crumbs": [
      "Domov",
      "🚀 Základy Pythonu",
      "Inštalácia a vývojové prostredia"
    ]
  },
  {
    "objectID": "content/anaconda.html#vývojové-prostredia",
    "href": "content/anaconda.html#vývojové-prostredia",
    "title": "Inštalácia a vývojové prostredia",
    "section": "🧪 Vývojové prostredia",
    "text": "🧪 Vývojové prostredia\nVývojové prostredie je softvérový nástroj, ktorý poskytuje používateľovi všetko potrebné na písanie, testovanie a správu kódu v jednom prehľadnom rozhraní. Pre nás sú z hľadiska jednoduchosti použitia, relevantné najmä tieto:\n\n\n📓 Jupyter Notebook\nJupyter Notebook je klasické webové rozhranie na písanie a spúšťanie Python kódu v tzv. notebookoch (.ipynb súboroch).\n\n✅ Výhody\n\nVeľmi jednoduché a intuitívne prostredie.\nKód a výsledky (grafy, tabuľky) sa zobrazujú v jednom dokumente.\nIdeálne na výučbu, rýchle experimenty a analýzu dát.\n\n\n\n🚫 Nevýhody\n\nObmedzené možnosti správy súborov a rozšírení.\nHoršia organizácia väčších projektov.\n\n\n\n\n\n🔬 Jupyter Lab\nJupyter Lab je modernejší nástupca Jupyter Notebooku, s rozšírenou funkcionalitou a lepším rozhraním.\n\n✅ Výhody\n\nMožnosť otvoriť viac notebookov, terminálov, Markdown súborov a dát naraz.\nPodpora rozšírení (napr. debugger, git, LSP).\nIdeálne na komplexnejšie projekty a výskum.\n\n\n\n🚫 Nevýhody\n\nO niečo náročnejšie rozhranie pre úplných začiatočníkov.\n\n\n\n\n\n🕸️ Spyder\nSpyder je desktopové vývojové prostredie (IDE) podobné napr. PyCharmu alebo MATLABu.\n\n✅ Výhody\n\nPrehľadné GUI: editor, konzola, premenné, pomocník, súborový prehliadač.\nSkvelé na písanie skriptov a ladenie menších Python aplikácií.\nObsahuje debugger, profiler a integráciu s IPython.\n\n\n\n🚫 Nevýhody\n\nMenej vhodné na interaktívnu dátovú analýzu než Jupyter.\nSlabšia podpora Markdownu a vizualizácií priamo v texte.\n\n\n\n\n\n🔍 Kedy čo použiť?\n\n\n\n\n\n\n\n\n\nProstredie\nVhodné na\nInteraktivita\nEditor typu IDE\n\n\n\n\nJupyter Notebook\nvýučba, rýchle testovanie\n⭐⭐⭐⭐\n❌\n\n\nJupyter Lab\ndátová analýza, výskum, viacero súborov\n⭐⭐⭐⭐⭐\n🟡 (základný)\n\n\nSpyder\nskripty, ladenie, technické výpočty\n⭐\n✅\n\n\n\n\n📌 Všetky tri prostredia sú dostupné priamo v distribúcii Anaconda a je len na vás, ktoré si vyberiete. Najlepšie výsledky často dosiahnete ich kombináciou podľa potreby, v závislosti od riešeného problému.",
    "crumbs": [
      "Domov",
      "🚀 Základy Pythonu",
      "Inštalácia a vývojové prostredia"
    ]
  },
  {
    "objectID": "content/anaconda.html#jupyter-notebook",
    "href": "content/anaconda.html#jupyter-notebook",
    "title": "Inštalácia a vývojové prostredia",
    "section": "🧪 Jupyter Notebook",
    "text": "🧪 Jupyter Notebook\nJupyter Notebook je klasické webové rozhranie na písanie a spúšťanie Python kódu v tzv. notebookoch (.ipynb súboroch).\n\n✅ Výhody:\n\nVeľmi jednoduché a intuitívne prostredie.\nKód a výsledky (grafy, tabuľky) sa zobrazujú v jednom dokumente.\nIdeálne na výučbu, rýchle experimenty a analýzu dát.\n\n\n\n🚫 Nevýhody:\n\nObmedzené možnosti správy súborov a rozšírení.\nHoršia organizácia väčších projektov.",
    "crumbs": [
      "Domov",
      "Základy Pythonu",
      "Inštalácia a vývojové prostredia"
    ]
  },
  {
    "objectID": "content/anaconda.html#jupyter-lab",
    "href": "content/anaconda.html#jupyter-lab",
    "title": "Inštalácia a vývojové prostredia",
    "section": "🧪 Jupyter Lab",
    "text": "🧪 Jupyter Lab\nJupyter Lab je modernejší nástupca Jupyter Notebooku, s rozšírenou funkcionalitou a lepším rozhraním.\n\n✅ Výhody:\n\nMožnosť otvoriť viac notebookov, terminálov, Markdown súborov a dát naraz.\nPodpora rozšírení (napr. debugger, git, LSP).\nIdeálne na komplexnejšie projekty a výskum.\n\n\n\n🚫 Nevýhody:\n\nO niečo náročnejšie rozhranie pre úplných začiatočníkov.",
    "crumbs": [
      "Domov",
      "Základy Pythonu",
      "Inštalácia a vývojové prostredia"
    ]
  },
  {
    "objectID": "content/anaconda.html#spyder",
    "href": "content/anaconda.html#spyder",
    "title": "Inštalácia a vývojové prostredia",
    "section": "🧪 Spyder",
    "text": "🧪 Spyder\nSpyder je desktopové vývojové prostredie (IDE) podobné napr. PyCharmu alebo MATLABu.\n\n✅ Výhody:\n\nPrehľadné GUI: editor, konzola, premenné, pomocník, súborový prehliadač.\nSkvelé na písanie skriptov a ladenie menších Python aplikácií.\nObsahuje debugger, profiler a integráciu s IPython.\n\n\n\n🚫 Nevýhody:\n\nMenej vhodné na interaktívnu dátovú analýzu než Jupyter.\nSlabšia podpora Markdownu a vizualizácií priamo v texte.",
    "crumbs": [
      "Domov",
      "Základy Pythonu",
      "Inštalácia a vývojové prostredia"
    ]
  },
  {
    "objectID": "content/anaconda.html#kedy-čo-použiť",
    "href": "content/anaconda.html#kedy-čo-použiť",
    "title": "Inštalácia a vývojové prostredia",
    "section": "🔍 Kedy čo použiť?",
    "text": "🔍 Kedy čo použiť?\n\n\n\n\n\n\n\n\n\nProstredie\nVhodné na\nInteraktivita\nEditor typu IDE\n\n\n\n\nJupyter Notebook\nvýučba, rýchle testovanie\n⭐⭐⭐⭐\n❌\n\n\nJupyter Lab\ndátová analýza, výskum, viacero súborov\n⭐⭐⭐⭐⭐\n🟡 (základný)\n\n\nSpyder\nskripty, ladenie, technické výpočty\n⭐\n✅",
    "crumbs": [
      "Domov",
      "Základy Pythonu",
      "Inštalácia a vývojové prostredia"
    ]
  },
  {
    "objectID": "content/anaconda.html#záver",
    "href": "content/anaconda.html#záver",
    "title": "Inštalácia a vývojové prostredia",
    "section": "📌 Záver",
    "text": "📌 Záver\nVšetky tri prostredia sú dostupné priamo v distribúcii Anaconda a je len na tebe, ktoré si vyberieš. Najlepšie výsledky často dosiahneš ich kombináciou podľa potreby.",
    "crumbs": [
      "Domov",
      "Základy Pythonu",
      "Inštalácia a vývojové prostredia"
    ]
  },
  {
    "objectID": "content/anaconda.html#videonávod---inštalácia-anacondy-a-vývojové-prostredia",
    "href": "content/anaconda.html#videonávod---inštalácia-anacondy-a-vývojové-prostredia",
    "title": "Inštalácia a vývojové prostredia",
    "section": "🎞️ Videonávod - Inštalácia Anacondy a vývojové prostredia",
    "text": "🎞️ Videonávod - Inštalácia Anacondy a vývojové prostredia",
    "crumbs": [
      "Domov",
      "Základy Pythonu",
      "Inštalácia a vývojové prostredia"
    ]
  },
  {
    "objectID": "content/hello_world.html",
    "href": "content/hello_world.html",
    "title": "Prvé programy a výstup",
    "section": "",
    "text": "Prvý program v jazyku Python býva zvyčajne veľmi jednoduchý. Často vypisuje iba text na obrazovku – typicky Hello, world!. Na to slúži základná funkcia print().",
    "crumbs": [
      "Domov",
      "🚀 Základy Pythonu",
      "Prvé programy a výstup"
    ]
  },
  {
    "objectID": "content/hello_world.html#úvod",
    "href": "content/hello_world.html#úvod",
    "title": "Prvé programy a výstup",
    "section": "",
    "text": "Prvý program v jazyku Python býva zvyčajne veľmi jednoduchý. Často vypisuje iba text na obrazovku – typicky Hello, world!. Na to slúži základná funkcia print().",
    "crumbs": [
      "Domov",
      "🚀 Základy Pythonu",
      "Prvé programy a výstup"
    ]
  },
  {
    "objectID": "content/hello_world.html#základný-výstup",
    "href": "content/hello_world.html#základný-výstup",
    "title": "Prvé programy a výstup",
    "section": "🧪 Základný výstup",
    "text": "🧪 Základný výstup\n\n\nKód\nprint(\"Hello, world!\")\n\n\nHello, world!\n\n\n\n❕ Funkcia print() slúži na výpis textu alebo hodnôt do konzoly. Všetko, čo sa nachádza v zátvorkách, sa vypíše.",
    "crumbs": [
      "Domov",
      "🚀 Základy Pythonu",
      "Prvé programy a výstup"
    ]
  },
  {
    "objectID": "content/hello_world.html#textový-reťazec",
    "href": "content/hello_world.html#textový-reťazec",
    "title": "Prvé programy a výstup",
    "section": "🔡 Textový reťazec",
    "text": "🔡 Textový reťazec\nText, ktorý vypisujeme, musí byť v úvodzovkách:\n\n\nKód\nprint(\"Toto je text\")\nprint('Aj toto je text')\n\n\nToto je text\nAj toto je text\n\n\n\n❕ Môžeme použiť jednoduché ' alebo dvojité \" úvodzovky.",
    "crumbs": [
      "Domov",
      "🚀 Základy Pythonu",
      "Prvé programy a výstup"
    ]
  },
  {
    "objectID": "content/hello_world.html#poznámky",
    "href": "content/hello_world.html#poznámky",
    "title": "Prvé programy a výstup",
    "section": "🧠 Poznámky",
    "text": "🧠 Poznámky\n\nprint() je vstavaná funkcia, ktorá nevyžaduje žiadne knižnice.\nPoužíva sa na výpis textu, čísel, premenných aj výpočtov.\nKaždé volanie print() skončí automaticky novým riadkom.",
    "crumbs": [
      "Domov",
      "🚀 Základy Pythonu",
      "Prvé programy a výstup"
    ]
  },
  {
    "objectID": "content/hello_world.html#príklady",
    "href": "content/hello_world.html#príklady",
    "title": "Prvé programy a výstup",
    "section": "💡 Príklady",
    "text": "💡 Príklady\n\n\nKód\nprint(123)              # vypíše číslo\nprint(\"Výsledok:\", 10)  # vypíše text aj číslo\nprint(5 + 7)            # vypíše výsledok výrazu\n\n\n123\nVýsledok: 10\n12",
    "crumbs": [
      "Domov",
      "🚀 Základy Pythonu",
      "Prvé programy a výstup"
    ]
  },
  {
    "objectID": "content/hello_world.html#viacero-hodnôt",
    "href": "content/hello_world.html#viacero-hodnôt",
    "title": "Prvé programy a výstup",
    "section": "➕ Viacero hodnôt",
    "text": "➕ Viacero hodnôt\nDo funkcie print() môžeme dať viacero hodnôt oddelených čiarkami:\n\n\nKód\nprint(\"Súčet 2 + 3 je\", 2 + 3)\n\n\nSúčet 2 + 3 je 5\n\n\n\n❕ Python automaticky vloží medzeru medzi jednotlivé časti výpisu.",
    "crumbs": [
      "Domov",
      "🚀 Základy Pythonu",
      "Prvé programy a výstup"
    ]
  },
  {
    "objectID": "content/hello_world.html#videonávod",
    "href": "content/hello_world.html#videonávod",
    "title": "Prvé programy a výstup",
    "section": "🎞️ Videonávod",
    "text": "🎞️ Videonávod",
    "crumbs": [
      "Domov",
      "🚀 Základy Pythonu",
      "Prvé programy a výstup"
    ]
  },
  {
    "objectID": "content/hello_world.html#zhrununie",
    "href": "content/hello_world.html#zhrununie",
    "title": "Prvé programy a výstup",
    "section": "🧠 Zhrununie",
    "text": "🧠 Zhrununie\n\nprint() je vstavaná funkcia, ktorá nevyžaduje žiadne knižnice.\nPoužíva sa na výpis textu, čísel, premenných aj výpočtov.\nKaždé volanie print() skončí automaticky novým riadkom.",
    "crumbs": [
      "Domov",
      "🚀 Základy Pythonu",
      "Prvé programy a výstup"
    ]
  },
  {
    "objectID": "content/premenne_a_datove_typy.html",
    "href": "content/premenne_a_datove_typy.html",
    "title": "Premenné a dátové typy",
    "section": "",
    "text": "Premenné slúžia na uloženie údajov, ktoré môžeme neskôr opakovane použiť. V Pythone nie je potrebné vopred určovať typ premennej – typ sa určí automaticky podľa toho, čo do premennej uložíme.",
    "crumbs": [
      "Domov",
      "🚀 Základy Pythonu",
      "Premenné a dátové typy"
    ]
  },
  {
    "objectID": "content/premenne_a_datove_typy.html#úvod",
    "href": "content/premenne_a_datove_typy.html#úvod",
    "title": "Premenné a dátové typy",
    "section": "",
    "text": "Premenné slúžia na uloženie údajov, ktoré môžeme neskôr opakovane použiť. V Pythone nie je potrebné vopred určovať typ premennej – typ sa určí automaticky podľa toho, čo do premennej uložíme.",
    "crumbs": [
      "Domov",
      "🚀 Základy Pythonu",
      "Premenné a dátové typy"
    ]
  },
  {
    "objectID": "content/premenne_a_datove_typy.html#základné-použitie-premennej",
    "href": "content/premenne_a_datove_typy.html#základné-použitie-premennej",
    "title": "Premenné a dátové typy",
    "section": "🧪 Základné použitie premennej",
    "text": "🧪 Základné použitie premennej\n\n\nKód\nx = 5\nmeno = \"Anna\"\nprint(x)\nprint(meno)\n\n\n5\nAnna",
    "crumbs": [
      "Domov",
      "🚀 Základy Pythonu",
      "Premenné a dátové typy"
    ]
  },
  {
    "objectID": "content/premenne_a_datove_typy.html#názvy-premenných",
    "href": "content/premenne_a_datove_typy.html#názvy-premenných",
    "title": "Premenné a dátové typy",
    "section": "🧠 Názvy premenných",
    "text": "🧠 Názvy premenných\n\nMusia začínať písmenom alebo podčiarkovníkom _\nMôžu obsahovať len písmená, číslice a podčiarkovníky\nNemôžu obsahovať medzery ani špeciálne znaky\nNepoužívajte kľúčové slová(názvy funkcií) jazyka Python (napr. if, print, for, …)\n\n✅ Platné:\n\n\nKód\nvek = 20\nmeno_studenta = \"Jakub\"\n_x = 3.14\n\n\n❌ Neplatné (nespúšťajte, spôsobia chybu):\n\n\nKód\n# 2cislo = 10       # začína číslom\n# moje meno = \"Ján\" # obsahuje medzeru\n# if = \"niečo\"      # kľúčové slovo",
    "crumbs": [
      "Domov",
      "🚀 Základy Pythonu",
      "Premenné a dátové typy"
    ]
  },
  {
    "objectID": "content/premenne_a_datove_typy.html#základné-dátové-typy",
    "href": "content/premenne_a_datove_typy.html#základné-dátové-typy",
    "title": "Premenné a dátové typy",
    "section": "🔢 Základné dátové typy",
    "text": "🔢 Základné dátové typy\n\n\n\nTyp\nPríklad\nPopis\n\n\n\n\nint\n10, -3\ncelé číslo\n\n\nfloat\n3.14\ndesatinné číslo\n\n\nstr\n'text'\nreťazec (text)\n\n\nbool\nTrue, False\nlogická hodnota",
    "crumbs": [
      "Domov",
      "🚀 Základy Pythonu",
      "Premenné a dátové typy"
    ]
  },
  {
    "objectID": "content/premenne_a_datove_typy.html#ukážky-typov",
    "href": "content/premenne_a_datove_typy.html#ukážky-typov",
    "title": "Premenné a dátové typy",
    "section": "🔍 Ukážky typov",
    "text": "🔍 Ukážky typov\n\n\nKód\ncislo = 42\npi = 3.14\nmeno = \"Zuzana\"\npravda = True\n\nprint(type(cislo))\nprint(type(pi))\nprint(type(meno))\nprint(type(pravda))\n\n\n&lt;class 'int'&gt;\n&lt;class 'float'&gt;\n&lt;class 'str'&gt;\n&lt;class 'bool'&gt;",
    "crumbs": [
      "Domov",
      "🚀 Základy Pythonu",
      "Premenné a dátové typy"
    ]
  },
  {
    "objectID": "content/premenne_a_datove_typy.html#premenné-môžeme-meniť",
    "href": "content/premenne_a_datove_typy.html#premenné-môžeme-meniť",
    "title": "Premenné a dátové typy",
    "section": "🎯 Premenné môžeme meniť",
    "text": "🎯 Premenné môžeme meniť\n\n\nKód\nx = 10\nprint(x)\nx = \"text\"\nprint(x)\n\n\n10\ntext",
    "crumbs": [
      "Domov",
      "🚀 Základy Pythonu",
      "Premenné a dátové typy"
    ]
  },
  {
    "objectID": "content/premenne_a_datove_typy.html#operácie-podľa-typu",
    "href": "content/premenne_a_datove_typy.html#operácie-podľa-typu",
    "title": "Premenné a dátové typy",
    "section": "🔁 Operácie podľa typu",
    "text": "🔁 Operácie podľa typu\n\n\nKód\na = 5\nb = 2\nprint(a + b)\n\ns1 = \"ahoj \"\ns2 = \"svet\"\nprint(s1 + s2)\n\nx = True\ny = False\nprint(x + y)\n\n\n7\nahoj svet\n1",
    "crumbs": [
      "Domov",
      "🚀 Základy Pythonu",
      "Premenné a dátové typy"
    ]
  },
  {
    "objectID": "content/premenne_a_datove_typy.html#zhrnutie",
    "href": "content/premenne_a_datove_typy.html#zhrnutie",
    "title": "Premenné a dátové typy",
    "section": "🧠 Zhrnutie",
    "text": "🧠 Zhrnutie\n\nPremenná je pomenovaná hodnota, ktorú môžeme meniť.\nTyp premennej sa určuje automaticky.\nNajčastejšie typy: int, float, str, bool\nFunkcia type() zobrazí typ premennej.\nNázvy premenných musia dodržiavať pravidlá!",
    "crumbs": [
      "Domov",
      "🚀 Základy Pythonu",
      "Premenné a dátové typy"
    ]
  },
  {
    "objectID": "content/premenne_a_datove_typy.html#videonávod",
    "href": "content/premenne_a_datove_typy.html#videonávod",
    "title": "Premenné a dátové typy",
    "section": "🎞️ Videonávod",
    "text": "🎞️ Videonávod",
    "crumbs": [
      "Domov",
      "🚀 Základy Pythonu",
      "Premenné a dátové typy"
    ]
  },
  {
    "objectID": "content/operatory.html",
    "href": "content/operatory.html",
    "title": "Operátory",
    "section": "",
    "text": "Operátory slúžia na vykonávanie výpočtov a porovnávanie hodnôt. V Pythone sa rozdeľujú na aritmetické, relačné a logické.",
    "crumbs": [
      "Domov",
      "🚀 Základy Pythonu",
      "Operátory"
    ]
  },
  {
    "objectID": "content/operatory.html#úvod",
    "href": "content/operatory.html#úvod",
    "title": "Operátory",
    "section": "",
    "text": "Operátory slúžia na vykonávanie výpočtov a porovnávanie hodnôt. V Pythone sa rozdeľujú na aritmetické, relačné a logické.",
    "crumbs": [
      "Domov",
      "🚀 Základy Pythonu",
      "Operátory"
    ]
  },
  {
    "objectID": "content/operatory.html#aritmetické-operátory",
    "href": "content/operatory.html#aritmetické-operátory",
    "title": "Operátory",
    "section": "🔢 Aritmetické operátory",
    "text": "🔢 Aritmetické operátory\nPoužívajú sa na matematické výpočty s číslami (int, float).\n\n\n\nOperátor\nNázov\nPríklad\nVýsledok\n\n\n\n\n+\nsčítanie\n5 + 3\n8\n\n\n-\nodčítanie\n5 - 2\n3\n\n\n*\nnásobenie\n4 * 2\n8\n\n\n/\ndelenie (float)\n7 / 2\n3.5\n\n\n//\nceločíselné delenie\n7 // 2\n3\n\n\n%\nzvyšok po delení\n7 % 2\n1\n\n\n**\numocňovanie\n2 ** 3\n8\n\n\n\n\n\nKód\na = 7\nb = 2\nprint(a + b)\nprint(a // b)\nprint(a % b)\nprint(a ** b)\n\n\n9\n3\n1\n49",
    "crumbs": [
      "Domov",
      "🚀 Základy Pythonu",
      "Operátory"
    ]
  },
  {
    "objectID": "content/operatory.html#relačné-porovnávacie-operátory",
    "href": "content/operatory.html#relačné-porovnávacie-operátory",
    "title": "Operátory",
    "section": "⚖️ Relačné (porovnávacie) operátory",
    "text": "⚖️ Relačné (porovnávacie) operátory\nPorovnávajú dve hodnoty a vracajú True alebo False.\n\n\n\nOperátor\nNázov\nPríklad\nVýsledok\n\n\n\n\n==\nrovnosť\n5 == 5\nTrue\n\n\n!=\nnerovnosť\n5 != 3\nTrue\n\n\n&gt;\nväčší ako\n5 &gt; 3\nTrue\n\n\n&lt;\nmenší ako\n2 &lt; 1\nFalse\n\n\n&gt;=\nväčší alebo rovný\n5 &gt;= 5\nTrue\n\n\n&lt;=\nmenší alebo rovný\n4 &lt;= 6\nTrue\n\n\n\n\n\nKód\nx = 10\ny = 20\nprint(x == y)\nprint(x &lt; y)\nprint(x != y)\n\n\nFalse\nTrue\nTrue",
    "crumbs": [
      "Domov",
      "🚀 Základy Pythonu",
      "Operátory"
    ]
  },
  {
    "objectID": "content/operatory.html#logické-operátory",
    "href": "content/operatory.html#logické-operátory",
    "title": "Operátory",
    "section": "🔁 Logické operátory",
    "text": "🔁 Logické operátory\nSpojujú viacero logických podmienok.\n\n\n\nOperátor\nVýznam\nPríklad\nVýsledok\n\n\n\n\nand\nlogické a\nTrue and False\nFalse\n\n\nor\nlogické alebo\nTrue or False\nTrue\n\n\nnot\nlogická negácia\nnot True\nFalse\n\n\n\n\n\nKód\nx = 5\ny = 10\n\nprint(x &gt; 3 and y &lt; 20)\nprint(x &gt; 3 and y &gt; 20)\nprint(x &lt; 3 or y == 10)\nprint(not (x == 5))\n\n\nTrue\nFalse\nTrue\nFalse",
    "crumbs": [
      "Domov",
      "🚀 Základy Pythonu",
      "Operátory"
    ]
  },
  {
    "objectID": "content/operatory.html#zhrnutie",
    "href": "content/operatory.html#zhrnutie",
    "title": "Operátory",
    "section": "🧠 Zhrnutie",
    "text": "🧠 Zhrnutie\n\nAritmetické operátory: +, -, *, /, //, %, **\nRelačné operátory: ==, !=, &lt;, &gt;, &lt;=, &gt;=\nLogické operátory: and, or, not\nPorovnávanie vracia True alebo False\nLogické operácie sa často používajú v podmienkach (if)",
    "crumbs": [
      "Domov",
      "🚀 Základy Pythonu",
      "Operátory"
    ]
  },
  {
    "objectID": "content/operatory.html#videonávod",
    "href": "content/operatory.html#videonávod",
    "title": "Operátory",
    "section": "🎞️ Videonávod",
    "text": "🎞️ Videonávod",
    "crumbs": [
      "Domov",
      "🚀 Základy Pythonu",
      "Operátory"
    ]
  },
  {
    "objectID": "content/hello_world.html#zhrnutie",
    "href": "content/hello_world.html#zhrnutie",
    "title": "Prvé programy a výstup",
    "section": "🧠 Zhrnutie",
    "text": "🧠 Zhrnutie\n\nprint() je vstavaná funkcia, ktorá nevyžaduje žiadne knižnice.\nPoužíva sa na výpis textu, čísel, premenných aj výpočtov.\nKaždé volanie print() skončí automaticky novým riadkom.",
    "crumbs": [
      "Domov",
      "🚀 Základy Pythonu",
      "Prvé programy a výstup"
    ]
  },
  {
    "objectID": "content/vstup_input.html",
    "href": "content/vstup_input.html",
    "title": "Vstup od používateľa",
    "section": "",
    "text": "Funkcia input() slúži na získanie údajov od používateľa. Keď program zavolá input(), čaká, kým používateľ niečo zadá a stlačí Enter. Zadaný text sa vráti ako reťazec (str).\n\n⚠️ Kedže webová stránka nie je dynamická, je potrebné si kódy s funkciou ´input´ spustiť vo vlastnom prostredí.",
    "crumbs": [
      "Domov",
      "🚀 Základy Pythonu",
      "Vstup od používateľa"
    ]
  },
  {
    "objectID": "content/vstup_input.html#úvod",
    "href": "content/vstup_input.html#úvod",
    "title": "Vstup od používateľa",
    "section": "",
    "text": "Funkcia input() slúži na získanie údajov od používateľa. Keď program zavolá input(), čaká, kým používateľ niečo zadá a stlačí Enter. Zadaný text sa vráti ako reťazec (str).\n\n⚠️ Kedže webová stránka nie je dynamická, je potrebné si kódy s funkciou ´input´ spustiť vo vlastnom prostredí.",
    "crumbs": [
      "Domov",
      "🚀 Základy Pythonu",
      "Vstup od používateľa"
    ]
  },
  {
    "objectID": "content/vstup_input.html#základné-použitie",
    "href": "content/vstup_input.html#základné-použitie",
    "title": "Vstup od používateľa",
    "section": "🧪 Základné použitie",
    "text": "🧪 Základné použitie\n\n\nKód\nmeno = input(\"Ako sa voláš? \")\nprint(\"Ahoj,\", meno)",
    "crumbs": [
      "Domov",
      "🚀 Základy Pythonu",
      "Vstup od používateľa"
    ]
  },
  {
    "objectID": "content/vstup_input.html#hodnota-je-vždy-str",
    "href": "content/vstup_input.html#hodnota-je-vždy-str",
    "title": "Vstup od používateľa",
    "section": "📦 Hodnota je vždy str",
    "text": "📦 Hodnota je vždy str\n\n\nKód\nvek = input(\"Zadaj vek: \")\nprint(type(vek))",
    "crumbs": [
      "Domov",
      "🚀 Základy Pythonu",
      "Vstup od používateľa"
    ]
  },
  {
    "objectID": "content/vstup_input.html#prevod-na-číslo",
    "href": "content/vstup_input.html#prevod-na-číslo",
    "title": "Vstup od používateľa",
    "section": "🔁 Prevod na číslo",
    "text": "🔁 Prevod na číslo\n\n\nKód\nvek = input(\"Zadaj vek: \")\nvek = int(vek)\nprint(\"O rok budeš mať\", vek + 1)\n\n\n\n💡 Príklad\n\n\nKód\ncena = float(input(\"Zadaj cenu v €: \"))\nprint(\"Cena s DPH:\", cena * 1.23)",
    "crumbs": [
      "Domov",
      "🚀 Základy Pythonu",
      "Vstup od používateľa"
    ]
  },
  {
    "objectID": "content/vstup_input.html#chyby-pri-zlom-vstupe",
    "href": "content/vstup_input.html#chyby-pri-zlom-vstupe",
    "title": "Vstup od používateľa",
    "section": "💥 Chyby pri zlom vstupe",
    "text": "💥 Chyby pri zlom vstupe\n\n\nKód\n# cislo = int(input(\"Zadaj číslo: \"))  # Zadajte text ako \"abc\" a spôsobí chybu",
    "crumbs": [
      "Domov",
      "🚀 Základy Pythonu",
      "Vstup od používateľa"
    ]
  },
  {
    "objectID": "content/vstup_input.html#viac-vstupov-naraz-rozšírené",
    "href": "content/vstup_input.html#viac-vstupov-naraz-rozšírené",
    "title": "Vstup od používateľa",
    "section": "🔄 Viac vstupov naraz (rozšírené)",
    "text": "🔄 Viac vstupov naraz (rozšírené)\n\n\nKód\nx, y = input(\"Zadaj dve čísla: \").split()\nx = int(x)\ny = int(y)\nprint(\"Súčet:\", x + y)",
    "crumbs": [
      "Domov",
      "🚀 Základy Pythonu",
      "Vstup od používateľa"
    ]
  },
  {
    "objectID": "content/vstup_input.html#zhrnutie",
    "href": "content/vstup_input.html#zhrnutie",
    "title": "Vstup od používateľa",
    "section": "🧠 Zhrnutie",
    "text": "🧠 Zhrnutie\n\ninput() získa vstup od používateľa ako reťazec\nPre čísla použijeme int() alebo float() na prevod\nVstup môžeme priamo uložiť do premennej\nViac vstupov naraz oddelíme a spracujeme so split(), prípadne jednotlivé dopyty pomocou funckie input() odelíme v kóde.",
    "crumbs": [
      "Domov",
      "🚀 Základy Pythonu",
      "Vstup od používateľa"
    ]
  },
  {
    "objectID": "content/vstup_input.html#videonávod",
    "href": "content/vstup_input.html#videonávod",
    "title": "Vstup od používateľa",
    "section": "🎞️ Videonávod",
    "text": "🎞️ Videonávod",
    "crumbs": [
      "Domov",
      "🚀 Základy Pythonu",
      "Vstup od používateľa"
    ]
  },
  {
    "objectID": "content/vstup_input.html#viac-vstupov-naraz-extra",
    "href": "content/vstup_input.html#viac-vstupov-naraz-extra",
    "title": "Vstup od používateľa",
    "section": "🔄 Viac vstupov naraz (EXTRA)",
    "text": "🔄 Viac vstupov naraz (EXTRA)\n\n\nKód\nx, y = input(\"Zadaj dve čísla: \").split()\nx = int(x)\ny = int(y)\nprint(\"Súčet:\", x + y)",
    "crumbs": [
      "Domov",
      "🚀 Základy Pythonu",
      "Vstup od používateľa"
    ]
  },
  {
    "objectID": "content/vstup_input.html#bonus-viac-vstupov-naraz",
    "href": "content/vstup_input.html#bonus-viac-vstupov-naraz",
    "title": "Vstup od používateľa",
    "section": "🔄 BONUS: Viac vstupov naraz",
    "text": "🔄 BONUS: Viac vstupov naraz\n\n\nKód\nx, y = input(\"Zadaj dve čísla: \").split()\nx = int(x)\ny = int(y)\nprint(\"Súčet:\", x + y)",
    "crumbs": [
      "Domov",
      "🚀 Základy Pythonu",
      "Vstup od používateľa"
    ]
  },
  {
    "objectID": "content/vstup_input.html#viac-vstupov-naraz",
    "href": "content/vstup_input.html#viac-vstupov-naraz",
    "title": "Vstup od používateľa",
    "section": "🔄 Viac vstupov naraz",
    "text": "🔄 Viac vstupov naraz\n\n\nKód\nx, y = input(\"Zadaj dve čísla: \").split()\nx = int(x)\ny = int(y)\nprint(\"Súčet:\", x + y)",
    "crumbs": [
      "Domov",
      "🚀 Základy Pythonu",
      "Vstup od používateľa"
    ]
  },
  {
    "objectID": "content/type_a_konverzia.html",
    "href": "content/type_a_konverzia.html",
    "title": "Konverzia dátových typov",
    "section": "",
    "text": "Funkcia type() zistí, aký dátový typ má hodnota alebo premenná.",
    "crumbs": [
      "Domov",
      "🚀 Základy Pythonu",
      "Konverzia dátových typov"
    ]
  },
  {
    "objectID": "content/type_a_konverzia.html#úvod",
    "href": "content/type_a_konverzia.html#úvod",
    "title": "Konverzia dátových typov",
    "section": "",
    "text": "Funkcia type() zistí, aký dátový typ má hodnota alebo premenná.",
    "crumbs": [
      "Domov",
      "🚀 Základy Pythonu",
      "Konverzia dátových typov"
    ]
  },
  {
    "objectID": "content/type_a_konverzia.html#príklad",
    "href": "content/type_a_konverzia.html#príklad",
    "title": "Konverzia dátových typov",
    "section": "🧪 Príklad:",
    "text": "🧪 Príklad:\n\n\nKód\nprint(type(10))\nprint(type(3.14))\nprint(type(\"text\"))\nprint(type(True))\n\n\n&lt;class 'int'&gt;\n&lt;class 'float'&gt;\n&lt;class 'str'&gt;\n&lt;class 'bool'&gt;",
    "crumbs": [
      "Domov",
      "🚀 Základy Pythonu",
      "Konverzia dátových typov"
    ]
  },
  {
    "objectID": "content/type_a_konverzia.html#prevod-konverzia-medzi-typmi",
    "href": "content/type_a_konverzia.html#prevod-konverzia-medzi-typmi",
    "title": "Konverzia dátových typov",
    "section": "🔄 Prevod (konverzia) medzi typmi",
    "text": "🔄 Prevod (konverzia) medzi typmi\nPython umožňuje prevádzať hodnoty medzi typmi pomocou vstavaných funkcií:\n\n\n\nFunkcia\nÚčel\nPríklad\n\n\n\n\nint(x)\nna celé číslo\nint(\"5\") → 5\n\n\nfloat(x)\nna desatinné číslo\nfloat(\"3.14\")\n\n\nstr(x)\nna reťazec\nstr(10) → “10”\n\n\nbool(x)\nna logickú hodnotu\nbool(0) → False",
    "crumbs": [
      "Domov",
      "🚀 Základy Pythonu",
      "Konverzia dátových typov"
    ]
  },
  {
    "objectID": "content/type_a_konverzia.html#príklady-prevodov",
    "href": "content/type_a_konverzia.html#príklady-prevodov",
    "title": "Konverzia dátových typov",
    "section": "📦 Príklady prevodov",
    "text": "📦 Príklady prevodov\n\n\nKód\nx = \"42\"\ncislo = int(x)\nprint(cislo + 1)\n\ny = 3.14\ntext = str(y)\nprint(text + \"!\")\n\n\n43\n3.14!",
    "crumbs": [
      "Domov",
      "🚀 Základy Pythonu",
      "Konverzia dátových typov"
    ]
  },
  {
    "objectID": "content/type_a_konverzia.html#chybné-prevody",
    "href": "content/type_a_konverzia.html#chybné-prevody",
    "title": "Konverzia dátových typov",
    "section": "💥 Chybné prevody",
    "text": "💥 Chybné prevody\n\n\nKód\n# int(\"abc\")     # chyba: nedá sa previesť na číslo\n# float(\"3,14\")  # chyba: použi bodku namiesto čiarky",
    "crumbs": [
      "Domov",
      "🚀 Základy Pythonu",
      "Konverzia dátových typov"
    ]
  },
  {
    "objectID": "content/type_a_konverzia.html#zhrnutie",
    "href": "content/type_a_konverzia.html#zhrnutie",
    "title": "Konverzia dátových typov",
    "section": "🧠 Zhrnutie",
    "text": "🧠 Zhrnutie\n\ntype(x) zistí typ hodnoty alebo premennej.\nint(), float(), str(), bool() slúžia na prevody.\nNiektoré prevody môžu spôsobiť chybu, ak formát nie je správny.\nReťazec musí byť číselný, aby sa dal previesť na int alebo float.",
    "crumbs": [
      "Domov",
      "🚀 Základy Pythonu",
      "Konverzia dátových typov"
    ]
  },
  {
    "objectID": "content/type_a_konverzia.html#videonávod",
    "href": "content/type_a_konverzia.html#videonávod",
    "title": "Konverzia dátových typov",
    "section": "🎞️ Videonávod",
    "text": "🎞️ Videonávod",
    "crumbs": [
      "Domov",
      "🚀 Základy Pythonu",
      "Konverzia dátových typov"
    ]
  },
  {
    "objectID": "content/podmienky.html",
    "href": "content/podmienky.html",
    "title": "Podmienky",
    "section": "",
    "text": "Pomocou podmienok vieme rozhodovať, ktorý kód sa vykoná. Typicky na základe nejakého vstupu alebo výpočtu.\n\n⚠️ Všetok kód, ktorý patrí do if, else alebo elif, musí byť odsadený (zvyčajne 4 medzery alebo 1 tabulátor).",
    "crumbs": [
      "Domov",
      "🏗️ Riadiace štruktúry",
      "Podmienky"
    ]
  },
  {
    "objectID": "content/podmienky.html#úvod",
    "href": "content/podmienky.html#úvod",
    "title": "Podmienky",
    "section": "",
    "text": "Pomocou podmienok vieme rozhodovať, ktorý kód sa vykoná. Typicky na základe nejakého vstupu alebo výpočtu.\n\n⚠️ Všetok kód, ktorý patrí do if, else alebo elif, musí byť odsadený (zvyčajne 4 medzery alebo 1 tabulátor).",
    "crumbs": [
      "Domov",
      "🏗️ Riadiace štruktúry",
      "Podmienky"
    ]
  },
  {
    "objectID": "content/podmienky.html#základná-podmienka-if",
    "href": "content/podmienky.html#základná-podmienka-if",
    "title": "Podmienky",
    "section": "🧪 Základná podmienka if",
    "text": "🧪 Základná podmienka if\n\n\nKód\nvek = 18\n\nif vek &gt;= 18:\n    print(\"Máš prístup.\")\n\n\nMáš prístup.",
    "crumbs": [
      "Domov",
      "🏗️ Riadiace štruktúry",
      "Podmienky"
    ]
  },
  {
    "objectID": "content/podmienky.html#else-iná-možnosť",
    "href": "content/podmienky.html#else-iná-možnosť",
    "title": "Podmienky",
    "section": "➕ else – iná možnosť",
    "text": "➕ else – iná možnosť\n\n\nKód\nvek = 16\n\nif vek &gt;= 18:\n    print(\"Máš prístup.\")\nelse:\n    print(\"Prístup zamietnutý.\")\n\n\nPrístup zamietnutý.",
    "crumbs": [
      "Domov",
      "🏗️ Riadiace štruktúry",
      "Podmienky"
    ]
  },
  {
    "objectID": "content/podmienky.html#elif-ďalšie-možnosti",
    "href": "content/podmienky.html#elif-ďalšie-možnosti",
    "title": "Podmienky",
    "section": "🔁 elif – ďalšie možnosti",
    "text": "🔁 elif – ďalšie možnosti\n\n\nKód\nznámka = 3\n\nif známka == 1:\n    print(\"Výborný\")\nelif známka == 2:\n    print(\"Chválitebný\")\nelif známka == 3:\n    print(\"Dobrý\")\nelse:\n    print(\"Iná známka\")\n\n\nDobrý",
    "crumbs": [
      "Domov",
      "🏗️ Riadiace štruktúry",
      "Podmienky"
    ]
  },
  {
    "objectID": "content/podmienky.html#odsadenie",
    "href": "content/podmienky.html#odsadenie",
    "title": "Podmienky",
    "section": "🔧 Odsadenie",
    "text": "🔧 Odsadenie\nVšetok kód, ktorý patrí do if, else alebo elif, musí byť odsadený (zvyčajne 4 medzery alebo 1 tabulátor).\nChybný príklad:\nif 5 &gt; 3:\nprint(\"OK\")  # ❌ chyba – chýba odsadenie\nSprávne:\nif 5 &gt; 3:\n    print(\"OK\")  # ✅",
    "crumbs": [
      "Domov",
      "🏗️ Riadiace štruktúry",
      "Podmienky"
    ]
  },
  {
    "objectID": "content/podmienky.html#príklady",
    "href": "content/podmienky.html#príklady",
    "title": "Podmienky",
    "section": "💡 Príklady",
    "text": "💡 Príklady\n\n⚖️ Porovnanie čísel:\n\n\nKód\na = 5\nb = 10\n\nif a &gt; b:\n    print(\"a je väčšie\")\nelif a == b:\n    print(\"a a b sú rovnaké\")\nelse:\n    print(\"b je väčšie\")\n\n\nb je väčšie\n\n\n\n\n⌨️ S funckiou input()\n\n\nKód\nvek = int(input(\"Zadaj vek: \"))\n\nif vek &gt;= 18:\n    print(\"Plnoletý\")\nelse:\n    print(\"Neplnoletý\")\n\n\nZadaj vek:  21\n\n\nPlnoletý",
    "crumbs": [
      "Domov",
      "🏗️ Riadiace štruktúry",
      "Podmienky"
    ]
  },
  {
    "objectID": "content/podmienky.html#zhrnutie",
    "href": "content/podmienky.html#zhrnutie",
    "title": "Podmienky",
    "section": "🧠 Zhrnutie",
    "text": "🧠 Zhrnutie\n\nif – vykoná sa, ak je podmienka pravdivá\nelse – vykoná sa, ak if neplatí\nelif – pridáva ďalšie podmienky\nPodmienky porovnávajú hodnoty pomocou relačných (porovnávacích) operátorov: ==, !=, &gt;, &lt;, &gt;=, &lt;=\nKód vo vetvách musí byť odsadený",
    "crumbs": [
      "Domov",
      "🏗️ Riadiace štruktúry",
      "Podmienky"
    ]
  },
  {
    "objectID": "content/podmienky.html#videonávod",
    "href": "content/podmienky.html#videonávod",
    "title": "Podmienky",
    "section": "🎞️ Videonávod",
    "text": "🎞️ Videonávod",
    "crumbs": [
      "Domov",
      "🏗️ Riadiace štruktúry",
      "Podmienky"
    ]
  },
  {
    "objectID": "content/cykly.html",
    "href": "content/cykly.html",
    "title": "Cykly",
    "section": "",
    "text": "Cykly slúžia na opakované vykonanie kódu. V Pythone máme dva základné typy:\n\nfor – keď vieme, koľkokrát sa má niečo opakovať\nwhile – keď chceme opakovať, kým platí podmienka",
    "crumbs": [
      "Domov",
      "🏗️ Riadiace štruktúry",
      "Cykly"
    ]
  },
  {
    "objectID": "content/cykly.html#úvod",
    "href": "content/cykly.html#úvod",
    "title": "Cykly",
    "section": "",
    "text": "Cykly slúžia na opakované vykonanie kódu. V Pythone máme dva základné typy:\n\nfor – keď vieme, koľkokrát sa má niečo opakovať\nwhile – keď chceme opakovať, kým platí podmienka",
    "crumbs": [
      "Domov",
      "🏗️ Riadiace štruktúry",
      "Cykly"
    ]
  },
  {
    "objectID": "content/cykly.html#cyklus-for",
    "href": "content/cykly.html#cyklus-for",
    "title": "Cykly",
    "section": "🔂 Cyklus for",
    "text": "🔂 Cyklus for\n\n\nKód\nfor i in range(5):\n    print(\"Opakovanie:\", i)\n\n\nOpakovanie: 0\nOpakovanie: 1\nOpakovanie: 2\nOpakovanie: 3\nOpakovanie: 4\n\n\n\n🔢 range()\n\n\nKód\nfor i in range(1, 6):\n    print(i)  # 1 až 5\n\n\n1\n2\n3\n4\n5\n\n\n\n\nKód\nfor i in range(10, 0, -2):\n    print(i)  # 10, 8, 6, 4, 2\n\n\n10\n8\n6\n4\n2",
    "crumbs": [
      "Domov",
      "🏗️ Riadiace štruktúry",
      "Cykly"
    ]
  },
  {
    "objectID": "content/cykly.html#prechod-cez-znaky-reťazca-alebo-zoznam",
    "href": "content/cykly.html#prechod-cez-znaky-reťazca-alebo-zoznam",
    "title": "Cykly",
    "section": "🔁 Prechod cez znaky reťazca alebo zoznam",
    "text": "🔁 Prechod cez znaky reťazca alebo zoznam\n\n\nKód\ntext = \"Python\"\nfor znak in text:\n    print(znak)\n\n\nP\ny\nt\nh\no\nn\n\n\n\n\nKód\nzoznam = [3, 5, 7]\nfor cislo in zoznam:\n    print(cislo * 2)\n\n\n6\n10\n14",
    "crumbs": [
      "Domov",
      "🏗️ Riadiace štruktúry",
      "Cykly"
    ]
  },
  {
    "objectID": "content/cykly.html#cyklus-while",
    "href": "content/cykly.html#cyklus-while",
    "title": "Cykly",
    "section": "🔄 Cyklus while",
    "text": "🔄 Cyklus while\n\n\nKód\ni = 0\nwhile i &lt; 5:\n    print(i)\n    i += 1\n\n\n0\n1\n2\n3\n4",
    "crumbs": [
      "Domov",
      "🏗️ Riadiace štruktúry",
      "Cykly"
    ]
  },
  {
    "objectID": "content/cykly.html#nekonečný-cyklus",
    "href": "content/cykly.html#nekonečný-cyklus",
    "title": "Cykly",
    "section": "⚠️ Nekonečný cyklus",
    "text": "⚠️ Nekonečný cyklus\n\n\nKód\n# while True:\n#     print(\"Toto beží navždy!\")  # Zastavte klávesou Ctrl+C",
    "crumbs": [
      "Domov",
      "🏗️ Riadiace štruktúry",
      "Cykly"
    ]
  },
  {
    "objectID": "content/cykly.html#zhrnutie",
    "href": "content/cykly.html#zhrnutie",
    "title": "Cykly",
    "section": "🧠 Zhrnutie",
    "text": "🧠 Zhrnutie\n\nfor sa používa pri početných opakovaniach\nwhile sa používa pri podmienkach\nrange(start, stop, step) generuje čísla pre for\nDávaj pozor na nekonečné cykly (while True)",
    "crumbs": [
      "Domov",
      "🏗️ Riadiace štruktúry",
      "Cykly"
    ]
  },
  {
    "objectID": "content/cykly.html#videonávod",
    "href": "content/cykly.html#videonávod",
    "title": "Cykly",
    "section": "🎞️ Videonávod",
    "text": "🎞️ Videonávod",
    "crumbs": [
      "Domov",
      "🏗️ Riadiace štruktúry",
      "Cykly"
    ]
  },
  {
    "objectID": "content/komentovanie_kodu.html",
    "href": "content/komentovanie_kodu.html",
    "title": "Komentovanie kódu",
    "section": "",
    "text": "Komentáre slúžia na poznámky v kóde, ktoré neovplyvňujú beh programu. Používajú sa na vysvetlenie, čo kód robí, alebo na dočasné vypnutie časti kódu.",
    "crumbs": [
      "Domov",
      "🚀 Základy Pythonu",
      "Komentovanie kódu"
    ]
  },
  {
    "objectID": "content/komentovanie_kodu.html#úvod",
    "href": "content/komentovanie_kodu.html#úvod",
    "title": "Komentovanie kódu",
    "section": "",
    "text": "Komentáre slúžia na poznámky v kóde, ktoré neovplyvňujú beh programu. Používajú sa na vysvetlenie, čo kód robí, alebo na dočasné vypnutie časti kódu.",
    "crumbs": [
      "Domov",
      "🚀 Základy Pythonu",
      "Komentovanie kódu"
    ]
  },
  {
    "objectID": "content/komentovanie_kodu.html#jednoriadkový-komentár",
    "href": "content/komentovanie_kodu.html#jednoriadkový-komentár",
    "title": "Komentovanie kódu",
    "section": "📝 Jednoriadkový komentár",
    "text": "📝 Jednoriadkový komentár\nPoužite # na začiatku každého riadka:\n\n\nKód\n# Toto je komentár\nprint(\"Ahoj\")  # Tento riadok niečo vypíše\n\n\nAhoj",
    "crumbs": [
      "Domov",
      "🚀 Základy Pythonu",
      "Komentovanie kódu"
    ]
  },
  {
    "objectID": "content/komentovanie_kodu.html#viacero-komentárov",
    "href": "content/komentovanie_kodu.html#viacero-komentárov",
    "title": "Komentovanie kódu",
    "section": "🧾 Viacero komentárov",
    "text": "🧾 Viacero komentárov\n\n\nKód\n# Tento program spočíta súčet\na = 5\nb = 3\n# Spočítame a vypíšeme výsledok\nprint(a + b)\n\n\n8",
    "crumbs": [
      "Domov",
      "🚀 Základy Pythonu",
      "Komentovanie kódu"
    ]
  },
  {
    "objectID": "content/komentovanie_kodu.html#dočasné-zakázanie-kódu",
    "href": "content/komentovanie_kodu.html#dočasné-zakázanie-kódu",
    "title": "Komentovanie kódu",
    "section": "🛑 Dočasné zakázanie kódu",
    "text": "🛑 Dočasné zakázanie kódu\nKomentármi môžete zabrániť vykonaniu časti kódu, ktorú momentálne nechcete spustiť:\n\n\nKód\n# print(\"Tento riadok sa nespustí\")\nprint(\"Tento áno\")\n\n\nTento áno\n\n\n\n❕Toto je veľmi užitočné pri testovaní alebo ladení programu.",
    "crumbs": [
      "Domov",
      "🚀 Základy Pythonu",
      "Komentovanie kódu"
    ]
  },
  {
    "objectID": "content/komentovanie_kodu.html#viacriadkový-text",
    "href": "content/komentovanie_kodu.html#viacriadkový-text",
    "title": "Komentovanie kódu",
    "section": "❗ Viacriadkový text",
    "text": "❗ Viacriadkový text\nViacriadkový text možno napísať pomocou trojitých úvodzoviek (’’’ alebo “““), ale nie je to komentár – je to reťazec, ktorý však Python nedokáže spustiť.\n\n\nKód\n\"\"\"\nToto je viacriadkový text,\nktorý ale Python vníma ako reťazec.\n\"\"\"\n\n\n'\\nToto je viacriadkový text,\\nktorý ale Python vníma ako reťazec.\\n'",
    "crumbs": [
      "Domov",
      "🚀 Základy Pythonu",
      "Komentovanie kódu"
    ]
  },
  {
    "objectID": "content/komentovanie_kodu.html#zhrnutie",
    "href": "content/komentovanie_kodu.html#zhrnutie",
    "title": "Komentovanie kódu",
    "section": "🧠 Zhrnutie",
    "text": "🧠 Zhrnutie\n\nKomentáre píšeme pomocou #\nSlúžia na poznámky aj dočasné zakázanie kódu\nPomáhajú robiť kód prehľadnejší\nNie sú súčasťou vykonávaného programu",
    "crumbs": [
      "Domov",
      "🚀 Základy Pythonu",
      "Komentovanie kódu"
    ]
  },
  {
    "objectID": "content/komentovanie_kodu.html#videonávod",
    "href": "content/komentovanie_kodu.html#videonávod",
    "title": "Komentovanie kódu",
    "section": "🎞️ Videonávod",
    "text": "🎞️ Videonávod",
    "crumbs": [
      "Domov",
      "🚀 Základy Pythonu",
      "Komentovanie kódu"
    ]
  }
]