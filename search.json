[
  {
    "objectID": "wip.html",
    "href": "wip.html",
    "title": "🔧 Work in Progress",
    "section": "",
    "text": "🚧 Stránka vo výstavbe\nTento obsah je momentálne vo vývoji.\n🛠️ Pracujeme na jeho doplnení alebo úprave.\nProsím, vráťte sa neskôr.\n\n\nAk si myslíš, že tu niečo chýba alebo máš návrh na zlepšenie, nás kontaktuje.",
    "crumbs": [
      "Domov",
      "🛝 Pieskovisko",
      "🔧 Work in Progress"
    ]
  },
  {
    "objectID": "license.html",
    "href": "license.html",
    "title": "Licencia",
    "section": "",
    "text": "Táto vzdelávacia stránka je sprístupnená ako otvorený zdroj.\nRozlišujeme licenciu pre obsah a pre zdrojový kód.\n\n\n\nMateriály na tejto stránke (texty, obrázky, grafy a didaktické príklady) sú dostupné pod licenciou:\nCreative Commons Attribution-ShareAlike 4.0 International (CC BY-SA 4.0)\n\n\n\n✅ Kopírovať, šíriť, upravovať a využívať aj komerčne\n\n✅ Povinnosť uviesť autora a zdroj\n\n✅ Úpravy zdieľať pod rovnakou licenciou\n\n❌ Nemožno obmedzovať práva iných používateľov\n\nKrátke znenie:\n© 2025, Obsah je dostupný pod licenciou CC BY-SA 4.0.\n\n\n\n\n\nZdrojový kód priložený na tejto stránke je licencovaný pod:\nGNU General Public License v3.0 (GPL-3.0)\n\n\n\n✅ Voľne používať, upravovať a šíriť\n\n✅ Povinnosť zverejniť odvodené diela pod rovnakou licenciou\n\n✅ Povinnosť priložiť licenciu a upozorniť na zmeny\n\n❌ Nemožno meniť licenciu na uzavretú alebo obmedzujúcu\n\nKrátke znenie:\nKód je dostupný pod licenciou GNU GPL v3.0.\n\n\n\n\n\nPri citovaní alebo používaní materiálov vždy uveďte zdroj:\nNázov stránky, autor, rok a odkaz."
  },
  {
    "objectID": "license.html#obsah-texty-obrázky-návody",
    "href": "license.html#obsah-texty-obrázky-návody",
    "title": "Licencia",
    "section": "",
    "text": "Materiály na tejto stránke (texty, obrázky, grafy a didaktické príklady) sú dostupné pod licenciou:\nCreative Commons Attribution-ShareAlike 4.0 International (CC BY-SA 4.0)\n\n\n\n✅ Kopírovať, šíriť, upravovať a využívať aj komerčne\n\n✅ Povinnosť uviesť autora a zdroj\n\n✅ Úpravy zdieľať pod rovnakou licenciou\n\n❌ Nemožno obmedzovať práva iných používateľov\n\nKrátke znenie:\n© 2025, Obsah je dostupný pod licenciou CC BY-SA 4.0."
  },
  {
    "objectID": "license.html#zdrojový-kód-notebooky-skripty-príklady",
    "href": "license.html#zdrojový-kód-notebooky-skripty-príklady",
    "title": "Licencia",
    "section": "",
    "text": "Zdrojový kód priložený na tejto stránke je licencovaný pod:\nGNU General Public License v3.0 (GPL-3.0)\n\n\n\n✅ Voľne používať, upravovať a šíriť\n\n✅ Povinnosť zverejniť odvodené diela pod rovnakou licenciou\n\n✅ Povinnosť priložiť licenciu a upozorniť na zmeny\n\n❌ Nemožno meniť licenciu na uzavretú alebo obmedzujúcu\n\nKrátke znenie:\nKód je dostupný pod licenciou GNU GPL v3.0."
  },
  {
    "objectID": "license.html#ℹ-odporúčanie",
    "href": "license.html#ℹ-odporúčanie",
    "title": "Licencia",
    "section": "",
    "text": "Pri citovaní alebo používaní materiálov vždy uveďte zdroj:\nNázov stránky, autor, rok a odkaz."
  },
  {
    "objectID": "content/zoznamy.html",
    "href": "content/zoznamy.html",
    "title": "Zoznamy",
    "section": "",
    "text": "Zoznam (list) je usporiadaná kolekcia hodnôt. Môže obsahovať čísla, texty, iné zoznamy alebo kombináciu rôznych typov. Zoznamy sú základná dátová štruktúra v Pythone.",
    "crumbs": [
      "Domov",
      "💾 Dátové štruktúry",
      "Zoznamy"
    ]
  },
  {
    "objectID": "content/zoznamy.html#úvod",
    "href": "content/zoznamy.html#úvod",
    "title": "Zoznamy",
    "section": "",
    "text": "Zoznam (list) je usporiadaná kolekcia hodnôt. Môže obsahovať čísla, texty, iné zoznamy alebo kombináciu rôznych typov. Zoznamy sú základná dátová štruktúra v Pythone.",
    "crumbs": [
      "Domov",
      "💾 Dátové štruktúry",
      "Zoznamy"
    ]
  },
  {
    "objectID": "content/zoznamy.html#vytvorenie-zoznamu",
    "href": "content/zoznamy.html#vytvorenie-zoznamu",
    "title": "Zoznamy",
    "section": "🧪 Vytvorenie zoznamu",
    "text": "🧪 Vytvorenie zoznamu\n\n\nKód\ncisla = [1, 2, 3] # Číselný zoznam (vektor)\nslova = [\"jablko\", \"banán\", \"kiwi\"] # Zoznam s textovými reťazcami\nzmiesany = [1, \"text\", True] # Zoznam so zmiešanými dátovými typmi\nprazdny = [] # Prázdny zoznam\n\n\n\n❕ Zoznam je definovaný pomocou []. ❕ Jednotlivé prvky sú oddelené čiarkou.",
    "crumbs": [
      "Domov",
      "💾 Dátové štruktúry",
      "Zoznamy"
    ]
  },
  {
    "objectID": "content/zoznamy.html#prístup-k-prvkom",
    "href": "content/zoznamy.html#prístup-k-prvkom",
    "title": "Zoznamy",
    "section": "🔢 Prístup k prvkom",
    "text": "🔢 Prístup k prvkom\n\n\nKód\novocie = [\"jablko\", \"banán\", \"kiwi\"]\nprint(ovocie[0])\nprint(ovocie[1])\n\n\njablko\nbanán\n\n\n\n❗ Indexovanie zoznamu začína od 0.",
    "crumbs": [
      "Domov",
      "💾 Dátové štruktúry",
      "Zoznamy"
    ]
  },
  {
    "objectID": "content/zoznamy.html#iterácia-cez-zoznam",
    "href": "content/zoznamy.html#iterácia-cez-zoznam",
    "title": "Zoznamy",
    "section": "🔄 Iterácia cez zoznam",
    "text": "🔄 Iterácia cez zoznam\n\n\nKód\nfor polozka in ovocie:\n    print(polozka)\n\n\njablko\nbanán\nkiwi",
    "crumbs": [
      "Domov",
      "💾 Dátové štruktúry",
      "Zoznamy"
    ]
  },
  {
    "objectID": "content/zoznamy.html#zmena-hodnoty",
    "href": "content/zoznamy.html#zmena-hodnoty",
    "title": "Zoznamy",
    "section": "✏️ Zmena hodnoty",
    "text": "✏️ Zmena hodnoty\n\n\nKód\novocie[1] = \"hruška\"\nprint(ovocie)\n\n\n['jablko', 'hruška', 'kiwi']\n\n\n\n❗ Hodnota v zozname na danom indexe sa prepíše",
    "crumbs": [
      "Domov",
      "💾 Dátové štruktúry",
      "Zoznamy"
    ]
  },
  {
    "objectID": "content/zoznamy.html#pridanie-prvkov",
    "href": "content/zoznamy.html#pridanie-prvkov",
    "title": "Zoznamy",
    "section": "➕ Pridanie prvkov",
    "text": "➕ Pridanie prvkov\n\nNa koniec zoznamu\n\n\nKód\novocie.append(\"pomaranč\") \nprint(ovocie)\n\n\n['jablko', 'hruška', 'kiwi', 'pomaranč']\n\n\n\n\nNa konkrétne miesto (index)\n\n\nKód\novocie.insert(1, \"slivka\")\nprint(ovocie)\n\n\n['jablko', 'slivka', 'hruška', 'kiwi', 'pomaranč']",
    "crumbs": [
      "Domov",
      "💾 Dátové štruktúry",
      "Zoznamy"
    ]
  },
  {
    "objectID": "content/zoznamy.html#odstránenie-prvkov",
    "href": "content/zoznamy.html#odstránenie-prvkov",
    "title": "Zoznamy",
    "section": "❌ Odstránenie prvkov",
    "text": "❌ Odstránenie prvkov\n\nOdstránenie prvku podľa hodnoty\n\n\nKód\novocie.remove(\"hruška\")\nprint(ovocie)\n\n\n['jablko', 'slivka', 'kiwi', 'pomaranč']\n\n\n\n\nOdstránenie prvku podľa indexu\n\n\nKód\ndel ovocie[0]\nprint(ovocie)\n\n\n['slivka', 'kiwi', 'pomaranč']",
    "crumbs": [
      "Domov",
      "💾 Dátové štruktúry",
      "Zoznamy"
    ]
  },
  {
    "objectID": "content/zoznamy.html#dĺžka-zoznamu",
    "href": "content/zoznamy.html#dĺžka-zoznamu",
    "title": "Zoznamy",
    "section": "📏 Dĺžka zoznamu",
    "text": "📏 Dĺžka zoznamu\n\n\nKód\nprint(len(ovocie))\n\n\n3",
    "crumbs": [
      "Domov",
      "💾 Dátové štruktúry",
      "Zoznamy"
    ]
  },
  {
    "objectID": "content/zoznamy.html#hľadanie-v-zozname",
    "href": "content/zoznamy.html#hľadanie-v-zozname",
    "title": "Zoznamy",
    "section": "🔍 Hľadanie v zozname",
    "text": "🔍 Hľadanie v zozname\n\n\nKód\nif \"kiwi\" in ovocie:\n    print(\"Je tam!\")\n\n\nJe tam!",
    "crumbs": [
      "Domov",
      "💾 Dátové štruktúry",
      "Zoznamy"
    ]
  },
  {
    "objectID": "content/zoznamy.html#vyprázdnenie-zoznamu",
    "href": "content/zoznamy.html#vyprázdnenie-zoznamu",
    "title": "Zoznamy",
    "section": "🧹 Vyprázdnenie zoznamu",
    "text": "🧹 Vyprázdnenie zoznamu\n\n\nKód\novocie.clear()\nprint(ovocie)\n\n\n[]",
    "crumbs": [
      "Domov",
      "💾 Dátové štruktúry",
      "Zoznamy"
    ]
  },
  {
    "objectID": "content/zoznamy.html#zoznamy-môžu-obsahovať-zoznamy",
    "href": "content/zoznamy.html#zoznamy-môžu-obsahovať-zoznamy",
    "title": "Zoznamy",
    "section": "💡 Zoznamy môžu obsahovať zoznamy",
    "text": "💡 Zoznamy môžu obsahovať zoznamy\n\n\nKód\nm = [[1, 2], [3, 4]]\nprint(m[1][0])\n\n\n3\n\n\n\n💡 Takýmto spôsobom je jednoduché reprezentovať maticu (riadky a stĺpce)",
    "crumbs": [
      "Domov",
      "💾 Dátové štruktúry",
      "Zoznamy"
    ]
  },
  {
    "objectID": "content/zoznamy.html#zhrnutie",
    "href": "content/zoznamy.html#zhrnutie",
    "title": "Zoznamy",
    "section": "🧠 Zhrnutie",
    "text": "🧠 Zhrnutie\n\nZoznam (list) je usporiadaná kolekcia hodnôt\nIndexovanie začína od 0\nZoznam vieme meniť – pridávať, mazať, nahrádzať prvky\nfor cyklus je vhodný na prechod zoznamom\nZoznamy sú dynamické – môžu rásť alebo sa vyprázdniť",
    "crumbs": [
      "Domov",
      "💾 Dátové štruktúry",
      "Zoznamy"
    ]
  },
  {
    "objectID": "content/zoznamy.html#videonávod",
    "href": "content/zoznamy.html#videonávod",
    "title": "Zoznamy",
    "section": "🎞️ Videonávod",
    "text": "🎞️ Videonávod",
    "crumbs": [
      "Domov",
      "💾 Dátové štruktúry",
      "Zoznamy"
    ]
  },
  {
    "objectID": "content/vnorene_cykly.html",
    "href": "content/vnorene_cykly.html",
    "title": "Vnorené cykly a podmienky",
    "section": "",
    "text": "Vnorený cyklus znamená, že máme jeden cyklus vo vnútri druhého. Podobne môžeme vkladať aj podmienky (if) do cyklov, aby sme kontrolovali špecifické situácie pri opakovaní.",
    "crumbs": [
      "Domov",
      "🏗️ Riadiace štruktúry",
      "Vnorené cykly a podmienky"
    ]
  },
  {
    "objectID": "content/vnorene_cykly.html#úvod",
    "href": "content/vnorene_cykly.html#úvod",
    "title": "Vnorené cykly a podmienky",
    "section": "",
    "text": "Vnorený cyklus znamená, že máme jeden cyklus vo vnútri druhého. Podobne môžeme vkladať aj podmienky (if) do cyklov, aby sme kontrolovali špecifické situácie pri opakovaní.",
    "crumbs": [
      "Domov",
      "🏗️ Riadiace štruktúry",
      "Vnorené cykly a podmienky"
    ]
  },
  {
    "objectID": "content/vnorene_cykly.html#vnorený-for-cyklus",
    "href": "content/vnorene_cykly.html#vnorený-for-cyklus",
    "title": "Vnorené cykly a podmienky",
    "section": "🔂 Vnorený for cyklus",
    "text": "🔂 Vnorený for cyklus\n\n\nKód\nfor i in range(3):\n    for j in range(2):\n        print(f\"i={i}, j={j}\")\n\n\ni=0, j=0\ni=0, j=1\ni=1, j=0\ni=1, j=1\ni=2, j=0\ni=2, j=1\n\n\n\n📦 Príklad – tabuľka násobkov\n\n\nKód\nfor riadok in range(1, 4):\n    for stlpec in range(1, 6):\n        print(riadok * stlpec, end=\"\\t\")\n    print()\n\n\n1   2   3   4   5   \n2   4   6   8   10  \n3   6   9   12  15",
    "crumbs": [
      "Domov",
      "🏗️ Riadiace štruktúry",
      "Vnorené cykly a podmienky"
    ]
  },
  {
    "objectID": "content/vnorene_cykly.html#kombinácia-while-vo-for-a-naopak",
    "href": "content/vnorene_cykly.html#kombinácia-while-vo-for-a-naopak",
    "title": "Vnorené cykly a podmienky",
    "section": "🔁 Kombinácia while vo for (a naopak)",
    "text": "🔁 Kombinácia while vo for (a naopak)\n\n\nKód\ni = 0\nwhile i &lt; 3:\n    for j in range(2):\n        print(f\"{i=}, {j=}\")\n    i += 1\n\n\ni=0, j=0\ni=0, j=1\ni=1, j=0\ni=1, j=1\ni=2, j=0\ni=2, j=1",
    "crumbs": [
      "Domov",
      "🏗️ Riadiace štruktúry",
      "Vnorené cykly a podmienky"
    ]
  },
  {
    "objectID": "content/vnorene_cykly.html#podmienky-vo-vnútri-cyklu",
    "href": "content/vnorene_cykly.html#podmienky-vo-vnútri-cyklu",
    "title": "Vnorené cykly a podmienky",
    "section": "🔍 Podmienky vo vnútri cyklu",
    "text": "🔍 Podmienky vo vnútri cyklu\n\n\nKód\nfor i in range(10):\n    if i % 2 == 0:\n        print(i, \"je párne\")\n\n\n0 je párne\n2 je párne\n4 je párne\n6 je párne\n8 je párne",
    "crumbs": [
      "Domov",
      "🏗️ Riadiace štruktúry",
      "Vnorené cykly a podmienky"
    ]
  },
  {
    "objectID": "content/vnorene_cykly.html#vnorený-if-vo-vnorenom-for",
    "href": "content/vnorene_cykly.html#vnorený-if-vo-vnorenom-for",
    "title": "Vnorené cykly a podmienky",
    "section": "🧠 Vnorený if vo vnorenom for",
    "text": "🧠 Vnorený if vo vnorenom for\n\n\nKód\nfor x in range(3):\n    for y in range(3):\n        if x == y:\n            print(f\"Na diagonále: ({x},{y})\")\n\n\nNa diagonále: (0,0)\nNa diagonále: (1,1)\nNa diagonále: (2,2)",
    "crumbs": [
      "Domov",
      "🏗️ Riadiace štruktúry",
      "Vnorené cykly a podmienky"
    ]
  },
  {
    "objectID": "content/vnorene_cykly.html#break-predčasné-ukončenie-cyklu",
    "href": "content/vnorene_cykly.html#break-predčasné-ukončenie-cyklu",
    "title": "Vnorené cykly a podmienky",
    "section": "🛑 break – predčasné ukončenie cyklu",
    "text": "🛑 break – predčasné ukončenie cyklu\n\n\nKód\nfor i in range(10):\n    if i == 5:\n        break\n    print(i)\n\n\n0\n1\n2\n3\n4",
    "crumbs": [
      "Domov",
      "🏗️ Riadiace štruktúry",
      "Vnorené cykly a podmienky"
    ]
  },
  {
    "objectID": "content/vnorene_cykly.html#continue-preskočenie-iterácie",
    "href": "content/vnorene_cykly.html#continue-preskočenie-iterácie",
    "title": "Vnorené cykly a podmienky",
    "section": "⏭️ continue – preskočenie iterácie",
    "text": "⏭️ continue – preskočenie iterácie\n\n\nKód\nfor i in range(5):\n    if i == 2:\n        continue\n    print(i)\n\n\n0\n1\n3\n4",
    "crumbs": [
      "Domov",
      "🏗️ Riadiace štruktúry",
      "Vnorené cykly a podmienky"
    ]
  },
  {
    "objectID": "content/vnorene_cykly.html#zhrnutie",
    "href": "content/vnorene_cykly.html#zhrnutie",
    "title": "Vnorené cykly a podmienky",
    "section": "🧠 Zhrnutie",
    "text": "🧠 Zhrnutie\n\nCykly môžeme vkladať do seba (vnorené cykly)\nDo cyklu môžeme vložiť if, break, continue\nbreak ukončí cyklus, continue preskočí zvyšok iterácie\nDbajte na správne odsadenie a prehľadnosť vnoreného kódu",
    "crumbs": [
      "Domov",
      "🏗️ Riadiace štruktúry",
      "Vnorené cykly a podmienky"
    ]
  },
  {
    "objectID": "content/vnorene_cykly.html#videonávod",
    "href": "content/vnorene_cykly.html#videonávod",
    "title": "Vnorené cykly a podmienky",
    "section": "🎞️ Videonávod",
    "text": "🎞️ Videonávod",
    "crumbs": [
      "Domov",
      "🏗️ Riadiace štruktúry",
      "Vnorené cykly a podmienky"
    ]
  },
  {
    "objectID": "content/type_a_konverzia.html",
    "href": "content/type_a_konverzia.html",
    "title": "Konverzia dátových typov",
    "section": "",
    "text": "Funkcia type() zistí, aký dátový typ má hodnota alebo premenná.",
    "crumbs": [
      "Domov",
      "🚀 Základy Pythonu",
      "Konverzia dátových typov"
    ]
  },
  {
    "objectID": "content/type_a_konverzia.html#úvod",
    "href": "content/type_a_konverzia.html#úvod",
    "title": "Konverzia dátových typov",
    "section": "",
    "text": "Funkcia type() zistí, aký dátový typ má hodnota alebo premenná.",
    "crumbs": [
      "Domov",
      "🚀 Základy Pythonu",
      "Konverzia dátových typov"
    ]
  },
  {
    "objectID": "content/type_a_konverzia.html#príklad",
    "href": "content/type_a_konverzia.html#príklad",
    "title": "Konverzia dátových typov",
    "section": "🧪 Príklad:",
    "text": "🧪 Príklad:\n\n\nKód\nprint(type(10))\nprint(type(3.14))\nprint(type(\"text\"))\nprint(type(True))\n\n\n&lt;class 'int'&gt;\n&lt;class 'float'&gt;\n&lt;class 'str'&gt;\n&lt;class 'bool'&gt;",
    "crumbs": [
      "Domov",
      "🚀 Základy Pythonu",
      "Konverzia dátových typov"
    ]
  },
  {
    "objectID": "content/type_a_konverzia.html#prevod-konverzia-medzi-typmi",
    "href": "content/type_a_konverzia.html#prevod-konverzia-medzi-typmi",
    "title": "Konverzia dátových typov",
    "section": "🔄 Prevod (konverzia) medzi typmi",
    "text": "🔄 Prevod (konverzia) medzi typmi\nPython umožňuje prevádzať hodnoty medzi typmi pomocou vstavaných funkcií:\n\n\n\nFunkcia\nÚčel\nPríklad\n\n\n\n\nint(x)\nna celé číslo\nint(\"5\") → 5\n\n\nfloat(x)\nna desatinné číslo\nfloat(\"3.14\")\n\n\nstr(x)\nna reťazec\nstr(10) → “10”\n\n\nbool(x)\nna logickú hodnotu\nbool(0) → False",
    "crumbs": [
      "Domov",
      "🚀 Základy Pythonu",
      "Konverzia dátových typov"
    ]
  },
  {
    "objectID": "content/type_a_konverzia.html#príklady-prevodov",
    "href": "content/type_a_konverzia.html#príklady-prevodov",
    "title": "Konverzia dátových typov",
    "section": "📦 Príklady prevodov",
    "text": "📦 Príklady prevodov\n\n\nKód\nx = \"42\"\ncislo = int(x)\nprint(cislo + 1)\n\ny = 3.14\ntext = str(y)\nprint(text + \"!\")\n\n\n43\n3.14!",
    "crumbs": [
      "Domov",
      "🚀 Základy Pythonu",
      "Konverzia dátových typov"
    ]
  },
  {
    "objectID": "content/type_a_konverzia.html#chybné-prevody",
    "href": "content/type_a_konverzia.html#chybné-prevody",
    "title": "Konverzia dátových typov",
    "section": "💥 Chybné prevody",
    "text": "💥 Chybné prevody\n\n\nKód\n# int(\"abc\")     # chyba: nedá sa previesť na číslo\n# float(\"3,14\")  # chyba: použi bodku namiesto čiarky",
    "crumbs": [
      "Domov",
      "🚀 Základy Pythonu",
      "Konverzia dátových typov"
    ]
  },
  {
    "objectID": "content/type_a_konverzia.html#zhrnutie",
    "href": "content/type_a_konverzia.html#zhrnutie",
    "title": "Konverzia dátových typov",
    "section": "🧠 Zhrnutie",
    "text": "🧠 Zhrnutie\n\ntype(x) zistí typ hodnoty alebo premennej.\nint(), float(), str(), bool() slúžia na prevody.\nNiektoré prevody môžu spôsobiť chybu, ak formát nie je správny.\nReťazec musí byť číselný, aby sa dal previesť na int alebo float.",
    "crumbs": [
      "Domov",
      "🚀 Základy Pythonu",
      "Konverzia dátových typov"
    ]
  },
  {
    "objectID": "content/type_a_konverzia.html#videonávod",
    "href": "content/type_a_konverzia.html#videonávod",
    "title": "Konverzia dátových typov",
    "section": "🎞️ Videonávod",
    "text": "🎞️ Videonávod",
    "crumbs": [
      "Domov",
      "🚀 Základy Pythonu",
      "Konverzia dátových typov"
    ]
  },
  {
    "objectID": "content/sympy_rovnice.html",
    "href": "content/sympy_rovnice.html",
    "title": "Riešenie rovníc a sústav",
    "section": "",
    "text": "V tejto kapitole prejdeme spôsoby riešenia jednoduchých rovníc a sústav v SymPy:",
    "crumbs": [
      "Domov",
      "📚 Knižnice",
      "🧮 SymPy",
      "Riešenie rovníc a sústav"
    ]
  },
  {
    "objectID": "content/sympy_rovnice.html#úvod",
    "href": "content/sympy_rovnice.html#úvod",
    "title": "Riešenie rovníc a sústav",
    "section": "",
    "text": "V tejto kapitole prejdeme spôsoby riešenia jednoduchých rovníc a sústav v SymPy:",
    "crumbs": [
      "Domov",
      "📚 Knižnice",
      "🧮 SymPy",
      "Riešenie rovníc a sústav"
    ]
  },
  {
    "objectID": "content/sympy_rovnice.html#definovanie-rovnice",
    "href": "content/sympy_rovnice.html#definovanie-rovnice",
    "title": "Riešenie rovníc a sústav",
    "section": "🟰 Definovanie rovnice",
    "text": "🟰 Definovanie rovnice\n\n\nKód\nimport sympy as sp\n\n\n\n\nKód\nx, y = sp.symbols('x y')\nrovnica = sp.Eq(2*x + 3, 11)   # 2x + 3 = 11",
    "crumbs": [
      "Domov",
      "📚 Knižnice",
      "🧮 SymPy",
      "Riešenie rovníc a sústav"
    ]
  },
  {
    "objectID": "content/sympy_rovnice.html#solve-vs.-solveset",
    "href": "content/sympy_rovnice.html#solve-vs.-solveset",
    "title": "Riešenie rovníc a sústav",
    "section": "🆚 solve vs. solveset",
    "text": "🆚 solve vs. solveset\n\nsolve(expr, x) hľadá korene rovnice expr = 0 a vracia zoznam/dict.\nsolveset(expr, x, domain=...) vracia množinu riešení a pracuje lepšie s doménami (ℝ/ℂ).",
    "crumbs": [
      "Domov",
      "📚 Knižnice",
      "🧮 SymPy",
      "Riešenie rovníc a sústav"
    ]
  },
  {
    "objectID": "content/sympy_rovnice.html#riešenie-jednoduchých-rovníc",
    "href": "content/sympy_rovnice.html#riešenie-jednoduchých-rovníc",
    "title": "Riešenie rovníc a sústav",
    "section": "1️⃣ Riešenie jednoduchých rovníc",
    "text": "1️⃣ Riešenie jednoduchých rovníc\n\nRiešenie s výrazom rovným 0\n\n\nKód\nsp.solve(2*x + 3 - 11, x) # 2x + 3 = 11\n\n\n[4]\n\n\n\n\nKód\nsp.solveset(2*x + 3 - 11, x) \n\n\n\\(\\displaystyle \\left\\{4\\right\\}\\)\n\n\n\n\nRiešenie s definovanou rovnicou\n\n\nKód\nsp.solve(rovnica, x)\n\n\n[4]\n\n\n\n\nKód\nsp.solveset(rovnica, x)\n\n\n\\(\\displaystyle \\left\\{4\\right\\}\\)",
    "crumbs": [
      "Domov",
      "📚 Knižnice",
      "🧮 SymPy",
      "Riešenie rovníc a sústav"
    ]
  },
  {
    "objectID": "content/sympy_rovnice.html#riešenie-sústav-rovníc",
    "href": "content/sympy_rovnice.html#riešenie-sústav-rovníc",
    "title": "Riešenie rovníc a sústav",
    "section": "🔡 Riešenie sústav rovníc",
    "text": "🔡 Riešenie sústav rovníc\n\n\nKód\nrovnica_1 = sp.Eq(2*x + y, 5)   # 2x + y = 5\nrovnica_2 = sp.Eq(-x + 3*y, 1)  # -x + 3y = 1\n\nsp.solve([rovnica_1, rovnica_2], (x, y))   # {x: 2, y: 1}\n\n\n{x: 2, y: 1}",
    "crumbs": [
      "Domov",
      "📚 Knižnice",
      "🧮 SymPy",
      "Riešenie rovníc a sústav"
    ]
  },
  {
    "objectID": "content/sympy_rovnice.html#zhrnutie",
    "href": "content/sympy_rovnice.html#zhrnutie",
    "title": "Riešenie rovníc a sústav",
    "section": "🧠 Zhrnutie",
    "text": "🧠 Zhrnutie\n\nJedna premenná: preferovaný solveset(expr, x, domain=...) (ℝ/ℂ).\nLineárne sústavy: linsolve (vracia množinu riešení, zvláda aj parametre).\nNelineárne sústavy: nonlinsolve (symbolicky), nsolve (numericky, potrebuje odhad).\nOverenie: Eq + substitúcia + simplify().",
    "crumbs": [
      "Domov",
      "📚 Knižnice",
      "🧮 SymPy",
      "Riešenie rovníc a sústav"
    ]
  },
  {
    "objectID": "content/sympy_rovnice.html#oficiálna-dokumentácia-sympy",
    "href": "content/sympy_rovnice.html#oficiálna-dokumentácia-sympy",
    "title": "Riešenie rovníc a sústav",
    "section": "📚 Oficiálna dokumentácia SymPy",
    "text": "📚 Oficiálna dokumentácia SymPy\nPodrobný popis funkcií, ich parametrov a príkladov použitia nájdete v oficiálnej dokumentácii knižnice SymPy na adrese: https://docs.sympy.org/latest/index.html.",
    "crumbs": [
      "Domov",
      "📚 Knižnice",
      "🧮 SymPy",
      "Riešenie rovníc a sústav"
    ]
  },
  {
    "objectID": "content/sympy_rovnice.html#videonávod",
    "href": "content/sympy_rovnice.html#videonávod",
    "title": "Riešenie rovníc a sústav",
    "section": "🎞️ Videonávod",
    "text": "🎞️ Videonávod",
    "crumbs": [
      "Domov",
      "📚 Knižnice",
      "🧮 SymPy",
      "Riešenie rovníc a sústav"
    ]
  },
  {
    "objectID": "content/slovniky.html",
    "href": "content/slovniky.html",
    "title": "Slovníky",
    "section": "",
    "text": "Slovník (dict) je kolekcia párov kľúč: hodnota. Hodnoty získavame cez kľúče, nie cez indexy ako pri zoznamoch.",
    "crumbs": [
      "Domov",
      "💾 Dátové štruktúry",
      "Slovníky"
    ]
  },
  {
    "objectID": "content/slovniky.html#úvod",
    "href": "content/slovniky.html#úvod",
    "title": "Slovníky",
    "section": "",
    "text": "Slovník (dict) je kolekcia párov kľúč: hodnota. Hodnoty získavame cez kľúče, nie cez indexy ako pri zoznamoch.",
    "crumbs": [
      "Domov",
      "💾 Dátové štruktúry",
      "Slovníky"
    ]
  },
  {
    "objectID": "content/slovniky.html#vytvorenie-slovníka",
    "href": "content/slovniky.html#vytvorenie-slovníka",
    "title": "Slovníky",
    "section": "🧪 Vytvorenie slovníka",
    "text": "🧪 Vytvorenie slovníka\n\n\nKód\nosoba = {\"meno\": \"Anna\", \"vek\": 25, \"student\": True}",
    "crumbs": [
      "Domov",
      "💾 Dátové štruktúry",
      "Slovníky"
    ]
  },
  {
    "objectID": "content/slovniky.html#prístup-k-hodnote-pomocou-kľúča",
    "href": "content/slovniky.html#prístup-k-hodnote-pomocou-kľúča",
    "title": "Slovníky",
    "section": "🔍 Prístup k hodnote pomocou kľúča",
    "text": "🔍 Prístup k hodnote pomocou kľúča\n\n\nKód\nprint(osoba[\"meno\"])\nprint(osoba[\"vek\"])\n\n\nAnna\n25",
    "crumbs": [
      "Domov",
      "💾 Dátové štruktúry",
      "Slovníky"
    ]
  },
  {
    "objectID": "content/slovniky.html#zmena-a-pridanie-hodnoty",
    "href": "content/slovniky.html#zmena-a-pridanie-hodnoty",
    "title": "Slovníky",
    "section": "✏️ Zmena a pridanie hodnoty",
    "text": "✏️ Zmena a pridanie hodnoty\n\n\nKód\nosoba[\"vek\"] = 26\nosoba[\"mesto\"] = \"Bratislava\"\nprint(osoba)\n\n\n{'meno': 'Anna', 'vek': 26, 'student': True, 'mesto': 'Bratislava'}",
    "crumbs": [
      "Domov",
      "💾 Dátové štruktúry",
      "Slovníky"
    ]
  },
  {
    "objectID": "content/slovniky.html#odstránenie-prvkov",
    "href": "content/slovniky.html#odstránenie-prvkov",
    "title": "Slovníky",
    "section": "❌ Odstránenie prvkov",
    "text": "❌ Odstránenie prvkov\n\n\nKód\ndel osoba[\"student\"]\nprint(osoba)\n\n\n{'meno': 'Anna', 'vek': 26, 'mesto': 'Bratislava'}",
    "crumbs": [
      "Domov",
      "💾 Dátové štruktúry",
      "Slovníky"
    ]
  },
  {
    "objectID": "content/slovniky.html#iterácia-cez-slovník",
    "href": "content/slovniky.html#iterácia-cez-slovník",
    "title": "Slovníky",
    "section": "📜 Iterácia cez slovník",
    "text": "📜 Iterácia cez slovník\n\n\nKód\nfor kluc, hodnota in osoba.items():\n    print(kluc, \"→\", hodnota)\n\n\nmeno → Anna\nvek → 26\nmesto → Bratislava",
    "crumbs": [
      "Domov",
      "💾 Dátové štruktúry",
      "Slovníky"
    ]
  },
  {
    "objectID": "content/slovniky.html#užitočné-metódy",
    "href": "content/slovniky.html#užitočné-metódy",
    "title": "Slovníky",
    "section": "🧰 Užitočné metódy",
    "text": "🧰 Užitočné metódy\n\nVypísanie všetkých kľúčov v slovníku\n\n\nKód\nprint(osoba.keys())      # všetky kľúče\n\n\ndict_keys(['meno', 'vek', 'mesto'])\n\n\n\n\nVypísanie všetkých hodnôt v slovníku\n\n\nKód\nprint(osoba.values())    # všetky hodnoty\n\n\ndict_values(['Anna', 26, 'Bratislava'])\n\n\n\n\nVypísanie všetkých párov v slovníku\n\n\nKód\nprint(osoba.items())     # všetky páry\n\n\ndict_items([('meno', 'Anna'), ('vek', 26), ('mesto', 'Bratislava')])",
    "crumbs": [
      "Domov",
      "💾 Dátové štruktúry",
      "Slovníky"
    ]
  },
  {
    "objectID": "content/slovniky.html#overenie-existencie-kľúča",
    "href": "content/slovniky.html#overenie-existencie-kľúča",
    "title": "Slovníky",
    "section": "🔎 Overenie existencie kľúča",
    "text": "🔎 Overenie existencie kľúča\n\n\nKód\nif \"vek\" in osoba:\n    print(\"Kľúč 'vek' existuje!\")\n\n\nKľúč 'vek' existuje!",
    "crumbs": [
      "Domov",
      "💾 Dátové štruktúry",
      "Slovníky"
    ]
  },
  {
    "objectID": "content/slovniky.html#vnorené-slovníky-a-kombinácie",
    "href": "content/slovniky.html#vnorené-slovníky-a-kombinácie",
    "title": "Slovníky",
    "section": "🧪 Vnorené slovníky a kombinácie",
    "text": "🧪 Vnorené slovníky a kombinácie\n\n\nKód\nstudenti = {\n    \"001\": {\"meno\": \"Eva\", \"vek\": 20},\n    \"002\": {\"meno\": \"Ján\", \"vek\": 22}\n}\nprint(studenti[\"001\"][\"meno\"])\n\n\nEva",
    "crumbs": [
      "Domov",
      "💾 Dátové štruktúry",
      "Slovníky"
    ]
  },
  {
    "objectID": "content/slovniky.html#zhrnutie",
    "href": "content/slovniky.html#zhrnutie",
    "title": "Slovníky",
    "section": "🧠 Zhrnutie",
    "text": "🧠 Zhrnutie\n\ndict = kolekcia párov kľúč: hodnota\nHodnoty získavame cez kľúč\nMôžeme meniť, pridávať aj mazať páry\nPodporuje iteráciu, kontrolu členstva a vnorené štruktúry",
    "crumbs": [
      "Domov",
      "💾 Dátové štruktúry",
      "Slovníky"
    ]
  },
  {
    "objectID": "content/slovniky.html#videonávod",
    "href": "content/slovniky.html#videonávod",
    "title": "Slovníky",
    "section": "🎞️ Videonávod",
    "text": "🎞️ Videonávod",
    "crumbs": [
      "Domov",
      "💾 Dátové štruktúry",
      "Slovníky"
    ]
  },
  {
    "objectID": "content/premenne_a_datove_typy.html",
    "href": "content/premenne_a_datove_typy.html",
    "title": "Premenné a dátové typy",
    "section": "",
    "text": "Premenné slúžia na uloženie údajov, ktoré môžeme neskôr opakovane použiť. V Pythone nie je potrebné vopred určovať typ premennej – typ sa určí automaticky podľa toho, čo do premennej uložíme.",
    "crumbs": [
      "Domov",
      "🚀 Základy Pythonu",
      "Premenné a dátové typy"
    ]
  },
  {
    "objectID": "content/premenne_a_datove_typy.html#úvod",
    "href": "content/premenne_a_datove_typy.html#úvod",
    "title": "Premenné a dátové typy",
    "section": "",
    "text": "Premenné slúžia na uloženie údajov, ktoré môžeme neskôr opakovane použiť. V Pythone nie je potrebné vopred určovať typ premennej – typ sa určí automaticky podľa toho, čo do premennej uložíme.",
    "crumbs": [
      "Domov",
      "🚀 Základy Pythonu",
      "Premenné a dátové typy"
    ]
  },
  {
    "objectID": "content/premenne_a_datove_typy.html#základné-použitie-premennej",
    "href": "content/premenne_a_datove_typy.html#základné-použitie-premennej",
    "title": "Premenné a dátové typy",
    "section": "🧪 Základné použitie premennej",
    "text": "🧪 Základné použitie premennej\n\n\nKód\nx = 5\nmeno = \"Anna\"\nprint(x)\nprint(meno)\n\n\n5\nAnna",
    "crumbs": [
      "Domov",
      "🚀 Základy Pythonu",
      "Premenné a dátové typy"
    ]
  },
  {
    "objectID": "content/premenne_a_datove_typy.html#názvy-premenných",
    "href": "content/premenne_a_datove_typy.html#názvy-premenných",
    "title": "Premenné a dátové typy",
    "section": "🧠 Názvy premenných",
    "text": "🧠 Názvy premenných\n\nMusia začínať písmenom alebo podčiarkovníkom _\nMôžu obsahovať len písmená, číslice a podčiarkovníky\nNemôžu obsahovať medzery ani špeciálne znaky\nNepoužívajte kľúčové slová(názvy funkcií) jazyka Python (napr. if, print, for, …)\n\n✅ Platné:\n\n\nKód\nvek = 20\nmeno_studenta = \"Jakub\"\n_x = 3.14\n\n\n❌ Neplatné (nespúšťajte, spôsobia chybu):\n\n\nKód\n# 2cislo = 10       # začína číslom\n# moje meno = \"Ján\" # obsahuje medzeru\n# if = \"niečo\"      # kľúčové slovo",
    "crumbs": [
      "Domov",
      "🚀 Základy Pythonu",
      "Premenné a dátové typy"
    ]
  },
  {
    "objectID": "content/premenne_a_datove_typy.html#základné-dátové-typy",
    "href": "content/premenne_a_datove_typy.html#základné-dátové-typy",
    "title": "Premenné a dátové typy",
    "section": "🔢 Základné dátové typy",
    "text": "🔢 Základné dátové typy\n\n\n\nTyp\nPríklad\nPopis\n\n\n\n\nint\n10, -3\ncelé číslo\n\n\nfloat\n3.14\ndesatinné číslo\n\n\nstr\n'text'\nreťazec (text)\n\n\nbool\nTrue, False\nlogická hodnota",
    "crumbs": [
      "Domov",
      "🚀 Základy Pythonu",
      "Premenné a dátové typy"
    ]
  },
  {
    "objectID": "content/premenne_a_datove_typy.html#ukážky-typov",
    "href": "content/premenne_a_datove_typy.html#ukážky-typov",
    "title": "Premenné a dátové typy",
    "section": "🔍 Ukážky typov",
    "text": "🔍 Ukážky typov\n\n\nKód\ncislo = 42\npi = 3.14\nmeno = \"Zuzana\"\npravda = True\n\nprint(type(cislo))\nprint(type(pi))\nprint(type(meno))\nprint(type(pravda))\n\n\n&lt;class 'int'&gt;\n&lt;class 'float'&gt;\n&lt;class 'str'&gt;\n&lt;class 'bool'&gt;",
    "crumbs": [
      "Domov",
      "🚀 Základy Pythonu",
      "Premenné a dátové typy"
    ]
  },
  {
    "objectID": "content/premenne_a_datove_typy.html#premenné-môžeme-meniť",
    "href": "content/premenne_a_datove_typy.html#premenné-môžeme-meniť",
    "title": "Premenné a dátové typy",
    "section": "🎯 Premenné môžeme meniť",
    "text": "🎯 Premenné môžeme meniť\n\n\nKód\nx = 10\nprint(x)\nx = \"text\"\nprint(x)\n\n\n10\ntext",
    "crumbs": [
      "Domov",
      "🚀 Základy Pythonu",
      "Premenné a dátové typy"
    ]
  },
  {
    "objectID": "content/premenne_a_datove_typy.html#operácie-podľa-typu",
    "href": "content/premenne_a_datove_typy.html#operácie-podľa-typu",
    "title": "Premenné a dátové typy",
    "section": "🔁 Operácie podľa typu",
    "text": "🔁 Operácie podľa typu\n\n\nKód\na = 5\nb = 2\nprint(a + b)\n\ns1 = \"ahoj \"\ns2 = \"svet\"\nprint(s1 + s2)\n\nx = True\ny = False\nprint(x + y)\n\n\n7\nahoj svet\n1",
    "crumbs": [
      "Domov",
      "🚀 Základy Pythonu",
      "Premenné a dátové typy"
    ]
  },
  {
    "objectID": "content/premenne_a_datove_typy.html#zhrnutie",
    "href": "content/premenne_a_datove_typy.html#zhrnutie",
    "title": "Premenné a dátové typy",
    "section": "🧠 Zhrnutie",
    "text": "🧠 Zhrnutie\n\nPremenná je pomenovaná hodnota, ktorú môžeme meniť.\nTyp premennej sa určuje automaticky.\nNajčastejšie typy: int, float, str, bool\nFunkcia type() zobrazí typ premennej.\nNázvy premenných musia dodržiavať pravidlá!",
    "crumbs": [
      "Domov",
      "🚀 Základy Pythonu",
      "Premenné a dátové typy"
    ]
  },
  {
    "objectID": "content/premenne_a_datove_typy.html#videonávod",
    "href": "content/premenne_a_datove_typy.html#videonávod",
    "title": "Premenné a dátové typy",
    "section": "🎞️ Videonávod",
    "text": "🎞️ Videonávod",
    "crumbs": [
      "Domov",
      "🚀 Základy Pythonu",
      "Premenné a dátové typy"
    ]
  },
  {
    "objectID": "content/pandas_statistika.html",
    "href": "content/pandas_statistika.html",
    "title": "Základné štatistické funkcie",
    "section": "",
    "text": "V tejto kapitole sa zameriame na základné štatistické operácie, ktoré Pandas ponúka priamo nad objektom DataFrame alebo Series.\nMedzi najčastejšie používané patria: - Popisné štatistiky (mean, median, mode, std, var, min, max) - Súčty a počty (sum, count) - Percentily a kvantily (quantile) - Komplexný prehľad pomocou funkcie .describe()",
    "crumbs": [
      "Domov",
      "📚 Knižnice",
      "🗃️ Pandas",
      "Základné štatistické funkcie"
    ]
  },
  {
    "objectID": "content/pandas_statistika.html#úvod",
    "href": "content/pandas_statistika.html#úvod",
    "title": "Základné štatistické funkcie",
    "section": "",
    "text": "V tejto kapitole sa zameriame na základné štatistické operácie, ktoré Pandas ponúka priamo nad objektom DataFrame alebo Series.\nMedzi najčastejšie používané patria: - Popisné štatistiky (mean, median, mode, std, var, min, max) - Súčty a počty (sum, count) - Percentily a kvantily (quantile) - Komplexný prehľad pomocou funkcie .describe()",
    "crumbs": [
      "Domov",
      "📚 Knižnice",
      "🗃️ Pandas",
      "Základné štatistické funkcie"
    ]
  },
  {
    "objectID": "content/pandas_statistika.html#ukážkové-dáta",
    "href": "content/pandas_statistika.html#ukážkové-dáta",
    "title": "Základné štatistické funkcie",
    "section": "🧪 Ukážkové dáta",
    "text": "🧪 Ukážkové dáta\n\n\nKód\nimport pandas as pd\n\ndata = {\n    \"Meno\": [\"Anna\", \"Boris\", \"Cyril\", \"Dora\", \"Eva\", \"Filip\"],\n    \"Vek\": [25, 30, 35, 28, 22, 40],\n    \"Mesto\": [\"Bratislava\", \"Košice\", \"Žilina\", \"Bratislava\", \"Nitra\", \"Košice\"],\n    \"Body\": [88, 92, 75, 90, 66, 98],\n}\ndf = pd.DataFrame(data)\ndf\n\n\n\n\n\n\n\n\n\nMeno\nVek\nMesto\nBody\n\n\n\n\n0\nAnna\n25\nBratislava\n88\n\n\n1\nBoris\n30\nKošice\n92\n\n\n2\nCyril\n35\nŽilina\n75\n\n\n3\nDora\n28\nBratislava\n90\n\n\n4\nEva\n22\nNitra\n66\n\n\n5\nFilip\n40\nKošice\n98",
    "crumbs": [
      "Domov",
      "📚 Knižnice",
      "🗃️ Pandas",
      "Základné štatistické funkcie"
    ]
  },
  {
    "objectID": "content/pandas_statistika.html#základné-štatistiky",
    "href": "content/pandas_statistika.html#základné-štatistiky",
    "title": "Základné štatistické funkcie",
    "section": "📈 Základné štatistiky",
    "text": "📈 Základné štatistiky\n\n\nKód\nprint(\"Priemerný vek:\", df['Vek'].mean())\nprint(\"Medián bodov:\", df['Body'].median())\nprint(\"Najčastejší vek:\", df['Vek'].mode()[0])\nprint(\"Rozptyl bodov:\", df['Body'].var())\nprint(\"Štandardná odchýlka bodov:\", df['Body'].std())\nprint(\"Minimum bodov:\", df['Body'].min())\nprint(\"Maximum bodov:\", df['Body'].max())\n\n\nPriemerný vek: 30.0\nMedián bodov: 89.0\nNajčastejší vek: 22\nRozptyl bodov: 142.56666666666666\nŠtandardná odchýlka bodov: 11.940128419186566\nMinimum bodov: 66\nMaximum bodov: 98",
    "crumbs": [
      "Domov",
      "📚 Knižnice",
      "🗃️ Pandas",
      "Základné štatistické funkcie"
    ]
  },
  {
    "objectID": "content/pandas_statistika.html#súčet-a-počet-hodnôt",
    "href": "content/pandas_statistika.html#súčet-a-počet-hodnôt",
    "title": "Základné štatistické funkcie",
    "section": "➕ Súčet a počet hodnôt",
    "text": "➕ Súčet a počet hodnôt\n\n\nKód\nprint(\"Počet riadkov:\", df['Meno'].count())\nprint(\"Súčet bodov:\", df['Body'].sum())\n\n\nPočet riadkov: 6\nSúčet bodov: 509",
    "crumbs": [
      "Domov",
      "📚 Knižnice",
      "🗃️ Pandas",
      "Základné štatistické funkcie"
    ]
  },
  {
    "objectID": "content/pandas_statistika.html#percentily-a-kvantily",
    "href": "content/pandas_statistika.html#percentily-a-kvantily",
    "title": "Základné štatistické funkcie",
    "section": "🎯 Percentily a kvantily",
    "text": "🎯 Percentily a kvantily\n\n\nKód\nprint(\"25. percentil veku:\", df['Vek'].quantile(0.25))\nprint(\"50. percentil (medián) veku:\", df['Vek'].quantile(0.5))\nprint(\"75. percentil veku:\", df['Vek'].quantile(0.75))\n\n\n25. percentil veku: 25.75\n50. percentil (medián) veku: 29.0\n75. percentil veku: 33.75",
    "crumbs": [
      "Domov",
      "📚 Knižnice",
      "🗃️ Pandas",
      "Základné štatistické funkcie"
    ]
  },
  {
    "objectID": "content/pandas_statistika.html#funkcia-.describe",
    "href": "content/pandas_statistika.html#funkcia-.describe",
    "title": "Základné štatistické funkcie",
    "section": "📋 Funkcia .describe()",
    "text": "📋 Funkcia .describe()\n\nKomplexný prehľad štatistík pre číselné stĺpce\n\n\nKód\ndf.describe()\n\n\n\n\n\n\n\n\n\nVek\nBody\n\n\n\n\ncount\n6.00000\n6.000000\n\n\nmean\n30.00000\n84.833333\n\n\nstd\n6.60303\n11.940128\n\n\nmin\n22.00000\n66.000000\n\n\n25%\n25.75000\n78.250000\n\n\n50%\n29.00000\n89.000000\n\n\n75%\n33.75000\n91.500000\n\n\nmax\n40.00000\n98.000000\n\n\n\n\n\n\n\n\n\nKomplexný prehľad štatistík pre všetkz stĺpce\n\n\nKód\ndf.describe(include='all')\n\n\n\n\n\n\n\n\n\nMeno\nVek\nMesto\nBody\n\n\n\n\ncount\n6\n6.00000\n6\n6.000000\n\n\nunique\n6\nNaN\n4\nNaN\n\n\ntop\nAnna\nNaN\nBratislava\nNaN\n\n\nfreq\n1\nNaN\n2\nNaN\n\n\nmean\nNaN\n30.00000\nNaN\n84.833333\n\n\nstd\nNaN\n6.60303\nNaN\n11.940128\n\n\nmin\nNaN\n22.00000\nNaN\n66.000000\n\n\n25%\nNaN\n25.75000\nNaN\n78.250000\n\n\n50%\nNaN\n29.00000\nNaN\n89.000000\n\n\n75%\nNaN\n33.75000\nNaN\n91.500000\n\n\nmax\nNaN\n40.00000\nNaN\n98.000000",
    "crumbs": [
      "Domov",
      "📚 Knižnice",
      "🗃️ Pandas",
      "Základné štatistické funkcie"
    ]
  },
  {
    "objectID": "content/pandas_statistika.html#zhrnutie",
    "href": "content/pandas_statistika.html#zhrnutie",
    "title": "Základné štatistické funkcie",
    "section": "🧠 Zhrnutie",
    "text": "🧠 Zhrnutie\n\nPandas ponúka množstvo vstavaných štatistických funkcií (mean, median, std, var, min, max).\n\nFunkcia describe() rýchlo poskytne súhrnné štatistiky pre všetky stĺpce.",
    "crumbs": [
      "Domov",
      "📚 Knižnice",
      "🗃️ Pandas",
      "Základné štatistické funkcie"
    ]
  },
  {
    "objectID": "content/pandas_statistika.html#oficiálna-dokumentácia-pandas",
    "href": "content/pandas_statistika.html#oficiálna-dokumentácia-pandas",
    "title": "Základné štatistické funkcie",
    "section": "📚 Oficiálna dokumentácia Pandas",
    "text": "📚 Oficiálna dokumentácia Pandas\nPodrobný popis funkcií, ich parametrov a príkladov použitia nájdete v oficiálnej dokumentácii knižnice Pandas na adrese: [https://pandas.pydata.org/docs/](https://pandas.pydata.org/",
    "crumbs": [
      "Domov",
      "📚 Knižnice",
      "🗃️ Pandas",
      "Základné štatistické funkcie"
    ]
  },
  {
    "objectID": "content/pandas_statistika.html#videonávod",
    "href": "content/pandas_statistika.html#videonávod",
    "title": "Základné štatistické funkcie",
    "section": "🎞️ Videonávod",
    "text": "🎞️ Videonávod",
    "crumbs": [
      "Domov",
      "📚 Knižnice",
      "🗃️ Pandas",
      "Základné štatistické funkcie"
    ]
  },
  {
    "objectID": "content/pandas_filtracia.html",
    "href": "content/pandas_filtracia.html",
    "title": "Výber stĺpcov, filtrovanie a indexovanie",
    "section": "",
    "text": "V tejto kapitole sú zhrnuté základné operácie s pandas.DataFrame: - Výber stĺpcov a riadkov ([], .loc, .iloc) - Filtrovanie riadkov (boolean masky, .query()) - Indexovanie (nastavenie/obnova indexu, výber podľa indexu) - Triedenie - Výber podľa podmienok viacerých stĺpcov - reťazenie operácií\nBudeme pracovať s malým ukážkovým súborom dát, ktorý si vytvoríme v behu notebooku.",
    "crumbs": [
      "Domov",
      "📚 Knižnice",
      "🗃️ Pandas",
      "Výber stĺpcov, filtrovanie a indexovanie"
    ]
  },
  {
    "objectID": "content/pandas_filtracia.html#úvod",
    "href": "content/pandas_filtracia.html#úvod",
    "title": "Výber stĺpcov, filtrovanie a indexovanie",
    "section": "",
    "text": "V tejto kapitole sú zhrnuté základné operácie s pandas.DataFrame: - Výber stĺpcov a riadkov ([], .loc, .iloc) - Filtrovanie riadkov (boolean masky, .query()) - Indexovanie (nastavenie/obnova indexu, výber podľa indexu) - Triedenie - Výber podľa podmienok viacerých stĺpcov - reťazenie operácií\nBudeme pracovať s malým ukážkovým súborom dát, ktorý si vytvoríme v behu notebooku.",
    "crumbs": [
      "Domov",
      "📚 Knižnice",
      "🗃️ Pandas",
      "Výber stĺpcov, filtrovanie a indexovanie"
    ]
  },
  {
    "objectID": "content/pandas_filtracia.html#ukážkové-dáta",
    "href": "content/pandas_filtracia.html#ukážkové-dáta",
    "title": "Výber stĺpcov, filtrovanie a indexovanie",
    "section": "🧪 Ukážkové dáta",
    "text": "🧪 Ukážkové dáta\n\n\nKód\nimport pandas as pd\n\ndata = {\n    \"Meno\": [\"Anna\", \"Boris\", \"Cyril\", \"Dora\", \"Eva\", \"Filip\"],\n    \"Vek\": [25, 30, 35, 28, 22, 40],\n    \"Mesto\": [\"Bratislava\", \"Košice\", \"Žilina\", \"Bratislava\", \"Nitra\", \"Košice\"],\n    \"Body\": [88, 92, 75, 90, 66, 98],\n    \"Aktivny\": [True, True, False, True, False, True],\n}\ndf = pd.DataFrame(data)\ndf\n\n\n\n\n\n\n\n\n\nMeno\nVek\nMesto\nBody\nAktivny\n\n\n\n\n0\nAnna\n25\nBratislava\n88\nTrue\n\n\n1\nBoris\n30\nKošice\n92\nTrue\n\n\n2\nCyril\n35\nŽilina\n75\nFalse\n\n\n3\nDora\n28\nBratislava\n90\nTrue\n\n\n4\nEva\n22\nNitra\n66\nFalse\n\n\n5\nFilip\n40\nKošice\n98\nTrue",
    "crumbs": [
      "Domov",
      "📚 Knižnice",
      "🗃️ Pandas",
      "Výber stĺpcov, filtrovanie a indexovanie"
    ]
  },
  {
    "objectID": "content/pandas_filtracia.html#výber-stĺpcov",
    "href": "content/pandas_filtracia.html#výber-stĺpcov",
    "title": "Výber stĺpcov, filtrovanie a indexovanie",
    "section": "🎯 Výber stĺpcov",
    "text": "🎯 Výber stĺpcov\n\nJeden stĺpec (vracia Series)\n\n\nKód\ndf['Meno']\n\n\n0     Anna\n1    Boris\n2    Cyril\n3     Dora\n4      Eva\n5    Filip\nName: Meno, dtype: object\n\n\n\n\nViac stĺpcov (vracia DataFrame)\n\n\nKód\ndf[['Meno', 'Vek']]\n\n\n\n\n\n\n\n\n\nMeno\nVek\n\n\n\n\n0\nAnna\n25\n\n\n1\nBoris\n30\n\n\n2\nCyril\n35\n\n\n3\nDora\n28\n\n\n4\nEva\n22\n\n\n5\nFilip\n40",
    "crumbs": [
      "Domov",
      "📚 Knižnice",
      "🗃️ Pandas",
      "Výber stĺpcov, filtrovanie a indexovanie"
    ]
  },
  {
    "objectID": "content/pandas_filtracia.html#výber-riadkov-.loc-vs-.iloc",
    "href": "content/pandas_filtracia.html#výber-riadkov-.loc-vs-.iloc",
    "title": "Výber stĺpcov, filtrovanie a indexovanie",
    "section": "📍 Výber riadkov – .loc vs .iloc",
    "text": "📍 Výber riadkov – .loc vs .iloc\n\n.loc[riadky, stĺpce]: výber podľa menoviek (indexu/stĺpcov)\n.iloc[riadky, stĺpce]: výber podľa pozície (0-based - začiatok indexovania od nuly)\n\n\nVýber rozsahu riadkov podľa indexu stĺpcov\n\n\nKód\n# Prvé tri riadky a stĺpce 'Meno' a 'Vek' podľa ich pozície (indexu)\ndf.iloc[0:3, [0, 1]]\n\n\n\n\n\n\n\n\n\nMeno\nVek\n\n\n\n\n0\nAnna\n25\n\n\n1\nBoris\n30\n\n\n2\nCyril\n35\n\n\n\n\n\n\n\n\n\nVýber rozsahu riadkov podľa indexu stĺpcov\n\n\nKód\n# Riadky s indexami 0 až 3 (vrátane) a stĺpce podľa názvov 'Meno' a 'Vek'\ndf.loc[0:3, ['Meno', 'Vek']]\n\n\n\n\n\n\n\n\n\nMeno\nVek\n\n\n\n\n0\nAnna\n25\n\n\n1\nBoris\n30\n\n\n2\nCyril\n35\n\n\n3\nDora\n28",
    "crumbs": [
      "Domov",
      "📚 Knižnice",
      "🗃️ Pandas",
      "Výber stĺpcov, filtrovanie a indexovanie"
    ]
  },
  {
    "objectID": "content/pandas_filtracia.html#filtrovanie-riadkov-boolean-masky",
    "href": "content/pandas_filtracia.html#filtrovanie-riadkov-boolean-masky",
    "title": "Výber stĺpcov, filtrovanie a indexovanie",
    "section": "🔎 Filtrovanie riadkov (boolean masky)",
    "text": "🔎 Filtrovanie riadkov (boolean masky)\n\n\nKód\n# Negácia podmienky: mesto nie je Bratislava\ndf[~(df['Mesto'] == 'Bratislava')]\n\n\n\n\n\n\n\n\n\nMeno\nVek\nMesto\nBody\nAktivny\n\n\n\n\n1\nBoris\n30\nKošice\n92\nTrue\n\n\n2\nCyril\n35\nŽilina\n75\nFalse\n\n\n4\nEva\n22\nNitra\n66\nFalse\n\n\n5\nFilip\n40\nKošice\n98\nTrue\n\n\n\n\n\n\n\n\n\nKód\n# Jednoduchá podmienka: iba aktívni\ndf[df['Aktivny'] == True]\n\n\n\n\n\n\n\n\n\nMeno\nVek\nMesto\nBody\nAktivny\n\n\n\n\n0\nAnna\n25\nBratislava\n88\nTrue\n\n\n1\nBoris\n30\nKošice\n92\nTrue\n\n\n3\nDora\n28\nBratislava\n90\nTrue\n\n\n5\nFilip\n40\nKošice\n98\nTrue\n\n\n\n\n\n\n\n\n\nKód\n# Viac podmienok: vek &gt;= 30 a Body &gt; 80\ndf[(df['Vek'] &gt;= 30) & (df['Body'] &gt; 80)]\n\n\n\n\n\n\n\n\n\nMeno\nVek\nMesto\nBody\nAktivny\n\n\n\n\n1\nBoris\n30\nKošice\n92\nTrue\n\n\n5\nFilip\n40\nKošice\n98\nTrue\n\n\n\n\n\n\n\n\n\nKód\n# Negácia podmienky: mesto nie je Bratislava\ndf[~(df['Mesto'] == 'Bratislava')]\n\n\n\n\n\n\n\n\n\nMeno\nVek\nMesto\nBody\nAktivny\n\n\n\n\n1\nBoris\n30\nKošice\n92\nTrue\n\n\n2\nCyril\n35\nŽilina\n75\nFalse\n\n\n4\nEva\n22\nNitra\n66\nFalse\n\n\n5\nFilip\n40\nKošice\n98\nTrue",
    "crumbs": [
      "Domov",
      "📚 Knižnice",
      "🗃️ Pandas",
      "Výber stĺpcov, filtrovanie a indexovanie"
    ]
  },
  {
    "objectID": "content/pandas_filtracia.html#filtrovanie-pomocou-.query-čitateľnejšia-syntax",
    "href": "content/pandas_filtracia.html#filtrovanie-pomocou-.query-čitateľnejšia-syntax",
    "title": "Výber stĺpcov, filtrovanie a indexovanie",
    "section": "🗣️ Filtrovanie pomocou .query() (čitateľnejšia syntax)",
    "text": "🗣️ Filtrovanie pomocou .query() (čitateľnejšia syntax)\n\n\nKód\n# Pozor: vo výrazoch používame názvy stĺpcov priamo\ndf.query(\"Vek &gt;= 30 and Body &gt; 80 and Aktivny\")\n\n\n\n\n\n\n\n\n\nMeno\nVek\nMesto\nBody\nAktivny\n\n\n\n\n1\nBoris\n30\nKošice\n92\nTrue\n\n\n5\nFilip\n40\nKošice\n98\nTrue",
    "crumbs": [
      "Domov",
      "📚 Knižnice",
      "🗃️ Pandas",
      "Výber stĺpcov, filtrovanie a indexovanie"
    ]
  },
  {
    "objectID": "content/pandas_filtracia.html#indexovanie-nastavenie-a-obnova-indexu",
    "href": "content/pandas_filtracia.html#indexovanie-nastavenie-a-obnova-indexu",
    "title": "Výber stĺpcov, filtrovanie a indexovanie",
    "section": "🧭 Indexovanie: nastavenie a obnova indexu",
    "text": "🧭 Indexovanie: nastavenie a obnova indexu\n\nAktuálny RangeIndex\n\n\nKód\ndf.index\n\n\nRangeIndex(start=0, stop=6, step=1)\n\n\n\n\nNastavenie vlastného indexu\n\n\nKód\ndf_meno = df.set_index('Meno')\ndf_meno\n\n\n\n\n\n\n\n\n\nVek\nMesto\nBody\nAktivny\n\n\nMeno\n\n\n\n\n\n\n\n\nAnna\n25\nBratislava\n88\nTrue\n\n\nBoris\n30\nKošice\n92\nTrue\n\n\nCyril\n35\nŽilina\n75\nFalse\n\n\nDora\n28\nBratislava\n90\nTrue\n\n\nEva\n22\nNitra\n66\nFalse\n\n\nFilip\n40\nKošice\n98\nTrue\n\n\n\n\n\n\n\n\n\nVýber podľa menovky indexu\n\n\nKód\ndf_meno.loc['Boris']\n\n\nVek            30\nMesto      Košice\nBody           92\nAktivny      True\nName: Boris, dtype: object\n\n\n\n\nObnovenie pôvodného indexu\n\n\nKód\ndf_meno.reset_index()\n\n\n\n\n\n\n\n\n\nMeno\nVek\nMesto\nBody\nAktivny\n\n\n\n\n0\nAnna\n25\nBratislava\n88\nTrue\n\n\n1\nBoris\n30\nKošice\n92\nTrue\n\n\n2\nCyril\n35\nŽilina\n75\nFalse\n\n\n3\nDora\n28\nBratislava\n90\nTrue\n\n\n4\nEva\n22\nNitra\n66\nFalse\n\n\n5\nFilip\n40\nKošice\n98\nTrue",
    "crumbs": [
      "Domov",
      "📚 Knižnice",
      "🗃️ Pandas",
      "Výber stĺpcov, filtrovanie a indexovanie"
    ]
  },
  {
    "objectID": "content/pandas_filtracia.html#výber-podľa-indexu-stĺpca",
    "href": "content/pandas_filtracia.html#výber-podľa-indexu-stĺpca",
    "title": "Výber stĺpcov, filtrovanie a indexovanie",
    "section": "🎚️ Výber podľa indexu + stĺpca",
    "text": "🎚️ Výber podľa indexu + stĺpca\n\n\nKód\n# Keď je indexom 'Meno', môžeme vyberať kombinácie:\n\ndf_meno = df.set_index('Meno')\n\ndf_meno.loc[['Anna', 'Dora'], ['Mesto', 'Body']]\n\n\n\n\n\n\n\n\n\nMesto\nBody\n\n\nMeno\n\n\n\n\n\n\nAnna\nBratislava\n88\n\n\nDora\nBratislava\n90",
    "crumbs": [
      "Domov",
      "📚 Knižnice",
      "🗃️ Pandas",
      "Výber stĺpcov, filtrovanie a indexovanie"
    ]
  },
  {
    "objectID": "content/pandas_filtracia.html#triedenie-riadkov",
    "href": "content/pandas_filtracia.html#triedenie-riadkov",
    "title": "Výber stĺpcov, filtrovanie a indexovanie",
    "section": "↕️ Triedenie riadkov",
    "text": "↕️ Triedenie riadkov\n\n\nKód\n# Triedenie podľa jedného stĺpca vzostupne\ndf.sort_values('Vek')\n\n# Triedenie podľa viacerých stĺpcov (Vek vzostupne, Body zostupne)\ndf.sort_values(['Vek', 'Body'], ascending=[True, False])\n\n\n\n\n\n\n\n\n\nMeno\nVek\nMesto\nBody\nAktivny\n\n\n\n\n4\nEva\n22\nNitra\n66\nFalse\n\n\n0\nAnna\n25\nBratislava\n88\nTrue\n\n\n3\nDora\n28\nBratislava\n90\nTrue\n\n\n1\nBoris\n30\nKošice\n92\nTrue\n\n\n2\nCyril\n35\nŽilina\n75\nFalse\n\n\n5\nFilip\n40\nKošice\n98\nTrue",
    "crumbs": [
      "Domov",
      "📚 Knižnice",
      "🗃️ Pandas",
      "Výber stĺpcov, filtrovanie a indexovanie"
    ]
  },
  {
    "objectID": "content/pandas_filtracia.html#reťazenie-operácií",
    "href": "content/pandas_filtracia.html#reťazenie-operácií",
    "title": "Výber stĺpcov, filtrovanie a indexovanie",
    "section": "⛓️ Reťazenie operácií",
    "text": "⛓️ Reťazenie operácií\n\n\nKód\n# Vyber aktívnych z Bratislavy, zaujíma nás len Meno a Body, zotriedime podľa Body zostupne\ndf.query(\"Aktivny and Mesto == 'Bratislava'\")[['Meno', 'Body']].sort_values('Body', ascending=False)\n\n\n\n\n\n\n\n\n\nMeno\nBody\n\n\n\n\n3\nDora\n90\n\n\n0\nAnna\n88",
    "crumbs": [
      "Domov",
      "📚 Knižnice",
      "🗃️ Pandas",
      "Výber stĺpcov, filtrovanie a indexovanie"
    ]
  },
  {
    "objectID": "content/pandas_filtracia.html#zhrnutie",
    "href": "content/pandas_filtracia.html#zhrnutie",
    "title": "Výber stĺpcov, filtrovanie a indexovanie",
    "section": "🧠 Zhrnutie",
    "text": "🧠 Zhrnutie\n\nVýber stĺpcov: df['col'], df[['c1','c2']]\nVýber riadkov: .loc[] (menovky), .iloc[] (pozície - indexy)\nFiltrovanie: boolean masky a .query()\nIndexovanie: set_index(), reset_index(), výber podľa indexu\nTriedenie a pipeline: sort_values() a reťazenie operácií pre čitateľný kód\nNa label-based výber používajte .loc, na position-based .iloc.\nPri viacerých podmienkach nezabudnite na zátvorky a operátory & (AND), | (OR), ~ (NOT).\n.set_index() a .reset_index() uľahčujú výber podľa kľúčových hodnôt.\n.query() býva pre zložitejšie filtre prehľadnejšie a niekedy aj rýchlejšie.",
    "crumbs": [
      "Domov",
      "📚 Knižnice",
      "🗃️ Pandas",
      "Výber stĺpcov, filtrovanie a indexovanie"
    ]
  },
  {
    "objectID": "content/pandas_filtracia.html#oficiálna-dokumentácia-pandas",
    "href": "content/pandas_filtracia.html#oficiálna-dokumentácia-pandas",
    "title": "Výber stĺpcov, filtrovanie a indexovanie",
    "section": "📚 Oficiálna dokumentácia Pandas",
    "text": "📚 Oficiálna dokumentácia Pandas\nPodrobný popis funkcií, ich parametrov a príkladov použitia nájdete v oficiálnej dokumentácii knižnice Pandas na adrese: https://pandas.pydata.org/docs/.",
    "crumbs": [
      "Domov",
      "📚 Knižnice",
      "🗃️ Pandas",
      "Výber stĺpcov, filtrovanie a indexovanie"
    ]
  },
  {
    "objectID": "content/pandas_filtracia.html#videonávod",
    "href": "content/pandas_filtracia.html#videonávod",
    "title": "Výber stĺpcov, filtrovanie a indexovanie",
    "section": "🎞️ Videonávod",
    "text": "🎞️ Videonávod",
    "crumbs": [
      "Domov",
      "📚 Knižnice",
      "🗃️ Pandas",
      "Výber stĺpcov, filtrovanie a indexovanie"
    ]
  },
  {
    "objectID": "content/operatory.html",
    "href": "content/operatory.html",
    "title": "Operátory",
    "section": "",
    "text": "Operátory slúžia na vykonávanie výpočtov a porovnávanie hodnôt. V Pythone sa rozdeľujú na aritmetické, relačné a logické.",
    "crumbs": [
      "Domov",
      "🚀 Základy Pythonu",
      "Operátory"
    ]
  },
  {
    "objectID": "content/operatory.html#úvod",
    "href": "content/operatory.html#úvod",
    "title": "Operátory",
    "section": "",
    "text": "Operátory slúžia na vykonávanie výpočtov a porovnávanie hodnôt. V Pythone sa rozdeľujú na aritmetické, relačné a logické.",
    "crumbs": [
      "Domov",
      "🚀 Základy Pythonu",
      "Operátory"
    ]
  },
  {
    "objectID": "content/operatory.html#aritmetické-operátory",
    "href": "content/operatory.html#aritmetické-operátory",
    "title": "Operátory",
    "section": "🔢 Aritmetické operátory",
    "text": "🔢 Aritmetické operátory\nPoužívajú sa na matematické výpočty s číslami (int, float).\n\n\n\nOperátor\nNázov\nPríklad\nVýsledok\n\n\n\n\n+\nsčítanie\n5 + 3\n8\n\n\n-\nodčítanie\n5 - 2\n3\n\n\n*\nnásobenie\n4 * 2\n8\n\n\n/\ndelenie (float)\n7 / 2\n3.5\n\n\n//\nceločíselné delenie\n7 // 2\n3\n\n\n%\nzvyšok po delení\n7 % 2\n1\n\n\n**\numocňovanie\n2 ** 3\n8\n\n\n\n\n\nKód\na = 7\nb = 2\nprint(a + b)\nprint(a // b)\nprint(a % b)\nprint(a ** b)\n\n\n9\n3\n1\n49",
    "crumbs": [
      "Domov",
      "🚀 Základy Pythonu",
      "Operátory"
    ]
  },
  {
    "objectID": "content/operatory.html#relačné-porovnávacie-operátory",
    "href": "content/operatory.html#relačné-porovnávacie-operátory",
    "title": "Operátory",
    "section": "⚖️ Relačné (porovnávacie) operátory",
    "text": "⚖️ Relačné (porovnávacie) operátory\nPorovnávajú dve hodnoty a vracajú True alebo False.\n\n\n\nOperátor\nNázov\nPríklad\nVýsledok\n\n\n\n\n==\nrovnosť\n5 == 5\nTrue\n\n\n!=\nnerovnosť\n5 != 3\nTrue\n\n\n&gt;\nväčší ako\n5 &gt; 3\nTrue\n\n\n&lt;\nmenší ako\n2 &lt; 1\nFalse\n\n\n&gt;=\nväčší alebo rovný\n5 &gt;= 5\nTrue\n\n\n&lt;=\nmenší alebo rovný\n4 &lt;= 6\nTrue\n\n\n\n\n\nKód\nx = 10\ny = 20\nprint(x == y)\nprint(x &lt; y)\nprint(x != y)\n\n\nFalse\nTrue\nTrue",
    "crumbs": [
      "Domov",
      "🚀 Základy Pythonu",
      "Operátory"
    ]
  },
  {
    "objectID": "content/operatory.html#logické-operátory",
    "href": "content/operatory.html#logické-operátory",
    "title": "Operátory",
    "section": "🔁 Logické operátory",
    "text": "🔁 Logické operátory\nSpojujú viacero logických podmienok.\n\n\n\nOperátor\nVýznam\nPríklad\nVýsledok\n\n\n\n\nand\nlogické a\nTrue and False\nFalse\n\n\nor\nlogické alebo\nTrue or False\nTrue\n\n\nnot\nlogická negácia\nnot True\nFalse\n\n\n\n\n\nKód\nx = 5\ny = 10\n\nprint(x &gt; 3 and y &lt; 20)\nprint(x &gt; 3 and y &gt; 20)\nprint(x &lt; 3 or y == 10)\nprint(not (x == 5))\n\n\nTrue\nFalse\nTrue\nFalse",
    "crumbs": [
      "Domov",
      "🚀 Základy Pythonu",
      "Operátory"
    ]
  },
  {
    "objectID": "content/operatory.html#zhrnutie",
    "href": "content/operatory.html#zhrnutie",
    "title": "Operátory",
    "section": "🧠 Zhrnutie",
    "text": "🧠 Zhrnutie\n\nAritmetické operátory: +, -, *, /, //, %, **\nRelačné operátory: ==, !=, &lt;, &gt;, &lt;=, &gt;=\nLogické operátory: and, or, not\nPorovnávanie vracia True alebo False\nLogické operácie sa často používajú v podmienkach (if)",
    "crumbs": [
      "Domov",
      "🚀 Základy Pythonu",
      "Operátory"
    ]
  },
  {
    "objectID": "content/operatory.html#videonávod",
    "href": "content/operatory.html#videonávod",
    "title": "Operátory",
    "section": "🎞️ Videonávod",
    "text": "🎞️ Videonávod",
    "crumbs": [
      "Domov",
      "🚀 Základy Pythonu",
      "Operátory"
    ]
  },
  {
    "objectID": "content/numpy_maticove_vypocty.html",
    "href": "content/numpy_maticove_vypocty.html",
    "title": "Vektorové a maticové výpočty",
    "section": "",
    "text": "Vektory a matice sú základnými stavebnými prvkami lineárnej algebry, ktorá tvorí nevyhnutný základ pre množstvo vedných oblastí. Ich pochopenie je kľúčové pre prácu v oblastiach ako napríklad:\n\n📊 Dátová analýza – ukladanie a spracovanie veľkých súborov čísel\n🤖 Strojové učenie – reprezentácia modelov, parametrov a váh\n🛰 Geoinformatika a geodézia – transformácie súradníc a priestorové výpočty, riešenie sústav rovníc popisujúcich rôzne systémy\n\nV tejto kapitole si ukážeme:\n\nZákladné operácie s vektormi a maticami\nPokročilejšie maticové operácie\nRiešenie sústav lineárnych rovníc\n\n\n❕ Všetky príklady budeme realizovať v jazyku Python pomocou knižnice NumPy, ktorá je optimalizovaná pre rýchle a efektívne výpočty.",
    "crumbs": [
      "Domov",
      "📚 Knižnice",
      "📐 NumPy",
      "Vektorové a maticové výpočty"
    ]
  },
  {
    "objectID": "content/numpy_maticove_vypocty.html#úvod",
    "href": "content/numpy_maticove_vypocty.html#úvod",
    "title": "Vektorové a maticové výpočty",
    "section": "",
    "text": "Vektory a matice sú základnými stavebnými prvkami lineárnej algebry, ktorá tvorí nevyhnutný základ pre množstvo vedných oblastí. Ich pochopenie je kľúčové pre prácu v oblastiach ako napríklad:\n\n📊 Dátová analýza – ukladanie a spracovanie veľkých súborov čísel\n🤖 Strojové učenie – reprezentácia modelov, parametrov a váh\n🛰 Geoinformatika a geodézia – transformácie súradníc a priestorové výpočty, riešenie sústav rovníc popisujúcich rôzne systémy\n\nV tejto kapitole si ukážeme:\n\nZákladné operácie s vektormi a maticami\nPokročilejšie maticové operácie\nRiešenie sústav lineárnych rovníc\n\n\n❕ Všetky príklady budeme realizovať v jazyku Python pomocou knižnice NumPy, ktorá je optimalizovaná pre rýchle a efektívne výpočty.",
    "crumbs": [
      "Domov",
      "📚 Knižnice",
      "📐 NumPy",
      "Vektorové a maticové výpočty"
    ]
  },
  {
    "objectID": "content/numpy_maticove_vypocty.html#vektory-základné-operácie",
    "href": "content/numpy_maticove_vypocty.html#vektory-základné-operácie",
    "title": "Vektorové a maticové výpočty",
    "section": "🧮 Vektory – základné operácie",
    "text": "🧮 Vektory – základné operácie\nVektor je usporiadaná postupnosť čísel (1D pole). Najčastejšie reprezentuje súradnice bodu alebo hodnoty veličín.\n\nImport knižnice a vytvorenie vektorov\n\n\nKód\nimport numpy as np\n\n# Vytvorenie vektorov\nv = np.array([1, 2, 3])\nu = np.array([4, 5, 6])\n\nprint(\"v =\", v)\nprint(\"u =\", u)\n\n\nv = [1 2 3]\nu = [4 5 6]\n\n\n\n\nSčítanie a odčítanie\n\n\nKód\nprint(\"v + u =\", v + u) # Sčítanie\nprint(\"v - u =\", v - u) # Odčítanie\n\n\nv + u = [5 7 9]\nv - u = [-3 -3 -3]\n\n\n\n\nSkalárne operácie (po prvkoch)\n\n\nKód\nprint(\"2 * v =\", 2 * v)\nprint(\"v / 2 =\", v / 2)\n\n\n2 * v = [2 4 6]\nv / 2 = [0.5 1.  1.5]\n\n\n\n\nSkalárny súčin (Dot product)\n\n\nKód\ndot_product = np.dot(v, u)  # alebo v @ u\nprint(\"v · u =\", dot_product)\n\n\nv · u = 32\n\n\n\n💡 Alternatívnym zápisom skalárneho súčinu je operátor @ pre maticové násobenie, pri vektroch však funguje aj ako skalárny súčin.\n\n\n\nVektorový súčin (Cross product)\n\n\nKód\ncross_product = np.cross(v, u)\nprint(\"v x u =\", cross_product)\n\n\nv x u = [-3  6 -3]\n\n\n\n\nNormy (dĺžky)\n\n\nKód\nprint(\"||v|| =\", np.linalg.norm(v))\nprint(\"||u|| =\", np.linalg.norm(u))\n\n\n||v|| = 3.7416573867739413\n||u|| = 8.774964387392123",
    "crumbs": [
      "Domov",
      "📚 Knižnice",
      "📐 NumPy",
      "Vektorové a maticové výpočty"
    ]
  },
  {
    "objectID": "content/numpy_maticove_vypocty.html#matice-základné-operácie",
    "href": "content/numpy_maticove_vypocty.html#matice-základné-operácie",
    "title": "Vektorové a maticové výpočty",
    "section": "🔢 Matice – základné operácie",
    "text": "🔢 Matice – základné operácie\nMatica je 2D pole (riadky × stĺpce). Používa sa na reprezentáciu lineárnych zobrazení a sústav rovníc.\n\nVytvorenie matíc\n\n\nKód\nA = np.array([[1, 2],\n              [3, 4]])\nB = np.array([[5, 6],\n              [7, 8]])\n\nprint(\"A =\\n\", A)\nprint(\"B =\\n\", B)\n\n\nA =\n [[1 2]\n [3 4]]\nB =\n [[5 6]\n [7 8]]\n\n\n\n\nSčítanie a odčítanie\n\n\nKód\n# Sčítanie, odčítanie\nprint(\"A + B =\\n\", A + B)\nprint(\"A - B =\\n\", A - B)\n\n\nA + B =\n [[ 6  8]\n [10 12]]\nA - B =\n [[-4 -4]\n [-4 -4]]\n\n\n\n\nNásobenie po prvkoch\n\n\nKód\nprint(\"A * B (po prvkoch) =\\n\", A * B)\n\n\nA * B (po prvkoch) =\n [[ 5 12]\n [21 32]]\n\n\n\n\nMaticové násobenie (lineárna algebra)\n\n\nKód\nprint(\"A @ B =\\n\", A @ B)       # ekvivalent np.dot(A, B)\nprint(\"B @ A =\\n\", B @ A)\n\n\nA @ B =\n [[19 22]\n [43 50]]\nB @ A =\n [[23 34]\n [31 46]]\n\n\n\n💡 Ekvivalentným spôsobom maticového násobebia je aj použitie funkcie np.dot().\n\n\n\nKód\nprint(\"A @ B =\\n\", np.dot(A,B))\nprint(\"B @ A =\\n\", np.dot(B,A))\n\n\nA @ B =\n [[19 22]\n [43 50]]\nB @ A =\n [[23 34]\n [31 46]]\n\n\n\n\nTranspozícia\nprint(“A^T =”, A.T) print(“A^T =”, np.transpose(A))\n\n💡 Ekvivalentným spôsobom transpozície je aj použitie funkcie np.transpose().",
    "crumbs": [
      "Domov",
      "📚 Knižnice",
      "📐 NumPy",
      "Vektorové a maticové výpočty"
    ]
  },
  {
    "objectID": "content/numpy_maticove_vypocty.html#užitočné-funkcie-lineárnej-algebry-np.linalg",
    "href": "content/numpy_maticove_vypocty.html#užitočné-funkcie-lineárnej-algebry-np.linalg",
    "title": "Vektorové a maticové výpočty",
    "section": "🚀 Užitočné funkcie lineárnej algebry (np.linalg)",
    "text": "🚀 Užitočné funkcie lineárnej algebry (np.linalg)\n\nDeterminant matice\n\n\nKód\ndet_A = np.linalg.det(A)\nprint(\"det(A) =\", det_A)\n\n\ndet(A) = -2.0000000000000004\n\n\n\n\nHodnosť matice\n\n\nKód\nrank_A = np.linalg.matrix_rank(A)\nprint(\"rank(A) =\", rank_A)\n\n\nrank(A) = 2\n\n\n\n\nInverzia matice\n\n\nKód\ninv_A = np.linalg.inv(A)\nprint(\"A^{-1} =\\n\", inv_A)\n\n\nA^{-1} =\n [[-2.   1. ]\n [ 1.5 -0.5]]",
    "crumbs": [
      "Domov",
      "📚 Knižnice",
      "📐 NumPy",
      "Vektorové a maticové výpočty"
    ]
  },
  {
    "objectID": "content/numpy_maticove_vypocty.html#jednotkové-a-diagonálne-matice",
    "href": "content/numpy_maticove_vypocty.html#jednotkové-a-diagonálne-matice",
    "title": "Vektorové a maticové výpočty",
    "section": "🧱 Jednotkové a diagonálne matice",
    "text": "🧱 Jednotkové a diagonálne matice\n\nJednotková matica\n\n\nKód\nI = np.eye(3)\nprint(\"I =\\n\", I)\n\n\nI =\n [[1. 0. 0.]\n [0. 1. 0.]\n [0. 0. 1.]]\n\n\n\n\nDiagonálna matica matica\n\n\nKód\nD = np.diag([1.0, 2.0, 3.0])\nprint(\"D =\\n\", D)\n\n\nD =\n [[1. 0. 0.]\n [0. 2. 0.]\n [0. 0. 3.]]\n\n\n\n\nHodnota na diagonále\n\n\nKód\ndiag_D = np.diag(D)\nprint(\"diag_D =\\n\", diag_D)\n\n\ndiag_D =\n [1. 2. 3.]\n\n\n\n💡 Všimnite si, že funkcia np.diag() mení svoju funckionalitu v závislosti od vstupných argumentov. V prípade, že vstupom je vektor vytvorí štvorcovú maticu s hodnotami tohto vektora na diagonále. V prípade, že argumetom je matica, funkcia vráti hodnoty na hlavnej diagonále matice.",
    "crumbs": [
      "Domov",
      "📚 Knižnice",
      "📐 NumPy",
      "Vektorové a maticové výpočty"
    ]
  },
  {
    "objectID": "content/numpy_maticove_vypocty.html#riešenie-sústav-lineárnych-rovníc",
    "href": "content/numpy_maticove_vypocty.html#riešenie-sústav-lineárnych-rovníc",
    "title": "Vektorové a maticové výpočty",
    "section": "🧩 Riešenie sústav lineárnych rovníc",
    "text": "🧩 Riešenie sústav lineárnych rovníc\n\n🧮 Pomocou funkcie np.linalg.solve\n\n\nKód\nA1 = np.array([[2.0, 1.0],\n               [3.0, 4.0]])\nb1 = np.array([8.0, 18.0])\n\nx1 = np.linalg.solve(A1, b1)\nprint(\"Riešenie A1 x = b1:\", x1)\n\n\nRiešenie A1 x = b1: [2.8 2.4]\n\n\n\n\n🗞️ Pomocou inverznej matice\n\n\nKód\nA2 = np.array([[2.0, 1.0],\n               [3.0, 4.0]])\nb2 = np.array([8.0, 18.0])\n\nx2 = np.linalg.inv(A2) @ b2\nprint(\"Riešenie A2 x = b2:\", x2)\n\n\nRiešenie A2 x = b2: [2.8 2.4]",
    "crumbs": [
      "Domov",
      "📚 Knižnice",
      "📐 NumPy",
      "Vektorové a maticové výpočty"
    ]
  },
  {
    "objectID": "content/numpy_maticove_vypocty.html#zhrnutie",
    "href": "content/numpy_maticove_vypocty.html#zhrnutie",
    "title": "Vektorové a maticové výpočty",
    "section": "🧠 Zhrnutie",
    "text": "🧠 Zhrnutie\n\nPoužívajte vektorové a maticové operácie z balíčka NumPy(sú rýchlejšie než slučky v Pythone).\n@ je operátor pre maticové násobenie: A @ B.\nModul np.linalg obsahuje pokročilejšie nástoroje lineárnej algebry`.",
    "crumbs": [
      "Domov",
      "📚 Knižnice",
      "📐 NumPy",
      "Vektorové a maticové výpočty"
    ]
  },
  {
    "objectID": "content/numpy_maticove_vypocty.html#oficiálna-dokumentácia-numpy",
    "href": "content/numpy_maticove_vypocty.html#oficiálna-dokumentácia-numpy",
    "title": "Vektorové a maticové výpočty",
    "section": "📚 Oficiálna dokumentácia NumPy",
    "text": "📚 Oficiálna dokumentácia NumPy\nPodrobný popis funkcií, ich parametrov a príkladov použitia nájdete v oficiálnej dokumentácii knižnice NumPy na adrese: https://numpy.org/doc/stable/.",
    "crumbs": [
      "Domov",
      "📚 Knižnice",
      "📐 NumPy",
      "Vektorové a maticové výpočty"
    ]
  },
  {
    "objectID": "content/numpy_maticove_vypocty.html#videonávod",
    "href": "content/numpy_maticove_vypocty.html#videonávod",
    "title": "Vektorové a maticové výpočty",
    "section": "🎞️ Videonávod",
    "text": "🎞️ Videonávod",
    "crumbs": [
      "Domov",
      "📚 Knižnice",
      "📐 NumPy",
      "Vektorové a maticové výpočty"
    ]
  },
  {
    "objectID": "content/numpy_indexovanie.html",
    "href": "content/numpy_indexovanie.html",
    "title": "Indexovanie a rezanie",
    "section": "",
    "text": "Táto kapitola pokrýva základné aj pokročilé techniky indexovania a rezania ndarray: 1D/2D indexovanie, záporné indexy, výrezy [start:stop:step], boolean (maskové).",
    "crumbs": [
      "Domov",
      "📚 Knižnice",
      "📐 NumPy",
      "Indexovanie a rezanie"
    ]
  },
  {
    "objectID": "content/numpy_indexovanie.html#úvod",
    "href": "content/numpy_indexovanie.html#úvod",
    "title": "Indexovanie a rezanie",
    "section": "",
    "text": "Táto kapitola pokrýva základné aj pokročilé techniky indexovania a rezania ndarray: 1D/2D indexovanie, záporné indexy, výrezy [start:stop:step], boolean (maskové).",
    "crumbs": [
      "Domov",
      "📚 Knižnice",
      "📐 NumPy",
      "Indexovanie a rezanie"
    ]
  },
  {
    "objectID": "content/numpy_indexovanie.html#nastavenie-a-ukážkové-dáta",
    "href": "content/numpy_indexovanie.html#nastavenie-a-ukážkové-dáta",
    "title": "Indexovanie a rezanie",
    "section": "📦 Nastavenie a ukážkové dáta",
    "text": "📦 Nastavenie a ukážkové dáta\n\n\nKód\nimport numpy as np\n\nx = np.arange(10)                 # 1D pole 0..9\nA = np.arange(1, 13).reshape(3,4) # 2D pole 3x4\n\n\n\n\nKód\nprint(f\"Vektor x = \\n{x}\")\n\n\nVektor x = \n[0 1 2 3 4 5 6 7 8 9]\n\n\n\n\nKód\nprint(f\"Matica A = \\n{A}\")\n\n\nMatica A = \n[[ 1  2  3  4]\n [ 5  6  7  8]\n [ 9 10 11 12]]",
    "crumbs": [
      "Domov",
      "📚 Knižnice",
      "📐 NumPy",
      "Indexovanie a rezanie"
    ]
  },
  {
    "objectID": "content/numpy_indexovanie.html#základné-indexovanie",
    "href": "content/numpy_indexovanie.html#základné-indexovanie",
    "title": "Indexovanie a rezanie",
    "section": "🗂️ Základné indexovanie",
    "text": "🗂️ Základné indexovanie\n\n1️⃣ Vektory\n\n\nKód\nprint(f\"Vektor x = \\n{x}\")\n\n\nVektor x = \n[0 1 2 3 4 5 6 7 8 9]\n\n\n\nPrvý prvok\n\n\nKód\nprint(x[0])    \n\n\n0\n\n\n\n\nPosledný prvok\n\n\nKód\nprint(x[-1])\n\n\n9\n\n\n\n\nN-tý prvok\n\n\nKód\nn = 3\nprint(x[n])\n\n\n3\n\n\n\n\n\n2️⃣ Matice\n\n\nKód\nprint(f\"Matica A = \\n{A}\")\n\n\nMatica A = \n[[ 1  2  3  4]\n [ 5  6  7  8]\n [ 9 10 11 12]]\n\n\n\nJeden prvok v danom riadku a stĺpci\n\n\nKód\nprint(A[0, 0])   # prvok v 1. riadku, 1. stĺpci\nprint(A[2, 3])   # prvok v 3. riadku, 4. stĺpci\n\n\n1\n12\n\n\n\n\nCelý riadok a stĺpec\n\n\nKód\nprint(A[1, :])   # 2. riadok\nprint(A[:, 2])   # 3. stĺpec\n\n\n[5 6 7 8]\n[ 3  7 11]",
    "crumbs": [
      "Domov",
      "📚 Knižnice",
      "📐 NumPy",
      "Indexovanie a rezanie"
    ]
  },
  {
    "objectID": "content/numpy_indexovanie.html#rezanie-slicing-startstopstep",
    "href": "content/numpy_indexovanie.html#rezanie-slicing-startstopstep",
    "title": "Indexovanie a rezanie",
    "section": "🪚 Rezanie – slicing [start:stop:step]",
    "text": "🪚 Rezanie – slicing [start:stop:step]\n\n1️⃣ Vektory\n\n\nKód\nprint(f\"Vektor x = \\n{x}\")\n\n\nVektor x = \n[0 1 2 3 4 5 6 7 8 9]\n\n\n\nRozsah medzi konkrétnymi indexami\n\n\nKód\nprint(x[2:7])      # indexy 2..6\n\n\n[2 3 4 5 6]\n\n\n\n\nRozsah od začiatku po konkrétny index\n\n\nKód\nprint(x[:5])       # od začiatku po index 4\n\n\n[0 1 2 3 4]\n\n\n\n\nRozsah indexu po koniec\n\n\nKód\nprint(x[5:])       # od indexu 5 po koniec\n\n\n[5 6 7 8 9]\n\n\n\n\nKaždý n-tý prvok\n\n\nKód\nn = 2\nprint(x[::n])      # každý druhý prvok\n\n\n[0 2 4 6 8]\n\n\n\n\nObrátené pole (vektor)\n\n\nKód\nprint(x[::-1])     # obrátené pole\n\n\n[9 8 7 6 5 4 3 2 1 0]\n\n\n\n\n\n2️⃣ (Sub)matice\n\n\nKód\nprint(f\"Matica A = \\n{A}\")\n\n\nMatica A = \n[[ 1  2  3  4]\n [ 5  6  7  8]\n [ 9 10 11 12]]\n\n\n\nSubmatica: riadky 0..1, stĺpce 1..3\n\n\nKód\nprint(A[0:2, 1:4])\n\n\n[[2 3 4]\n [6 7 8]]\n\n\n\n\nSubmatica: každý druhý riadok, všetky stĺpce\n\n\nKód\nprint(A[::2, :])\n\n\n[[ 1  2  3  4]\n [ 9 10 11 12]]\n\n\n\n\nSubmatica: všetky riadky, každý druhý stĺpec\n\n\nKód\nprint(A[:, ::2])\n\n\n[[ 1  3]\n [ 5  7]\n [ 9 11]]",
    "crumbs": [
      "Domov",
      "📚 Knižnice",
      "📐 NumPy",
      "Indexovanie a rezanie"
    ]
  },
  {
    "objectID": "content/numpy_indexovanie.html#view-vs-copy---pozor-na-zdieľanie-pamäte",
    "href": "content/numpy_indexovanie.html#view-vs-copy---pozor-na-zdieľanie-pamäte",
    "title": "Indexovanie a rezanie",
    "section": "⚔️ View vs Copy - ⚠️ pozor na zdieľanie pamäte ⚠️",
    "text": "⚔️ View vs Copy - ⚠️ pozor na zdieľanie pamäte ⚠️\n\n\nKód\nprint(f\"Pôvodný vektor x = \\n{x}\")\n\n\nPôvodný vektor x = \n[0 1 2 3 4 5 6 7 8 9]\n\n\n\n\nKód\nB = x[2:7]    # slicing vytvorí VIEW (zdieľa pamäť)\n\nprint(f\"Subvektor B (pohľad na vektor x) = \\n{B}\")\n\n\nSubvektor B (pohľad na vektor x) = \n[2 3 4 5 6]\n\n\n\n\nKód\nB[0] = 999    # zmena prvej hodnoty v pohľade B na vektor x\n\nprint('Vektor B (pohľad na x):', B)\nprint('Vektor x (zmenená hodnota B):', x)\n\n\nVektor B (pohľad na x): [999   3   4   5   6]\nVektor x (zmenená hodnota B): [  0   1 999   3   4   5   6   7   8   9]\n\n\n\n\nKód\nC = x[2:7].copy()  # explicitná kópia\nC[0] = -1\n\nprint(f\"Pôvodný vektor x = \\n{x}\")\nprint('Vektor C (Kópia x):', C)\nprint('Vektor x (nezmenená hodnota C):', x)\n\n\nPôvodný vektor x = \n[  0   1 999   3   4   5   6   7   8   9]\nVektor C (Kópia x): [-1  3  4  5  6]\nVektor x (nezmenená hodnota C): [  0   1 999   3   4   5   6   7   8   9]",
    "crumbs": [
      "Domov",
      "📚 Knižnice",
      "📐 NumPy",
      "Indexovanie a rezanie"
    ]
  },
  {
    "objectID": "content/numpy_indexovanie.html#pokročilé-indexovanie",
    "href": "content/numpy_indexovanie.html#pokročilé-indexovanie",
    "title": "Indexovanie a rezanie",
    "section": "🧪 Pokročilé indexovanie",
    "text": "🧪 Pokročilé indexovanie\n\n⚖️ Boolean (maskové) indexovanie\n\n\nKód\nprint(f\"Pôvodný vektor x = \\n{x}\")\n\nmaska = (x % 2 == 0) # zvyšok po delení 2 je rovný 0 (vyhľadá párne čísla)\nprint('mask:', maska)\n\nprint('párne:', x[maska])\n\n# priamy zápis podmienky\nprint('párne:', x[(x%2==0)])\n\n\nPôvodný vektor x = \n[  0   1 999   3   4   5   6   7   8   9]\nmask: [ True False False False  True False  True False  True False]\npárne: [0 4 6 8]\npárne: [0 4 6 8]\n\n\n\n\n🗒️ Fancy indexovanie (zoznamy/polia indexov)\n\n\nKód\nindexy = [0, 3, 7]\nprint('vybrané prvky x:', x[indexy])\n\nriadky = np.array([0, 2])\nstlpce = np.array([1, 3])\nprint('A[riadky, stlpce]:', A[riadky, stlpce])  # (0,1) a (2,3)\n\n\nvybrané prvky x: [0 3 7]\nA[riadky, stlpce]: [ 2 12]\n\n\n\n\n⚗️ Miešanie integer a slice indexov\n\n\nKód\nprint(A[1, :])     # 2. riadok, všetky stĺpce\nprint(A[:, 1])     # všetky riadky, 2. stĺpec\nprint(A[1:3, [0,2]])  # riadky 2..3 (bez 3), stĺpce 1 a 3\n\n\n[5 6 7 8]\n[ 2  6 10]\n[[ 5  7]\n [ 9 11]]",
    "crumbs": [
      "Domov",
      "📚 Knižnice",
      "📐 NumPy",
      "Indexovanie a rezanie"
    ]
  },
  {
    "objectID": "content/numpy_indexovanie.html#zhrnutie",
    "href": "content/numpy_indexovanie.html#zhrnutie",
    "title": "Indexovanie a rezanie",
    "section": "🧠 Zhrnutie",
    "text": "🧠 Zhrnutie\n\nslice vracia view (zdieľanú pamäť), používajte .copy() ak chcete nezávislé dáta\nPoužívajte : pre celé osi (A[:, 1])\nZáporné indexy rátajú od konca (x[-1])",
    "crumbs": [
      "Domov",
      "📚 Knižnice",
      "📐 NumPy",
      "Indexovanie a rezanie"
    ]
  },
  {
    "objectID": "content/numpy_indexovanie.html#oficiálna-dokumentácia-numpy",
    "href": "content/numpy_indexovanie.html#oficiálna-dokumentácia-numpy",
    "title": "Indexovanie a rezanie",
    "section": "📚 Oficiálna dokumentácia NumPy",
    "text": "📚 Oficiálna dokumentácia NumPy\nPodrobný popis funkcií, ich parametrov a príkladov použitia nájdete v oficiálnej dokumentácii knižnice NumPy na adrese: https://numpy.org/doc/stable/.",
    "crumbs": [
      "Domov",
      "📚 Knižnice",
      "📐 NumPy",
      "Indexovanie a rezanie"
    ]
  },
  {
    "objectID": "content/numpy_indexovanie.html#videonávod",
    "href": "content/numpy_indexovanie.html#videonávod",
    "title": "Indexovanie a rezanie",
    "section": "🎞️ Videonávod",
    "text": "🎞️ Videonávod",
    "crumbs": [
      "Domov",
      "📚 Knižnice",
      "📐 NumPy",
      "Indexovanie a rezanie"
    ]
  },
  {
    "objectID": "content/ntice.html",
    "href": "content/ntice.html",
    "title": "N-tice",
    "section": "",
    "text": "N-tica (tuple) je veľmi podobná zoznamu, ale na rozdiel od list je nemenná – jej obsah sa po vytvorení nedá meniť.",
    "crumbs": [
      "Domov",
      "💾 Dátové štruktúry",
      "N-tice"
    ]
  },
  {
    "objectID": "content/ntice.html#úvod",
    "href": "content/ntice.html#úvod",
    "title": "N-tice",
    "section": "",
    "text": "N-tica (tuple) je veľmi podobná zoznamu, ale na rozdiel od list je nemenná – jej obsah sa po vytvorení nedá meniť.",
    "crumbs": [
      "Domov",
      "💾 Dátové štruktúry",
      "N-tice"
    ]
  },
  {
    "objectID": "content/ntice.html#vytvorenie-n-tice",
    "href": "content/ntice.html#vytvorenie-n-tice",
    "title": "N-tice",
    "section": "🧪 Vytvorenie n-tice",
    "text": "🧪 Vytvorenie n-tice\n\n\nKód\ncisla = (1, 2, 3)\nslova = (\"a\", \"b\", \"c\")\nzmiesana = (1, \"text\", False)\n\n\n\n❕ Zoznam je definovaný pomocou (). ❕ Jednotlivé prvky sú oddelené čiarkou.",
    "crumbs": [
      "Domov",
      "💾 Dátové štruktúry",
      "N-tice"
    ]
  },
  {
    "objectID": "content/ntice.html#prístup-k-prvkom",
    "href": "content/ntice.html#prístup-k-prvkom",
    "title": "N-tice",
    "section": "🔢 Prístup k prvkom",
    "text": "🔢 Prístup k prvkom\n\n\nKód\nprint(cisla[0])\nprint(slova[2])\n\n\n1\nc\n\n\n\n❕ Prístup a indexácia jednotlivých prvkov n-tice je analogická s dátovou štruktúrou zoznam.",
    "crumbs": [
      "Domov",
      "💾 Dátové štruktúry",
      "N-tice"
    ]
  },
  {
    "objectID": "content/ntice.html#iterácia-cez-n-ticu",
    "href": "content/ntice.html#iterácia-cez-n-ticu",
    "title": "N-tice",
    "section": "🔄 Iterácia cez n-ticu",
    "text": "🔄 Iterácia cez n-ticu\n\n\nKód\nfor hodnota in zmiesana:\n    print(hodnota)\n\n\n1\ntext\nFalse\n\n\n\n❕ Iterácia cez jednotlivé prvky n-tice je analogická s dátovou štruktúrou zoznam.",
    "crumbs": [
      "Domov",
      "💾 Dátové štruktúry",
      "N-tice"
    ]
  },
  {
    "objectID": "content/ntice.html#pokus-o-zmenu-hodnoty",
    "href": "content/ntice.html#pokus-o-zmenu-hodnoty",
    "title": "N-tice",
    "section": "❌ Pokus o zmenu hodnoty",
    "text": "❌ Pokus o zmenu hodnoty\n\n\nKód\n# cisla[0] = 100  # Chyba: tuple je nemenný\n\n\n\n❗ Ďĺžka n-tice a hodnoty v nej sú nemenné.",
    "crumbs": [
      "Domov",
      "💾 Dátové štruktúry",
      "N-tice"
    ]
  },
  {
    "objectID": "content/ntice.html#funkcie-pre-n-tice",
    "href": "content/ntice.html#funkcie-pre-n-tice",
    "title": "N-tice",
    "section": "🧮 Funkcie pre n-tice",
    "text": "🧮 Funkcie pre n-tice\n\n\nKód\ncisla = (1, 2, 2, 3, 2)\n\n\n\nPočet prvkov n-tice\n\n\nKód\nprint(len(cisla)) # počet prvkov\n\n\n5\n\n\n\n\nPočetnosť prvkov n-tice\n\n\nKód\nprint(cisla.count(2)) # koľkokrát sa vyskytuje 2\n\n\n3\n\n\n\n\nVyhľadávanie indexu podľa hodnoty\n\n\nKód\nprint(cisla.index(3)) # index prvého výskytu 3\n\n\n3",
    "crumbs": [
      "Domov",
      "💾 Dátové štruktúry",
      "N-tice"
    ]
  },
  {
    "objectID": "content/ntice.html#rozbalenie-n-tice",
    "href": "content/ntice.html#rozbalenie-n-tice",
    "title": "N-tice",
    "section": "📍 Rozbalenie n-tice",
    "text": "📍 Rozbalenie n-tice\n\n\nKód\nx, y = (10, 20)\nprint(x)\nprint(y)\n\n\n10\n20\n\n\n\n❗ Hodnoty z n-tice je možné vytiahnuť a pracovať s nimi v ďalších výpočtoch.",
    "crumbs": [
      "Domov",
      "💾 Dátové štruktúry",
      "N-tice"
    ]
  },
  {
    "objectID": "content/ntice.html#zhrnutie",
    "href": "content/ntice.html#zhrnutie",
    "title": "N-tice",
    "section": "🧠 Zhrnutie",
    "text": "🧠 Zhrnutie\n\ntuple je nemenná kolekcia podobná zoznamu\nHodnoty v tuple sa nedajú meniť ani mazať\nVhodná pre dáta, ktoré sa nemajú meniť\nDá sa iterovať a rozbaliť",
    "crumbs": [
      "Domov",
      "💾 Dátové štruktúry",
      "N-tice"
    ]
  },
  {
    "objectID": "content/ntice.html#videonávod",
    "href": "content/ntice.html#videonávod",
    "title": "N-tice",
    "section": "🎞️ Videonávod",
    "text": "🎞️ Videonávod",
    "crumbs": [
      "Domov",
      "💾 Dátové štruktúry",
      "N-tice"
    ]
  },
  {
    "objectID": "content/matplotlib_zakladne_grafy.html",
    "href": "content/matplotlib_zakladne_grafy.html",
    "title": "Základné grafy",
    "section": "",
    "text": "Knižnica Matplotlib patrí medzi najpoužívanejšie knižnice v Pythone na vizualizáciu dát. Najčastejšie sa používa modul pyplot, ktorý sa importuje skrátene ako plt.",
    "crumbs": [
      "Domov",
      "📚 Knižnice",
      "📊 Matplotlib",
      "Základné grafy"
    ]
  },
  {
    "objectID": "content/matplotlib_zakladne_grafy.html#úvod",
    "href": "content/matplotlib_zakladne_grafy.html#úvod",
    "title": "Základné grafy",
    "section": "",
    "text": "Knižnica Matplotlib patrí medzi najpoužívanejšie knižnice v Pythone na vizualizáciu dát. Najčastejšie sa používa modul pyplot, ktorý sa importuje skrátene ako plt.",
    "crumbs": [
      "Domov",
      "📚 Knižnice",
      "📊 Matplotlib",
      "Základné grafy"
    ]
  },
  {
    "objectID": "content/matplotlib_zakladne_grafy.html#čiarový-graf-plt.plot",
    "href": "content/matplotlib_zakladne_grafy.html#čiarový-graf-plt.plot",
    "title": "Základné grafy",
    "section": "📈 Čiarový graf – plt.plot()",
    "text": "📈 Čiarový graf – plt.plot()\n\n\nKód\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\n\n\nKód\nx = np.linspace(0, 10, 100)\ny = np.sin(x)\n\nplt.plot(x, y, label=\"sin(x)\", color=\"blue\", linewidth=2)\nplt.title(\"Čiarový graf\")\nplt.xlabel(\"x\")\nplt.ylabel(\"y\")\nplt.legend()\nplt.show()",
    "crumbs": [
      "Domov",
      "📚 Knižnice",
      "📊 Matplotlib",
      "Základné grafy"
    ]
  },
  {
    "objectID": "content/matplotlib_zakladne_grafy.html#bodový-graf-plt.scatter",
    "href": "content/matplotlib_zakladne_grafy.html#bodový-graf-plt.scatter",
    "title": "Základné grafy",
    "section": "🔵 Bodový graf – plt.scatter()",
    "text": "🔵 Bodový graf – plt.scatter()\n\n\nKód\nx = np.random.rand(50)\ny = np.random.rand(50)\n\nplt.scatter(x, y, color=\"red\", marker=\"o\", s=80)\nplt.title(\"Bodový graf\")\nplt.xlabel(\"x\")\nplt.ylabel(\"y\")\nplt.show()",
    "crumbs": [
      "Domov",
      "📚 Knižnice",
      "📊 Matplotlib",
      "Základné grafy"
    ]
  },
  {
    "objectID": "content/matplotlib_zakladne_grafy.html#stĺpcový-graf-plt.bar",
    "href": "content/matplotlib_zakladne_grafy.html#stĺpcový-graf-plt.bar",
    "title": "Základné grafy",
    "section": "📊 Stĺpcový graf – plt.bar()",
    "text": "📊 Stĺpcový graf – plt.bar()\n\n\nKód\ncategories = [\"A\", \"B\", \"C\", \"D\"]\nvalues = [4, 7, 2, 5]\n\nplt.bar(categories, values, color=\"green\", width=0.6)\nplt.title(\"Stĺpcový graf\")\nplt.xlabel(\"Kategórie\")\nplt.ylabel(\"Hodnoty\")\nplt.show()",
    "crumbs": [
      "Domov",
      "📚 Knižnice",
      "📊 Matplotlib",
      "Základné grafy"
    ]
  },
  {
    "objectID": "content/matplotlib_zakladne_grafy.html#zhrnutie",
    "href": "content/matplotlib_zakladne_grafy.html#zhrnutie",
    "title": "Základné grafy",
    "section": "🧠 Zhrnutie",
    "text": "🧠 Zhrnutie\n\nplot() – čiarový graf pre funkcie alebo časové rady\n\nscatter() – bodový graf pre vzťah medzi premennými\n\nbar() – stĺpcový graf pre kategórie\n\nVšetky grafy je možné doplniť o titulky, popisy osí, legendu a rôzne formátovania.",
    "crumbs": [
      "Domov",
      "📚 Knižnice",
      "📊 Matplotlib",
      "Základné grafy"
    ]
  },
  {
    "objectID": "content/matplotlib_zakladne_grafy.html#oficiálna-dokumentácia-matplotlib",
    "href": "content/matplotlib_zakladne_grafy.html#oficiálna-dokumentácia-matplotlib",
    "title": "Základné grafy",
    "section": "📚 Oficiálna dokumentácia Matplotlib",
    "text": "📚 Oficiálna dokumentácia Matplotlib\nPodrobný popis funkcií, ich parametrov a príkladov použitia nájdete v oficiálnej dokumentácii knižnice Matplotlib na adrese: https://matplotlib.org/stable/plot_types/index.html.",
    "crumbs": [
      "Domov",
      "📚 Knižnice",
      "📊 Matplotlib",
      "Základné grafy"
    ]
  },
  {
    "objectID": "content/matplotlib_zakladne_grafy.html#videonávod",
    "href": "content/matplotlib_zakladne_grafy.html#videonávod",
    "title": "Základné grafy",
    "section": "🎞️ Videonávod",
    "text": "🎞️ Videonávod",
    "crumbs": [
      "Domov",
      "📚 Knižnice",
      "📊 Matplotlib",
      "Základné grafy"
    ]
  },
  {
    "objectID": "content/matplotlib_doplnkove_grafy.html",
    "href": "content/matplotlib_doplnkove_grafy.html",
    "title": "Doplnkové grafy",
    "section": "",
    "text": "Knižnica Matplotlib ponúka aj ďalšie základné grafy, ako histogram na znázornenie rozdelenia dát a koláčový graf (pie chart) na znázornenie podielov kategórií.",
    "crumbs": [
      "Domov",
      "📚 Knižnice",
      "📊 Matplotlib",
      "Doplnkové grafy"
    ]
  },
  {
    "objectID": "content/matplotlib_doplnkove_grafy.html#úvod",
    "href": "content/matplotlib_doplnkove_grafy.html#úvod",
    "title": "Doplnkové grafy",
    "section": "",
    "text": "Knižnica Matplotlib ponúka aj ďalšie základné grafy, ako histogram na znázornenie rozdelenia dát a koláčový graf (pie chart) na znázornenie podielov kategórií.",
    "crumbs": [
      "Domov",
      "📚 Knižnice",
      "📊 Matplotlib",
      "Doplnkové grafy"
    ]
  },
  {
    "objectID": "content/matplotlib_doplnkove_grafy.html#histogram-plt.hist",
    "href": "content/matplotlib_doplnkove_grafy.html#histogram-plt.hist",
    "title": "Doplnkové grafy",
    "section": "📉 Histogram – plt.hist()",
    "text": "📉 Histogram – plt.hist()\n\n\nKód\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\n\n\nKód\ndata = np.random.randn(1000)  # 1000 náhodných hodnôt z normálneho rozdelenia\n\nplt.hist(data, bins=30, color=\"skyblue\", edgecolor=\"black\")\nplt.title(\"Histogram\")\nplt.xlabel(\"Hodnota\")\nplt.ylabel(\"Frekvencia\")\nplt.show()",
    "crumbs": [
      "Domov",
      "📚 Knižnice",
      "📊 Matplotlib",
      "Doplnkové grafy"
    ]
  },
  {
    "objectID": "content/matplotlib_doplnkove_grafy.html#koláčový-graf-plt.pie",
    "href": "content/matplotlib_doplnkove_grafy.html#koláčový-graf-plt.pie",
    "title": "Doplnkové grafy",
    "section": "🥧 Koláčový graf – plt.pie()",
    "text": "🥧 Koláčový graf – plt.pie()\n\n\nKód\nlabels = ['A', 'B', 'C', 'D']\nsizes = [20, 30, 25, 25]\ncolors = ['gold', 'lightcoral', 'lightskyblue', 'yellowgreen']\n\nplt.pie(sizes, labels=labels, colors=colors, autopct='%1.1f%%', startangle=90)\nplt.title(\"Koláčový graf\")\nplt.axis('equal')  # zabezpečí, že kruh bude skutočne kruh\nplt.show()",
    "crumbs": [
      "Domov",
      "📚 Knižnice",
      "📊 Matplotlib",
      "Doplnkové grafy"
    ]
  },
  {
    "objectID": "content/matplotlib_doplnkove_grafy.html#zhrnutie",
    "href": "content/matplotlib_doplnkove_grafy.html#zhrnutie",
    "title": "Doplnkové grafy",
    "section": "🧠 Zhrnutie",
    "text": "🧠 Zhrnutie\n\nhist() – zobrazuje rozdelenie dát pomocou stĺpcov (frekvencia hodnôt).\n\npie() – znázorňuje podiely jednotlivých kategórií v celku.\n\nTieto grafy dopĺňajú základnú sadu vizualizácií v Matplotlib popri plot(), scatter() a bar().",
    "crumbs": [
      "Domov",
      "📚 Knižnice",
      "📊 Matplotlib",
      "Doplnkové grafy"
    ]
  },
  {
    "objectID": "content/matplotlib_doplnkove_grafy.html#oficiálna-dokumentácia-matplotlib",
    "href": "content/matplotlib_doplnkove_grafy.html#oficiálna-dokumentácia-matplotlib",
    "title": "Doplnkové grafy",
    "section": "📚 Oficiálna dokumentácia Matplotlib",
    "text": "📚 Oficiálna dokumentácia Matplotlib\nPodrobný popis funkcií, ich parametrov a príkladov použitia nájdete v oficiálnej dokumentácii knižnice Matplotlib na adrese: https://matplotlib.org/stable/plot_types/index.html.",
    "crumbs": [
      "Domov",
      "📚 Knižnice",
      "📊 Matplotlib",
      "Doplnkové grafy"
    ]
  },
  {
    "objectID": "content/matplotlib_doplnkove_grafy.html#videonávod",
    "href": "content/matplotlib_doplnkove_grafy.html#videonávod",
    "title": "Doplnkové grafy",
    "section": "🎞️ Videonávod",
    "text": "🎞️ Videonávod",
    "crumbs": [
      "Domov",
      "📚 Knižnice",
      "📊 Matplotlib",
      "Doplnkové grafy"
    ]
  },
  {
    "objectID": "content/instalacia_a_import_kniznic.html",
    "href": "content/instalacia_a_import_kniznic.html",
    "title": "Inštalácia a import knižníc",
    "section": "",
    "text": "Knižnice (moduly) v Pythone rozširujú možnosti jazyka. Môžete ich buď nainštalovať (ak nie sú súčasťou štandardnej knižnice), alebo importovať, ak už sú dostupné.",
    "crumbs": [
      "Domov",
      "📚 Knižnice",
      "Inštalácia a import knižníc"
    ]
  },
  {
    "objectID": "content/instalacia_a_import_kniznic.html#úvod",
    "href": "content/instalacia_a_import_kniznic.html#úvod",
    "title": "Inštalácia a import knižníc",
    "section": "",
    "text": "Knižnice (moduly) v Pythone rozširujú možnosti jazyka. Môžete ich buď nainštalovať (ak nie sú súčasťou štandardnej knižnice), alebo importovať, ak už sú dostupné.",
    "crumbs": [
      "Domov",
      "📚 Knižnice",
      "Inštalácia a import knižníc"
    ]
  },
  {
    "objectID": "content/instalacia_a_import_kniznic.html#inštalácia-knižnice-pomocou-pip",
    "href": "content/instalacia_a_import_kniznic.html#inštalácia-knižnice-pomocou-pip",
    "title": "Inštalácia a import knižníc",
    "section": "🛠️ Inštalácia knižnice pomocou pip",
    "text": "🛠️ Inštalácia knižnice pomocou pip\nSpúšťa sa v termináli (alebo v bunkách Jupyteru s !):\n\n\nKód\n!pip install numpy\n\n\nRequirement already satisfied: numpy in c:\\users\\kubko\\.conda\\envs\\projects\\lib\\site-packages (1.26.4)\n\n\n\nV distibúcii Anaconda je pip dostupný aj ako knižnica, ktorá umožňuje inštaláciu knižníc bez !",
    "crumbs": [
      "Domov",
      "📚 Knižnice",
      "Inštalácia a import knižníc"
    ]
  },
  {
    "objectID": "content/instalacia_a_import_kniznic.html#import-knižnice-do-kódu",
    "href": "content/instalacia_a_import_kniznic.html#import-knižnice-do-kódu",
    "title": "Inštalácia a import knižníc",
    "section": "📚 Import knižnice do kódu",
    "text": "📚 Import knižnice do kódu\n\n\nKód\nimport numpy\nimport pandas",
    "crumbs": [
      "Domov",
      "📚 Knižnice",
      "Inštalácia a import knižníc"
    ]
  },
  {
    "objectID": "content/instalacia_a_import_kniznic.html#import-len-konkrétnej-časti-knižnice",
    "href": "content/instalacia_a_import_kniznic.html#import-len-konkrétnej-časti-knižnice",
    "title": "Inštalácia a import knižníc",
    "section": "🎯 Import len konkrétnej časti knižnice",
    "text": "🎯 Import len konkrétnej časti knižnice\n\n\nKód\nfrom numpy import sqrt, pi\n\nprint(sqrt(16))\nprint(pi)\n\n\n4.0\n3.141592653589793",
    "crumbs": [
      "Domov",
      "📚 Knižnice",
      "Inštalácia a import knižníc"
    ]
  },
  {
    "objectID": "content/instalacia_a_import_kniznic.html#alias-prezývka-pre-knižnicu",
    "href": "content/instalacia_a_import_kniznic.html#alias-prezývka-pre-knižnicu",
    "title": "Inštalácia a import knižníc",
    "section": "✏️ Alias (prezývka) pre knižnicu",
    "text": "✏️ Alias (prezývka) pre knižnicu\n\n\nKód\nimport numpy as np\n\npole = np.array([1, 2, 3])\nprint(pole)\n\n\n[1 2 3]\n\n\nMnohé knižnice majú v komunite programátorov zaužívané aliasy. Týmito aliasmi referújú ku knižiciam na mnohých fórach či dokumentáciách.\n\n\n\n\n\n\n\n\nKnižnica\nZaužívaný alias\nPríklad importu\n\n\n\n\nnumpy\nnp\nimport numpy as np\n\n\npandas\npd\nimport pandas as pd\n\n\nmatplotlib.pyplot\nplt\nimport matplotlib.pyplot as plt\n\n\nsympy\nsp\nimport sympy as sp",
    "crumbs": [
      "Domov",
      "📚 Knižnice",
      "Inštalácia a import knižníc"
    ]
  },
  {
    "objectID": "content/instalacia_a_import_kniznic.html#zhrnutie",
    "href": "content/instalacia_a_import_kniznic.html#zhrnutie",
    "title": "Inštalácia a import knižníc",
    "section": "🧠 Zhrnutie",
    "text": "🧠 Zhrnutie\n\nNa inštaláciu novej knižnice sa používa pip install ...\nNa použitie knižnice v kóde ju importujete pomocou import\nMôžete importovať aj len časť knižnice (from ... import ...)\nAlias (as) zjednoduší zápis často používaných knižníc",
    "crumbs": [
      "Domov",
      "📚 Knižnice",
      "Inštalácia a import knižníc"
    ]
  },
  {
    "objectID": "content/instalacia_a_import_kniznic.html#videonávod",
    "href": "content/instalacia_a_import_kniznic.html#videonávod",
    "title": "Inštalácia a import knižníc",
    "section": "🎞️ Videonávod",
    "text": "🎞️ Videonávod",
    "crumbs": [
      "Domov",
      "📚 Knižnice",
      "Inštalácia a import knižníc"
    ]
  },
  {
    "objectID": "content/definovanie_funkcii.html",
    "href": "content/definovanie_funkcii.html",
    "title": "Definovanie vlastných funkcií",
    "section": "",
    "text": "Funkcia je blok kódu, ktorý môžete opakovane volať. Definuje sa pomocou kľúčového slova def a môže mať vstupné argumenty aj návratovú hodnotu.",
    "crumbs": [
      "Domov",
      "⚙️ Funkcie",
      "Definovanie vlastných funkcií"
    ]
  },
  {
    "objectID": "content/definovanie_funkcii.html#úvod",
    "href": "content/definovanie_funkcii.html#úvod",
    "title": "Definovanie vlastných funkcií",
    "section": "",
    "text": "Funkcia je blok kódu, ktorý môžete opakovane volať. Definuje sa pomocou kľúčového slova def a môže mať vstupné argumenty aj návratovú hodnotu.",
    "crumbs": [
      "Domov",
      "⚙️ Funkcie",
      "Definovanie vlastných funkcií"
    ]
  },
  {
    "objectID": "content/definovanie_funkcii.html#jednoduchá-funkcia-bez-argumentov",
    "href": "content/definovanie_funkcii.html#jednoduchá-funkcia-bez-argumentov",
    "title": "Definovanie vlastných funkcií",
    "section": "✅ Jednoduchá funkcia bez argumentov",
    "text": "✅ Jednoduchá funkcia bez argumentov\n\n\nKód\ndef pozdrav():\n    print(\"Ahoj, svet!\")\n\npozdrav()\n\n\nAhoj, svet!",
    "crumbs": [
      "Domov",
      "⚙️ Funkcie",
      "Definovanie vlastných funkcií"
    ]
  },
  {
    "objectID": "content/definovanie_funkcii.html#funkcia-s-argumentom",
    "href": "content/definovanie_funkcii.html#funkcia-s-argumentom",
    "title": "Definovanie vlastných funkcií",
    "section": "🧮 Funkcia s argumentom",
    "text": "🧮 Funkcia s argumentom\n\n\nKód\ndef vypis_meno(meno):\n    print(f\"Ahoj, {meno}!\")\n\nvypis_meno(\"Jakub\")\n\n\nAhoj, Jakub!",
    "crumbs": [
      "Domov",
      "⚙️ Funkcie",
      "Definovanie vlastných funkcií"
    ]
  },
  {
    "objectID": "content/definovanie_funkcii.html#funkcia-s-viacerými-argumentmi",
    "href": "content/definovanie_funkcii.html#funkcia-s-viacerými-argumentmi",
    "title": "Definovanie vlastných funkcií",
    "section": "🔁 Funkcia s viacerými argumentmi",
    "text": "🔁 Funkcia s viacerými argumentmi\n\n\nKód\ndef sucet(a, b):\n    print(a + b)\n\nsucet(3, 5)\n\n\n8",
    "crumbs": [
      "Domov",
      "⚙️ Funkcie",
      "Definovanie vlastných funkcií"
    ]
  },
  {
    "objectID": "content/definovanie_funkcii.html#funkcia-s-návratovou-hodnotou-return",
    "href": "content/definovanie_funkcii.html#funkcia-s-návratovou-hodnotou-return",
    "title": "Definovanie vlastných funkcií",
    "section": "🎯 Funkcia s návratovou hodnotou (return)",
    "text": "🎯 Funkcia s návratovou hodnotou (return)\n\n\nKód\ndef sucet(a, b):\n    return a + b\n\nvysledok = sucet(4, 6)\nprint(vysledok)\n\n\n10",
    "crumbs": [
      "Domov",
      "⚙️ Funkcie",
      "Definovanie vlastných funkcií"
    ]
  },
  {
    "objectID": "content/definovanie_funkcii.html#predvolené-hodnoty-argumentov",
    "href": "content/definovanie_funkcii.html#predvolené-hodnoty-argumentov",
    "title": "Definovanie vlastných funkcií",
    "section": "⚙️ Predvolené hodnoty argumentov",
    "text": "⚙️ Predvolené hodnoty argumentov\n\n\nKód\ndef pozdrav(meno=\"svet\"):\n    print(f\"Ahoj, {meno}!\")\n\npozdrav()\npozdrav(\"Anna\")\n\n\nAhoj, svet!\nAhoj, Anna!",
    "crumbs": [
      "Domov",
      "⚙️ Funkcie",
      "Definovanie vlastných funkcií"
    ]
  },
  {
    "objectID": "content/definovanie_funkcii.html#dokumentácia-funkcie",
    "href": "content/definovanie_funkcii.html#dokumentácia-funkcie",
    "title": "Definovanie vlastných funkcií",
    "section": "📖 Dokumentácia funkcie",
    "text": "📖 Dokumentácia funkcie\n\n\nKód\ndef nasobenie(a, b):\n    \"\"\"Vráti súčin dvoch čísel.\"\"\"\n    return a * b\n\nprint(nasobenie(2, 4))\nprint(nasobenie.__doc__)\n\n\n8\nVráti súčin dvoch čísel.",
    "crumbs": [
      "Domov",
      "⚙️ Funkcie",
      "Definovanie vlastných funkcií"
    ]
  },
  {
    "objectID": "content/definovanie_funkcii.html#zhrnutie",
    "href": "content/definovanie_funkcii.html#zhrnutie",
    "title": "Definovanie vlastných funkcií",
    "section": "🧠 Zhrnutie",
    "text": "🧠 Zhrnutie\n\nFunkcia sa definuje pomocou def, telo funkcie je odsadené\nMôže mať parametre aj návratovú hodnotu (return)\nPoužívajte funkcie pre prehľadnosť a opätovnú použiteľnosť kódu, tzv. “DRY” prístup (angl. Don´t repeat yourself)\ndocstring je popis funkcie, ktorý sa dá zobraziť pomocou metódy .__doc__, ktorá sa aplikuje na funkciu\nKvalitná dokumentácia je základom znovupoužiteľnosti vašej funckie",
    "crumbs": [
      "Domov",
      "⚙️ Funkcie",
      "Definovanie vlastných funkcií"
    ]
  },
  {
    "objectID": "content/definovanie_funkcii.html#videonávod",
    "href": "content/definovanie_funkcii.html#videonávod",
    "title": "Definovanie vlastných funkcií",
    "section": "🎞️ Videonávod",
    "text": "🎞️ Videonávod",
    "crumbs": [
      "Domov",
      "⚙️ Funkcie",
      "Definovanie vlastných funkcií"
    ]
  },
  {
    "objectID": "content/anaconda.html",
    "href": "content/anaconda.html",
    "title": "Inštalácia a vývojové prostredia",
    "section": "",
    "text": "Distribúcia Anaconda predstavuje kompletné riešenie pre prácu s jazykom Python, najmä v oblastiach dátovej analýzy, strojového učenia a vedeckých výpočtov. Obsahuje:\n\nnajpoužívanejšie knižnice (napr. NumPy, Pandas, Matplotlib, SciPy),\nsprávcu balíkov a prostredí conda,\nvývojové nástroje ako Jupyter Lab, Jupyter Notebook, či Spyder.\n\nJe ideálna pre začiatočníkov, lebo šetrí čas a znižuje riziko konfliktov medzi verziami knižníc.\nDostupná je taktiež zjednodušená, tzv. “lightweight” verzia, s názvom MiniConda.",
    "crumbs": [
      "Domov",
      "🚀 Základy Pythonu",
      "Inštalácia a vývojové prostredia"
    ]
  },
  {
    "objectID": "content/anaconda.html#prečo-používať-anacondu",
    "href": "content/anaconda.html#prečo-používať-anacondu",
    "title": "Inštalácia a vývojové prostredia",
    "section": "",
    "text": "Distribúcia Anaconda predstavuje kompletné riešenie pre prácu s jazykom Python, najmä v oblastiach dátovej analýzy, strojového učenia a vedeckých výpočtov. Obsahuje:\n\nnajpoužívanejšie knižnice (napr. NumPy, Pandas, Matplotlib, SciPy),\nsprávcu balíkov a prostredí conda,\nvývojové nástroje ako Jupyter Lab, Jupyter Notebook, či Spyder.\n\nJe ideálna pre začiatočníkov, lebo šetrí čas a znižuje riziko konfliktov medzi verziami knižníc.\nDostupná je taktiež zjednodušená, tzv. “lightweight” verzia, s názvom MiniConda.",
    "crumbs": [
      "Domov",
      "🚀 Základy Pythonu",
      "Inštalácia a vývojové prostredia"
    ]
  },
  {
    "objectID": "content/anaconda.html#inštalácia-anacondy",
    "href": "content/anaconda.html#inštalácia-anacondy",
    "title": "Inštalácia a vývojové prostredia",
    "section": "🔽 Inštalácia Anacondy",
    "text": "🔽 Inštalácia Anacondy\n\nNavštívte oficiálnu stránku distribúcie Anacondy na tomto linku.\nZ ponuky inštalátorov distribúcie Anacondy vyberte verziu pre svoj operačný systém (Windows / macOS / Linux), prípadne stiahnite detegovanú verziu.\nSpustite inštalátor a nechajte predvolené nastavenia.",
    "crumbs": [
      "Domov",
      "🚀 Základy Pythonu",
      "Inštalácia a vývojové prostredia"
    ]
  },
  {
    "objectID": "content/anaconda.html#vývojové-prostredia",
    "href": "content/anaconda.html#vývojové-prostredia",
    "title": "Inštalácia a vývojové prostredia",
    "section": "🧪 Vývojové prostredia",
    "text": "🧪 Vývojové prostredia\nVývojové prostredie je softvérový nástroj, ktorý poskytuje používateľovi všetko potrebné na písanie, testovanie a správu kódu v jednom prehľadnom rozhraní. Pre nás sú z hľadiska jednoduchosti použitia, relevantné najmä tieto:\n\n\n📓 Jupyter Notebook\nJupyter Notebook je klasické webové rozhranie na písanie a spúšťanie Python kódu v tzv. notebookoch (.ipynb súboroch).\n\n✅ Výhody\n\nVeľmi jednoduché a intuitívne prostredie.\nKód a výsledky (grafy, tabuľky) sa zobrazujú v jednom dokumente.\nIdeálne na výučbu, rýchle experimenty a analýzu dát.\n\n\n\n🚫 Nevýhody\n\nObmedzené možnosti správy súborov a rozšírení.\nHoršia organizácia väčších projektov.\n\n\n\n\n\n🔬 Jupyter Lab\nJupyter Lab je modernejší nástupca Jupyter Notebooku, s rozšírenou funkcionalitou a lepším rozhraním.\n\n✅ Výhody\n\nMožnosť otvoriť viac notebookov, terminálov, Markdown súborov a dát naraz.\nPodpora rozšírení (napr. debugger, git, LSP).\nIdeálne na komplexnejšie projekty a výskum.\n\n\n\n🚫 Nevýhody\n\nO niečo náročnejšie rozhranie pre úplných začiatočníkov.\n\n\n\n\n\n🕸️ Spyder\nSpyder je desktopové vývojové prostredie (IDE) podobné napr. PyCharmu alebo MATLABu.\n\n✅ Výhody\n\nPrehľadné GUI: editor, konzola, premenné, pomocník, súborový prehliadač.\nSkvelé na písanie skriptov a ladenie menších Python aplikácií.\nObsahuje debugger, profiler a integráciu s IPython.\n\n\n\n🚫 Nevýhody\n\nMenej vhodné na interaktívnu dátovú analýzu než Jupyter.\nSlabšia podpora Markdownu a vizualizácií priamo v texte.\n\n\n\n\n\n🔍 Kedy čo použiť?\n\n\n\n\n\n\n\n\n\nProstredie\nVhodné na\nInteraktivita\nEditor typu IDE\n\n\n\n\nJupyter Notebook\nvýučba, rýchle testovanie\n⭐⭐⭐⭐\n❌\n\n\nJupyter Lab\ndátová analýza, výskum, viacero súborov\n⭐⭐⭐⭐⭐\n🟡 (základný)\n\n\nSpyder\nskripty, ladenie, technické výpočty\n⭐\n✅\n\n\n\n\n📌 Všetky tri prostredia sú dostupné priamo v distribúcii Anaconda a je len na vás, ktoré si vyberiete. Najlepšie výsledky často dosiahnete ich kombináciou podľa potreby, v závislosti od riešeného problému.",
    "crumbs": [
      "Domov",
      "🚀 Základy Pythonu",
      "Inštalácia a vývojové prostredia"
    ]
  },
  {
    "objectID": "content/anaconda.html#videonávod",
    "href": "content/anaconda.html#videonávod",
    "title": "Inštalácia a vývojové prostredia",
    "section": "🎞️ Videonávod",
    "text": "🎞️ Videonávod",
    "crumbs": [
      "Domov",
      "🚀 Základy Pythonu",
      "Inštalácia a vývojové prostredia"
    ]
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "O projekte",
    "section": "",
    "text": "Táto stránka vznikla ako podpora k predmetu Programovanie 1, ktorý je súčasťou bakalárskeho štúdia programu Geodézia a kartografia na Stavebnej fakulte STU v Bratislave.\nCieľom projektu je sprístupniť študentom praktické a relatívne zrozumiteľné materiály k výučbe programovania v jazyku Python, najmä s dôrazom na jeho využitie v geodetických, technických a vedeckých aplikáciách.\nWebová stránka slúži ako sprievodca k prednáškam a cvičeniam – obsahuje prehľad tém, ukážky kódov, vizualizácie, zadania a užitočné odkazy.\nProjekt podporuje samostatnú prácu študentov, rozvoj programátorského myslenia a schopnosti riešiť úlohy spojené so spracovaním a vizualizáciou údajov pre geodetickú prax.\n\n\n🧭 Veríme, že vďaka tejto platforme sa vám bude Python učiť efektívnejšie a zábavnejšie."
  },
  {
    "objectID": "about.html#o-projekte",
    "href": "about.html#o-projekte",
    "title": "O projekte",
    "section": "",
    "text": "Táto stránka vznikla ako podpora k predmetu Programovanie 1, ktorý je súčasťou bakalárskeho štúdia programu Geodézia a kartografia na Stavebnej fakulte STU v Bratislave.\nCieľom projektu je sprístupniť študentom praktické a relatívne zrozumiteľné materiály k výučbe programovania v jazyku Python, najmä s dôrazom na jeho využitie v geodetických, technických a vedeckých aplikáciách.\nWebová stránka slúži ako sprievodca k prednáškam a cvičeniam – obsahuje prehľad tém, ukážky kódov, vizualizácie, zadania a užitočné odkazy.\nProjekt podporuje samostatnú prácu študentov, rozvoj programátorského myslenia a schopnosti riešiť úlohy spojené so spracovaním a vizualizáciou údajov pre geodetickú prax.\n\n\n🧭 Veríme, že vďaka tejto platforme sa vám bude Python učiť efektívnejšie a zábavnejšie."
  },
  {
    "objectID": "content/cykly.html",
    "href": "content/cykly.html",
    "title": "Cykly",
    "section": "",
    "text": "Cykly slúžia na opakované vykonanie kódu. V Pythone máme dva základné typy:\n\nfor – keď vieme, koľkokrát sa má niečo opakovať\nwhile – keď chceme opakovať, kým platí podmienka",
    "crumbs": [
      "Domov",
      "🏗️ Riadiace štruktúry",
      "Cykly"
    ]
  },
  {
    "objectID": "content/cykly.html#úvod",
    "href": "content/cykly.html#úvod",
    "title": "Cykly",
    "section": "",
    "text": "Cykly slúžia na opakované vykonanie kódu. V Pythone máme dva základné typy:\n\nfor – keď vieme, koľkokrát sa má niečo opakovať\nwhile – keď chceme opakovať, kým platí podmienka",
    "crumbs": [
      "Domov",
      "🏗️ Riadiace štruktúry",
      "Cykly"
    ]
  },
  {
    "objectID": "content/cykly.html#cyklus-for",
    "href": "content/cykly.html#cyklus-for",
    "title": "Cykly",
    "section": "🔂 Cyklus for",
    "text": "🔂 Cyklus for\n\n\nKód\nfor i in range(5):\n    print(\"Opakovanie:\", i)\n\n\nOpakovanie: 0\nOpakovanie: 1\nOpakovanie: 2\nOpakovanie: 3\nOpakovanie: 4\n\n\n\n🔢 range()\n\n\nKód\nfor i in range(1, 6):\n    print(i)  # 1 až 5\n\n\n1\n2\n3\n4\n5\n\n\n\n\nKód\nfor i in range(10, 0, -2):\n    print(i)  # 10, 8, 6, 4, 2\n\n\n10\n8\n6\n4\n2",
    "crumbs": [
      "Domov",
      "🏗️ Riadiace štruktúry",
      "Cykly"
    ]
  },
  {
    "objectID": "content/cykly.html#prechod-cez-znaky-reťazca-alebo-zoznam",
    "href": "content/cykly.html#prechod-cez-znaky-reťazca-alebo-zoznam",
    "title": "Cykly",
    "section": "🔁 Prechod cez znaky reťazca alebo zoznam",
    "text": "🔁 Prechod cez znaky reťazca alebo zoznam\n\n\nKód\ntext = \"Python\"\nfor znak in text:\n    print(znak)\n\n\nP\ny\nt\nh\no\nn\n\n\n\n\nKód\nzoznam = [3, 5, 7]\nfor cislo in zoznam:\n    print(cislo * 2)\n\n\n6\n10\n14",
    "crumbs": [
      "Domov",
      "🏗️ Riadiace štruktúry",
      "Cykly"
    ]
  },
  {
    "objectID": "content/cykly.html#cyklus-while",
    "href": "content/cykly.html#cyklus-while",
    "title": "Cykly",
    "section": "🔄 Cyklus while",
    "text": "🔄 Cyklus while\n\n\nKód\ni = 0\nwhile i &lt; 5:\n    print(i)\n    i += 1\n\n\n0\n1\n2\n3\n4",
    "crumbs": [
      "Domov",
      "🏗️ Riadiace štruktúry",
      "Cykly"
    ]
  },
  {
    "objectID": "content/cykly.html#nekonečný-cyklus",
    "href": "content/cykly.html#nekonečný-cyklus",
    "title": "Cykly",
    "section": "⚠️ Nekonečný cyklus",
    "text": "⚠️ Nekonečný cyklus\n\n\nKód\n# while True:\n#     print(\"Toto beží navždy!\")  # Zastavte klávesou Ctrl+C",
    "crumbs": [
      "Domov",
      "🏗️ Riadiace štruktúry",
      "Cykly"
    ]
  },
  {
    "objectID": "content/cykly.html#zhrnutie",
    "href": "content/cykly.html#zhrnutie",
    "title": "Cykly",
    "section": "🧠 Zhrnutie",
    "text": "🧠 Zhrnutie\n\nfor sa používa pri početných opakovaniach\nwhile sa používa pri podmienkach\nrange(start, stop, step) generuje čísla pre for\nDávaj pozor na nekonečné cykly (while True)",
    "crumbs": [
      "Domov",
      "🏗️ Riadiace štruktúry",
      "Cykly"
    ]
  },
  {
    "objectID": "content/cykly.html#videonávod",
    "href": "content/cykly.html#videonávod",
    "title": "Cykly",
    "section": "🎞️ Videonávod",
    "text": "🎞️ Videonávod",
    "crumbs": [
      "Domov",
      "🏗️ Riadiace štruktúry",
      "Cykly"
    ]
  },
  {
    "objectID": "content/hello_world.html",
    "href": "content/hello_world.html",
    "title": "Prvé programy a výstup",
    "section": "",
    "text": "Prvý program v jazyku Python býva zvyčajne veľmi jednoduchý. Často vypisuje iba text na obrazovku – typicky Hello, world!. Na to slúži základná funkcia print().",
    "crumbs": [
      "Domov",
      "🚀 Základy Pythonu",
      "Prvé programy a výstup"
    ]
  },
  {
    "objectID": "content/hello_world.html#úvod",
    "href": "content/hello_world.html#úvod",
    "title": "Prvé programy a výstup",
    "section": "",
    "text": "Prvý program v jazyku Python býva zvyčajne veľmi jednoduchý. Často vypisuje iba text na obrazovku – typicky Hello, world!. Na to slúži základná funkcia print().",
    "crumbs": [
      "Domov",
      "🚀 Základy Pythonu",
      "Prvé programy a výstup"
    ]
  },
  {
    "objectID": "content/hello_world.html#základný-výstup",
    "href": "content/hello_world.html#základný-výstup",
    "title": "Prvé programy a výstup",
    "section": "🧪 Základný výstup",
    "text": "🧪 Základný výstup\n\n\nKód\nprint(\"Hello, world!\")\n\n\nHello, world!\n\n\n\n❕ Funkcia print() slúži na výpis textu alebo hodnôt do konzoly. Všetko, čo sa nachádza v zátvorkách, sa vypíše.",
    "crumbs": [
      "Domov",
      "🚀 Základy Pythonu",
      "Prvé programy a výstup"
    ]
  },
  {
    "objectID": "content/hello_world.html#textový-reťazec",
    "href": "content/hello_world.html#textový-reťazec",
    "title": "Prvé programy a výstup",
    "section": "🔡 Textový reťazec",
    "text": "🔡 Textový reťazec\nText, ktorý vypisujeme, musí byť v úvodzovkách:\n\n\nKód\nprint(\"Toto je text\")\nprint('Aj toto je text')\n\n\nToto je text\nAj toto je text\n\n\n\n❕ Môžeme použiť jednoduché ' alebo dvojité \" úvodzovky.",
    "crumbs": [
      "Domov",
      "🚀 Základy Pythonu",
      "Prvé programy a výstup"
    ]
  },
  {
    "objectID": "content/hello_world.html#viacero-hodnôt",
    "href": "content/hello_world.html#viacero-hodnôt",
    "title": "Prvé programy a výstup",
    "section": "➕ Viacero hodnôt",
    "text": "➕ Viacero hodnôt\nDo funkcie print() môžeme dať viacero hodnôt oddelených čiarkami:\n\n\nKód\nprint(\"Súčet 2 + 3 je\", 2 + 3)\n\n\nSúčet 2 + 3 je 5\n\n\n\n❕ Python automaticky vloží medzeru medzi jednotlivé časti výpisu.",
    "crumbs": [
      "Domov",
      "🚀 Základy Pythonu",
      "Prvé programy a výstup"
    ]
  },
  {
    "objectID": "content/hello_world.html#zhrnutie",
    "href": "content/hello_world.html#zhrnutie",
    "title": "Prvé programy a výstup",
    "section": "🧠 Zhrnutie",
    "text": "🧠 Zhrnutie\n\nprint() je vstavaná funkcia, ktorá nevyžaduje žiadne knižnice.\nPoužíva sa na výpis textu, čísel, premenných aj výpočtov.\nKaždé volanie print() skončí automaticky novým riadkom.",
    "crumbs": [
      "Domov",
      "🚀 Základy Pythonu",
      "Prvé programy a výstup"
    ]
  },
  {
    "objectID": "content/hello_world.html#príklady",
    "href": "content/hello_world.html#príklady",
    "title": "Prvé programy a výstup",
    "section": "💡 Príklady",
    "text": "💡 Príklady\n\n\nKód\nprint(123)              # vypíše číslo\nprint(\"Výsledok:\", 10)  # vypíše text aj číslo\nprint(5 + 7)            # vypíše výsledok výrazu\n\n\n123\nVýsledok: 10\n12",
    "crumbs": [
      "Domov",
      "🚀 Základy Pythonu",
      "Prvé programy a výstup"
    ]
  },
  {
    "objectID": "content/hello_world.html#videonávod",
    "href": "content/hello_world.html#videonávod",
    "title": "Prvé programy a výstup",
    "section": "🎞️ Videonávod",
    "text": "🎞️ Videonávod",
    "crumbs": [
      "Domov",
      "🚀 Základy Pythonu",
      "Prvé programy a výstup"
    ]
  },
  {
    "objectID": "content/komentovanie_kodu.html",
    "href": "content/komentovanie_kodu.html",
    "title": "Komentovanie kódu",
    "section": "",
    "text": "Komentáre slúžia na poznámky v kóde, ktoré neovplyvňujú beh programu. Používajú sa na vysvetlenie, čo kód robí, alebo na dočasné vypnutie časti kódu.",
    "crumbs": [
      "Domov",
      "🚀 Základy Pythonu",
      "Komentovanie kódu"
    ]
  },
  {
    "objectID": "content/komentovanie_kodu.html#úvod",
    "href": "content/komentovanie_kodu.html#úvod",
    "title": "Komentovanie kódu",
    "section": "",
    "text": "Komentáre slúžia na poznámky v kóde, ktoré neovplyvňujú beh programu. Používajú sa na vysvetlenie, čo kód robí, alebo na dočasné vypnutie časti kódu.",
    "crumbs": [
      "Domov",
      "🚀 Základy Pythonu",
      "Komentovanie kódu"
    ]
  },
  {
    "objectID": "content/komentovanie_kodu.html#jednoriadkový-komentár",
    "href": "content/komentovanie_kodu.html#jednoriadkový-komentár",
    "title": "Komentovanie kódu",
    "section": "📝 Jednoriadkový komentár",
    "text": "📝 Jednoriadkový komentár\nPoužite # na začiatku každého riadka:\n\n\nKód\n# Toto je komentár\nprint(\"Ahoj\")  # Tento riadok niečo vypíše\n\n\nAhoj",
    "crumbs": [
      "Domov",
      "🚀 Základy Pythonu",
      "Komentovanie kódu"
    ]
  },
  {
    "objectID": "content/komentovanie_kodu.html#viacero-komentárov",
    "href": "content/komentovanie_kodu.html#viacero-komentárov",
    "title": "Komentovanie kódu",
    "section": "🧾 Viacero komentárov",
    "text": "🧾 Viacero komentárov\n\n\nKód\n# Tento program spočíta súčet\na = 5\nb = 3\n# Spočítame a vypíšeme výsledok\nprint(a + b)\n\n\n8",
    "crumbs": [
      "Domov",
      "🚀 Základy Pythonu",
      "Komentovanie kódu"
    ]
  },
  {
    "objectID": "content/komentovanie_kodu.html#dočasné-zakázanie-kódu",
    "href": "content/komentovanie_kodu.html#dočasné-zakázanie-kódu",
    "title": "Komentovanie kódu",
    "section": "🛑 Dočasné zakázanie kódu",
    "text": "🛑 Dočasné zakázanie kódu\nKomentármi môžete zabrániť vykonaniu časti kódu, ktorú momentálne nechcete spustiť:\n\n\nKód\n# print(\"Tento riadok sa nespustí\")\nprint(\"Tento áno\")\n\n\nTento áno\n\n\n\n❕Toto je veľmi užitočné pri testovaní alebo ladení programu.",
    "crumbs": [
      "Domov",
      "🚀 Základy Pythonu",
      "Komentovanie kódu"
    ]
  },
  {
    "objectID": "content/komentovanie_kodu.html#viacriadkový-text",
    "href": "content/komentovanie_kodu.html#viacriadkový-text",
    "title": "Komentovanie kódu",
    "section": "❗ Viacriadkový text",
    "text": "❗ Viacriadkový text\nViacriadkový text možno napísať pomocou trojitých úvodzoviek (’’’ alebo “““), ale nie je to komentár – je to reťazec, ktorý však Python nedokáže spustiť.\n\n\nKód\n\"\"\"\nToto je viacriadkový text,\nktorý ale Python vníma ako reťazec.\n\"\"\"\n\n\n'\\nToto je viacriadkový text,\\nktorý ale Python vníma ako reťazec.\\n'",
    "crumbs": [
      "Domov",
      "🚀 Základy Pythonu",
      "Komentovanie kódu"
    ]
  },
  {
    "objectID": "content/komentovanie_kodu.html#zhrnutie",
    "href": "content/komentovanie_kodu.html#zhrnutie",
    "title": "Komentovanie kódu",
    "section": "🧠 Zhrnutie",
    "text": "🧠 Zhrnutie\n\nKomentáre píšeme pomocou #\nSlúžia na poznámky aj dočasné zakázanie kódu\nPomáhajú robiť kód prehľadnejší\nNie sú súčasťou vykonávaného programu",
    "crumbs": [
      "Domov",
      "🚀 Základy Pythonu",
      "Komentovanie kódu"
    ]
  },
  {
    "objectID": "content/komentovanie_kodu.html#videonávod",
    "href": "content/komentovanie_kodu.html#videonávod",
    "title": "Komentovanie kódu",
    "section": "🎞️ Videonávod",
    "text": "🎞️ Videonávod",
    "crumbs": [
      "Domov",
      "🚀 Základy Pythonu",
      "Komentovanie kódu"
    ]
  },
  {
    "objectID": "content/matplotlib_export_upravy.html",
    "href": "content/matplotlib_export_upravy.html",
    "title": "Export grafov a úpravy vzhľadu",
    "section": "",
    "text": "Ukážka ako ukladať grafy do PNG/PDF a ako pridať hlavné formálne úpravy vzhľadu grafov: - popisy osí - nadpis - legenda - mriežka - štýly\n\n\n\n\n\nKód\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\n\n\nKód\n\n# Dáta\nx = np.linspace(0, 10, 200)\ny = np.sin(x)\n\n# Graf\nplt.plot(x, y, label='sin(x)')\nplt.title('Sinusová funkcia')\nplt.xlabel('x')\nplt.ylabel('sin(x)')\nplt.legend()\n\n# Uloženie do PNG a PDF (s orezom okrajov)\nplt.savefig('sinus.png', dpi=300, bbox_inches='tight')\nplt.savefig('sinus.pdf', bbox_inches='tight')\nplt.show()\nprint('Súbory uložené: sinus.png, sinus.pdf')\n\n\n\n\n\n\n\n\n\nSúbory uložené: sinus.png, sinus.pdf\n\n\n\n\n\n\n\n\nKód\nx = np.linspace(0, 2*np.pi, 300)\n\nplt.plot(x, np.sin(x), label='sin(x)')\nplt.plot(x, np.cos(x), label='cos(x)')\nplt.xlabel('Uhol [rad]')\nplt.ylabel('Hodnota')\nplt.title('Sinus a kosinus')\nplt.legend(loc='upper right', frameon=True)\nplt.grid(True, linestyle='--', alpha=0.6)\nplt.show()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nKód\n# Použitie iného štýlu (nešpecifikujeme farby priamo)\nplt.style.use('ggplot')\nx = np.linspace(0, 4*np.pi, 400)\nplt.plot(x, np.sin(x), label='sin(x)')\nplt.plot(x, np.sin(2*x), label='sin(2x)')\nplt.title('Štýl GGPlot a mriežka')\nplt.xlabel('x')\nplt.ylabel('y')\nplt.grid(True)\nplt.legend()\nplt.show()\n\n# Reset štýlu (voliteľné pre ďalšie bunky)\nplt.style.use('default')\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nKód\nx = np.linspace(0, 1, 50)\ny = x**2\nplt.figure()\nplt.plot(x, y, label='x^2')\nplt.title('Príklad s DPI a tight bbox')\nplt.xlabel('x')\nplt.ylabel('x^2')\nplt.legend()\nplt.savefig('kvadraticka_krivka.png', dpi=300, bbox_inches='tight')\nplt.show()\nprint('Uložené: kvadraticka_krivka.png')\n\n\n\n\n\n\n\n\n\nUložené: kvadraticka_krivka.png\n\n\n\n\n\n\n\nExport: plt.savefig('subor.png', dpi=300, bbox_inches='tight') alebo plt.savefig('subor.pdf').\nPopisy osí: plt.xlabel(), plt.ylabel().\nNadpis: plt.title().\nLegenda: plt.legend() (použi label= v kresliacich funkciách).\nMriežka: plt.grid(True) a vizuálne štýly: plt.style.use('...').\n\n\n\n\n\nPodrobný popis funkcií, ich parametrov a príkladov použitia nájdete v oficiálnej dokumentácii knižnice Matplotlib na adrese: https://matplotlib.org/stable/plot_types/index.html.",
    "crumbs": [
      "Domov",
      "📚 Knižnice",
      "📊 Matplotlib",
      "Export grafov a úpravy vzhľadu"
    ]
  },
  {
    "objectID": "content/matplotlib_export_upravy.html#uloženie-grafu-plt.savefig",
    "href": "content/matplotlib_export_upravy.html#uloženie-grafu-plt.savefig",
    "title": "Export grafov a úpravy vzhľadu",
    "section": "",
    "text": "Kód\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\n\n\nKód\n\n# Dáta\nx = np.linspace(0, 10, 200)\ny = np.sin(x)\n\n# Graf\nplt.plot(x, y, label='sin(x)')\nplt.title('Sinusová funkcia')\nplt.xlabel('x')\nplt.ylabel('sin(x)')\nplt.legend()\n\n# Uloženie do PNG a PDF (s orezom okrajov)\nplt.savefig('sinus.png', dpi=300, bbox_inches='tight')\nplt.savefig('sinus.pdf', bbox_inches='tight')\nplt.show()\nprint('Súbory uložené: sinus.png, sinus.pdf')\n\n\n\n\n\n\n\n\n\nSúbory uložené: sinus.png, sinus.pdf",
    "crumbs": [
      "Domov",
      "📚 Knižnice",
      "📊 Matplotlib",
      "Export grafov a úpravy vzhľadu"
    ]
  },
  {
    "objectID": "content/matplotlib_export_upravy.html#popisy-osí-nadpis-legenda-a-mriežka",
    "href": "content/matplotlib_export_upravy.html#popisy-osí-nadpis-legenda-a-mriežka",
    "title": "Export grafov a úpravy vzhľadu",
    "section": "",
    "text": "Kód\nx = np.linspace(0, 2*np.pi, 300)\n\nplt.plot(x, np.sin(x), label='sin(x)')\nplt.plot(x, np.cos(x), label='cos(x)')\nplt.xlabel('Uhol [rad]')\nplt.ylabel('Hodnota')\nplt.title('Sinus a kosinus')\nplt.legend(loc='upper right', frameon=True)\nplt.grid(True, linestyle='--', alpha=0.6)\nplt.show()",
    "crumbs": [
      "Domov",
      "📚 Knižnice",
      "📊 Matplotlib",
      "Export grafov a úpravy vzhľadu"
    ]
  },
  {
    "objectID": "content/matplotlib_export_upravy.html#štýly-grafov",
    "href": "content/matplotlib_export_upravy.html#štýly-grafov",
    "title": "Export grafov a úpravy vzhľadu",
    "section": "",
    "text": "Kód\n# Použitie iného štýlu (nešpecifikujeme farby priamo)\nplt.style.use('ggplot')\nx = np.linspace(0, 4*np.pi, 400)\nplt.plot(x, np.sin(x), label='sin(x)')\nplt.plot(x, np.sin(2*x), label='sin(2x)')\nplt.title('Štýl GGPlot a mriežka')\nplt.xlabel('x')\nplt.ylabel('y')\nplt.grid(True)\nplt.legend()\nplt.show()\n\n# Reset štýlu (voliteľné pre ďalšie bunky)\nplt.style.use('default')",
    "crumbs": [
      "Domov",
      "📚 Knižnice",
      "📊 Matplotlib",
      "Export grafov a úpravy vzhľadu"
    ]
  },
  {
    "objectID": "content/matplotlib_export_upravy.html#export-vo-vyššom-dpi-a-s-orezaním-okrajov",
    "href": "content/matplotlib_export_upravy.html#export-vo-vyššom-dpi-a-s-orezaním-okrajov",
    "title": "Export grafov a úpravy vzhľadu",
    "section": "",
    "text": "Kód\nx = np.linspace(0, 1, 50)\ny = x**2\nplt.figure()\nplt.plot(x, y, label='x^2')\nplt.title('Príklad s DPI a tight bbox')\nplt.xlabel('x')\nplt.ylabel('x^2')\nplt.legend()\nplt.savefig('kvadraticka_krivka.png', dpi=300, bbox_inches='tight')\nplt.show()\nprint('Uložené: kvadraticka_krivka.png')\n\n\n\n\n\n\n\n\n\nUložené: kvadraticka_krivka.png",
    "crumbs": [
      "Domov",
      "📚 Knižnice",
      "📊 Matplotlib",
      "Export grafov a úpravy vzhľadu"
    ]
  },
  {
    "objectID": "content/matplotlib_export_upravy.html#zhrnutie",
    "href": "content/matplotlib_export_upravy.html#zhrnutie",
    "title": "Export grafov a úpravy vzhľadu",
    "section": "",
    "text": "Export: plt.savefig('subor.png', dpi=300, bbox_inches='tight') alebo plt.savefig('subor.pdf').\nPopisy osí: plt.xlabel(), plt.ylabel().\nNadpis: plt.title().\nLegenda: plt.legend() (použi label= v kresliacich funkciách).\nMriežka: plt.grid(True) a vizuálne štýly: plt.style.use('...').",
    "crumbs": [
      "Domov",
      "📚 Knižnice",
      "📊 Matplotlib",
      "Export grafov a úpravy vzhľadu"
    ]
  },
  {
    "objectID": "content/matplotlib_export_upravy.html#oficiálna-dokumentácia-matplotlib",
    "href": "content/matplotlib_export_upravy.html#oficiálna-dokumentácia-matplotlib",
    "title": "Export grafov a úpravy vzhľadu",
    "section": "",
    "text": "Podrobný popis funkcií, ich parametrov a príkladov použitia nájdete v oficiálnej dokumentácii knižnice Matplotlib na adrese: https://matplotlib.org/stable/plot_types/index.html.",
    "crumbs": [
      "Domov",
      "📚 Knižnice",
      "📊 Matplotlib",
      "Export grafov a úpravy vzhľadu"
    ]
  },
  {
    "objectID": "content/mnoziny.html",
    "href": "content/mnoziny.html",
    "title": "Množiny",
    "section": "",
    "text": "Množina (set) je neusporiadaná kolekcia unikátnych hodnôt. Nemôže obsahovať duplicitné prvky a je vhodná na rýchle testovanie členstva alebo porovnávanie množín.",
    "crumbs": [
      "Domov",
      "💾 Dátové štruktúry",
      "Množiny"
    ]
  },
  {
    "objectID": "content/mnoziny.html#úvod",
    "href": "content/mnoziny.html#úvod",
    "title": "Množiny",
    "section": "",
    "text": "Množina (set) je neusporiadaná kolekcia unikátnych hodnôt. Nemôže obsahovať duplicitné prvky a je vhodná na rýchle testovanie členstva alebo porovnávanie množín.",
    "crumbs": [
      "Domov",
      "💾 Dátové štruktúry",
      "Množiny"
    ]
  },
  {
    "objectID": "content/mnoziny.html#vytvorenie-množiny",
    "href": "content/mnoziny.html#vytvorenie-množiny",
    "title": "Množiny",
    "section": "🧪 Vytvorenie množiny",
    "text": "🧪 Vytvorenie množiny\n\n\nKód\nm = {1, 2, 3}\nslova = {\"jablko\", \"banán\", \"kiwi\"}\nprazdna = set()  # prázdna množina\n\n\n\n❗ Použitie prázdnych zátvoriek {} definujé dátovú štruktúru prázdneho slovníka, nie prázdnu množinu",
    "crumbs": [
      "Domov",
      "💾 Dátové štruktúry",
      "Množiny"
    ]
  },
  {
    "objectID": "content/mnoziny.html#automatické-odstránenie-duplikátov",
    "href": "content/mnoziny.html#automatické-odstránenie-duplikátov",
    "title": "Množiny",
    "section": "🧼 Automatické odstránenie duplikátov",
    "text": "🧼 Automatické odstránenie duplikátov\n\n\nKód\ndupl = {1, 2, 2, 3, 3, 3}\nprint(dupl)  # {1, 2, 3}\n\n\n{1, 2, 3}",
    "crumbs": [
      "Domov",
      "💾 Dátové štruktúry",
      "Množiny"
    ]
  },
  {
    "objectID": "content/mnoziny.html#pridanie-prvkov",
    "href": "content/mnoziny.html#pridanie-prvkov",
    "title": "Množiny",
    "section": "➕ Pridanie prvkov",
    "text": "➕ Pridanie prvkov\n\nPridanie jedného prvku\n\n\nKód\nm.add(4)\nprint(m)\n\n\n{1, 2, 3, 4}\n\n\n\n\nPridanie viacerých prvkov\n\n\nKód\nm.update([5, 6])\nprint(m)\n\n\n{1, 2, 3, 4, 5, 6}",
    "crumbs": [
      "Domov",
      "💾 Dátové štruktúry",
      "Množiny"
    ]
  },
  {
    "objectID": "content/mnoziny.html#odstránenie-prvkov",
    "href": "content/mnoziny.html#odstránenie-prvkov",
    "title": "Množiny",
    "section": "❌ Odstránenie prvkov",
    "text": "❌ Odstránenie prvkov\n\n\nKód\nm.remove(2)      # odstráni 2 (chyba ak tam nie je)\nm.discard(10)   # bezpečné odstránenie\nprint(m)\n\n\n{1, 3, 4, 5, 6}",
    "crumbs": [
      "Domov",
      "💾 Dátové štruktúry",
      "Množiny"
    ]
  },
  {
    "objectID": "content/mnoziny.html#iterácia-cez-množinu",
    "href": "content/mnoziny.html#iterácia-cez-množinu",
    "title": "Množiny",
    "section": "🔄 Iterácia cez množinu",
    "text": "🔄 Iterácia cez množinu\n\n\nKód\nfor prvok in slova:\n    print(prvok)\n\n\nkiwi\njablko\nbanán",
    "crumbs": [
      "Domov",
      "💾 Dátové štruktúry",
      "Množiny"
    ]
  },
  {
    "objectID": "content/mnoziny.html#operácie-s-množinami",
    "href": "content/mnoziny.html#operácie-s-množinami",
    "title": "Množiny",
    "section": "📊 Operácie s množinami",
    "text": "📊 Operácie s množinami\n\n\nKód\na = {1, 2, 3}\nb = {3, 4, 5}\nprint(a)\nprint(b)\n\n\n{1, 2, 3}\n{3, 4, 5}\n\n\n\nZjednotenie\n\n\nKód\nprint(a | b)   # zjednotenie\n\n\n{1, 2, 3, 4, 5}\n\n\n\n\nPrienik\n\n\nKód\nprint(a & b)   # prienik\n\n\n{3}\n\n\n\n\nRozdiel\n\n\nKód\nprint(a - b)   # rozdiel\n\n\n{1, 2}\n\n\n\n\nSymetrický rozdiel\n\n\nKód\nprint(a ^ b)   # symetrický rozdiel\n\n\n{1, 2, 4, 5}",
    "crumbs": [
      "Domov",
      "💾 Dátové štruktúry",
      "Množiny"
    ]
  },
  {
    "objectID": "content/mnoziny.html#testovanie-členstva",
    "href": "content/mnoziny.html#testovanie-členstva",
    "title": "Množiny",
    "section": "🔍 Testovanie členstva",
    "text": "🔍 Testovanie členstva\n\n\nKód\nif 3 in a:\n    print(\"3 sa nachádza v množine\")\n\n\n3 sa nachádza v množine",
    "crumbs": [
      "Domov",
      "💾 Dátové štruktúry",
      "Množiny"
    ]
  },
  {
    "objectID": "content/mnoziny.html#zhrnutie",
    "href": "content/mnoziny.html#zhrnutie",
    "title": "Množiny",
    "section": "🧠 Zhrnutie",
    "text": "🧠 Zhrnutie\n\nset je neusporiadaná kolekcia unikátnych prvkov\nOdstráni automaticky duplikáty\nPoužíva sa na testovanie členstva, zjednotenie, prienik…\nNie je indexovateľná (nemá poradie)",
    "crumbs": [
      "Domov",
      "💾 Dátové štruktúry",
      "Množiny"
    ]
  },
  {
    "objectID": "content/mnoziny.html#videonávod",
    "href": "content/mnoziny.html#videonávod",
    "title": "Množiny",
    "section": "🎞️ Videonávod",
    "text": "🎞️ Videonávod",
    "crumbs": [
      "Domov",
      "💾 Dátové štruktúry",
      "Množiny"
    ]
  },
  {
    "objectID": "content/numpy_import_export.html",
    "href": "content/numpy_import_export.html",
    "title": "Import a export dát",
    "section": "",
    "text": "Táto kapitola ukazuje najpoužívanejšie spôsoby, ako v NumPy načítať a ukladať dáta do textových a CSV súborov. Nájdete tu prehľad funkcií, praktické príklady a tipy pre bežné použitie\n\n\n\n\n\n\n\n\n\n\n\nÚloha\nFunkcia\nKedy použiť\n\n\n\n\nNačítať „čisté“ numerické dáta\nnp.loadtxt\nRýchle a jednoduché CSV/TXT bez chýbajúcich hodnôt\n\n\nNačítať „špinavé“ dáta s chýbajúcimi hodnotami\nnp.genfromtxt\nLepšia tolerancia voči NaN, prázdnym poliam, vlastným konverziám\n\n\nUložiť do TXT/CSV\nnp.savetxt\nJednoduchý export s formátovaním\n\n\n(Mimo text/CSV) Binárne .npy/.npz\nnp.save, np.savez\nNajrýchlejšie a bezstratové ukladanie pre NumPy matice\n\n\n\n\n❗ Na zložitejšie textové a CSV súbory s hlavičkami, typmi stĺpcov či zmiešanými typmi je vhodné použiť knižnicu pandas (read_csv, to_csv), ktorej sa budú venovať ďalšie kapitoly.\n\n\n\n\n\n\n\nKód\nimport numpy as np\n\n\n\n\n\n\nKód\nmatica = np.arange(12, dtype=float).reshape(4, 3)\n\nnp.savetxt(\"data.csv\",matica, delimiter=\",\")\n\nprint(\"Uložené do data.csv:\")\nprint(matica)\n\n\nUložené do data.csv:\n[[ 0.  1.  2.]\n [ 3.  4.  5.]\n [ 6.  7.  8.]\n [ 9. 10. 11.]]\n\n\n\n\n\n\n\nKód\ntabulka = np.column_stack([np.arange(1, 6), np.linspace(0, 1, 5), np.linspace(10, 20, 5)])\n\nnp.savetxt(\"data_s_hlavickou.csv\", tabulka, delimiter=\",\", header=\"poradove_cislo,a,b\", comments=\" \")\n\nprint(\"Uložené do data_s_hlavickou.csv s hlavičkou.\")\nprint(tabulka)\n\n\nUložené do data_s_hlavickou.csv s hlavičkou.\n[[ 1.    0.   10.  ]\n [ 2.    0.25 12.5 ]\n [ 3.    0.5  15.  ]\n [ 4.    0.75 17.5 ]\n [ 5.    1.   20.  ]]\n\n\n\n\n\n\n\n\n\n\n\nKód\nmatica_nacitana = np.loadtxt(\"data.csv\", delimiter=\",\")\n\nprint(\"Načítaná matica z data.csv\")\nprint(matica_nacitana)\n\n\nNačítaná matica z data.csv\n[[ 0.  1.  2.]\n [ 3.  4.  5.]\n [ 6.  7.  8.]\n [ 9. 10. 11.]]\n\n\n\n\nKód\ntabulka_nacitana = np.loadtxt(\"data_s_hlavickou.csv\", delimiter=\",\", skiprows=1)\nprint(\"Načítané (skiprows=1):\")\nprint(tabulka_nacitana)\n\n\nNačítané (skiprows=1):\n[[ 1.    0.   10.  ]\n [ 2.    0.25 12.5 ]\n [ 3.    0.5  15.  ]\n [ 4.    0.75 17.5 ]\n [ 5.    1.   20.  ]]\n\n\n\n💡 Je dôležíté preskočiť prvý riadok v ktorom sa nachádza uložená hlavička. V opačnom prípade dôjde k rozdielu dátových typov a súbor sa nepodarí načítať.\n\n\n\n\n\n\nKód\nvybrane_stlpce = np.loadtxt(\"data_s_hlavickou.csv\", delimiter=\",\", skiprows=1, usecols=(0, 1), dtype=float)\nprint(\"Vybrané stĺpce (poradove_cislo, a):\")\nprint(vybrane_stlpce)\n\n\nVybrané stĺpce (poradove_cislo, a):\n[[1.   0.  ]\n [2.   0.25]\n [3.   0.5 ]\n [4.   0.75]\n [5.   1.  ]]\n\n\n\n\n\n\n\n\nHlavičky:\n\nnp.loadtxt nečíta názvy stĺpcov, použite parameter skiprows=....\nnp.genfromtxt s names=True vie mená načítať a vytvoriť „structured array“.\n\nChýbajúce hodnoty:\n\nPoužite np.genfromtxt s missing_values a filling_values.\nnp.loadtxt pri prázdnom poli zlyhá.\n\nFormát čísel a oddeľovač:\n\nCSV v rôznych lokalizáciách môže používať ; a desatinnú čiarku.\nRieš cez delimiter=\";\" a converters={...} (viď príklady).\n\nRýchlosť a veľké dáta:\n\nTXT/CSV je pomalší a stratový pre presnosť formátu.\nPre rýchlosť a bezstratovosť používajte binárne formáty: np.save/np.load (.npy), np.savez (.npz).\n\nZmiešané typy (text + čísla):\n\nUvažujte np.genfromtxt(..., dtype=None, encoding=\"utf-8\") alebo vytvorte structured array s dtype=[(...)].\nPri zložitejších CSV je často pohodlnejší pandas (pd.read_csv, df.to_csv).\n\n\n\n\n\n\n\n\n\n\nKód\nnp.save(\"pole.npy\", np.arange(6).reshape(2, 3))\n\npole_nacitane = np.load(\"pole.npy\")\n\nprint(\"Načítané z .npy:\", pole_nacitane)\n\n\nNačítané z .npy: [[0 1 2]\n [3 4 5]]\n\n\n\n\n\n\n\nKód\nnp.savez(\"polia.npz\", X=np.arange(5), Y=np.linspace(0, 1, 5))\n\nnacitane_polia = np.load(\"polia.npz\")\n\nprint(\"Kľúče v .npz:\", list(nacitane_polia.keys()))\nprint(\"X:\", nacitane_polia[\"X\"], \"Y:\", nacitane_polia[\"Y\"])\n\n\nKľúče v .npz: ['X', 'Y']\nX: [0 1 2 3 4] Y: [0.   0.25 0.5  0.75 1.  ]\n\n\n\n\n\n\n\n\nČisté numerické CSV → np.loadtxt\n\nNeúplné/špinavé CSV → np.genfromtxt\n\nExport do textu/CSV → np.savetxt\n\nVýkon a presnosť → np.save / np.savez\n\n\n\n\n\nPodrobný popis funkcií, ich parametrov a príkladov použitia nájdete v oficiálnej dokumentácii knižnice NumPy na adrese: https://numpy.org/doc/stable/.",
    "crumbs": [
      "Domov",
      "📚 Knižnice",
      "📐 NumPy",
      "Import a export dát"
    ]
  },
  {
    "objectID": "content/numpy_import_export.html#rýchly-prehľad-funkcií",
    "href": "content/numpy_import_export.html#rýchly-prehľad-funkcií",
    "title": "Import a export dát",
    "section": "",
    "text": "Úloha\nFunkcia\nKedy použiť\n\n\n\n\nNačítať „čisté“ numerické dáta\nnp.loadtxt\nRýchle a jednoduché CSV/TXT bez chýbajúcich hodnôt\n\n\nNačítať „špinavé“ dáta s chýbajúcimi hodnotami\nnp.genfromtxt\nLepšia tolerancia voči NaN, prázdnym poliam, vlastným konverziám\n\n\nUložiť do TXT/CSV\nnp.savetxt\nJednoduchý export s formátovaním\n\n\n(Mimo text/CSV) Binárne .npy/.npz\nnp.save, np.savez\nNajrýchlejšie a bezstratové ukladanie pre NumPy matice\n\n\n\n\n❗ Na zložitejšie textové a CSV súbory s hlavičkami, typmi stĺpcov či zmiešanými typmi je vhodné použiť knižnicu pandas (read_csv, to_csv), ktorej sa budú venovať ďalšie kapitoly.",
    "crumbs": [
      "Domov",
      "📚 Knižnice",
      "📐 NumPy",
      "Import a export dát"
    ]
  },
  {
    "objectID": "content/numpy_import_export.html#export-np.savetxt",
    "href": "content/numpy_import_export.html#export-np.savetxt",
    "title": "Import a export dát",
    "section": "",
    "text": "Kód\nimport numpy as np\n\n\n\n\n\n\nKód\nmatica = np.arange(12, dtype=float).reshape(4, 3)\n\nnp.savetxt(\"data.csv\",matica, delimiter=\",\")\n\nprint(\"Uložené do data.csv:\")\nprint(matica)\n\n\nUložené do data.csv:\n[[ 0.  1.  2.]\n [ 3.  4.  5.]\n [ 6.  7.  8.]\n [ 9. 10. 11.]]\n\n\n\n\n\n\n\nKód\ntabulka = np.column_stack([np.arange(1, 6), np.linspace(0, 1, 5), np.linspace(10, 20, 5)])\n\nnp.savetxt(\"data_s_hlavickou.csv\", tabulka, delimiter=\",\", header=\"poradove_cislo,a,b\", comments=\" \")\n\nprint(\"Uložené do data_s_hlavickou.csv s hlavičkou.\")\nprint(tabulka)\n\n\nUložené do data_s_hlavickou.csv s hlavičkou.\n[[ 1.    0.   10.  ]\n [ 2.    0.25 12.5 ]\n [ 3.    0.5  15.  ]\n [ 4.    0.75 17.5 ]\n [ 5.    1.   20.  ]]",
    "crumbs": [
      "Domov",
      "📚 Knižnice",
      "📐 NumPy",
      "Import a export dát"
    ]
  },
  {
    "objectID": "content/numpy_import_export.html#import-np.loadtxt",
    "href": "content/numpy_import_export.html#import-np.loadtxt",
    "title": "Import a export dát",
    "section": "",
    "text": "Kód\nmatica_nacitana = np.loadtxt(\"data.csv\", delimiter=\",\")\n\nprint(\"Načítaná matica z data.csv\")\nprint(matica_nacitana)\n\n\nNačítaná matica z data.csv\n[[ 0.  1.  2.]\n [ 3.  4.  5.]\n [ 6.  7.  8.]\n [ 9. 10. 11.]]\n\n\n\n\nKód\ntabulka_nacitana = np.loadtxt(\"data_s_hlavickou.csv\", delimiter=\",\", skiprows=1)\nprint(\"Načítané (skiprows=1):\")\nprint(tabulka_nacitana)\n\n\nNačítané (skiprows=1):\n[[ 1.    0.   10.  ]\n [ 2.    0.25 12.5 ]\n [ 3.    0.5  15.  ]\n [ 4.    0.75 17.5 ]\n [ 5.    1.   20.  ]]\n\n\n\n💡 Je dôležíté preskočiť prvý riadok v ktorom sa nachádza uložená hlavička. V opačnom prípade dôjde k rozdielu dátových typov a súbor sa nepodarí načítať.\n\n\n\n\n\n\nKód\nvybrane_stlpce = np.loadtxt(\"data_s_hlavickou.csv\", delimiter=\",\", skiprows=1, usecols=(0, 1), dtype=float)\nprint(\"Vybrané stĺpce (poradove_cislo, a):\")\nprint(vybrane_stlpce)\n\n\nVybrané stĺpce (poradove_cislo, a):\n[[1.   0.  ]\n [2.   0.25]\n [3.   0.5 ]\n [4.   0.75]\n [5.   1.  ]]",
    "crumbs": [
      "Domov",
      "📚 Knižnice",
      "📐 NumPy",
      "Import a export dát"
    ]
  },
  {
    "objectID": "content/numpy_import_export.html#bežné-úskalia-a-tipy",
    "href": "content/numpy_import_export.html#bežné-úskalia-a-tipy",
    "title": "Import a export dát",
    "section": "",
    "text": "Hlavičky:\n\nnp.loadtxt nečíta názvy stĺpcov, použite parameter skiprows=....\nnp.genfromtxt s names=True vie mená načítať a vytvoriť „structured array“.\n\nChýbajúce hodnoty:\n\nPoužite np.genfromtxt s missing_values a filling_values.\nnp.loadtxt pri prázdnom poli zlyhá.\n\nFormát čísel a oddeľovač:\n\nCSV v rôznych lokalizáciách môže používať ; a desatinnú čiarku.\nRieš cez delimiter=\";\" a converters={...} (viď príklady).\n\nRýchlosť a veľké dáta:\n\nTXT/CSV je pomalší a stratový pre presnosť formátu.\nPre rýchlosť a bezstratovosť používajte binárne formáty: np.save/np.load (.npy), np.savez (.npz).\n\nZmiešané typy (text + čísla):\n\nUvažujte np.genfromtxt(..., dtype=None, encoding=\"utf-8\") alebo vytvorte structured array s dtype=[(...)].\nPri zložitejších CSV je často pohodlnejší pandas (pd.read_csv, df.to_csv).",
    "crumbs": [
      "Domov",
      "📚 Knižnice",
      "📐 NumPy",
      "Import a export dát"
    ]
  },
  {
    "objectID": "content/numpy_import_export.html#rýchle-binárne-uloženie-odporúčané-pre-numpy-polia",
    "href": "content/numpy_import_export.html#rýchle-binárne-uloženie-odporúčané-pre-numpy-polia",
    "title": "Import a export dát",
    "section": "",
    "text": "Kód\nnp.save(\"pole.npy\", np.arange(6).reshape(2, 3))\n\npole_nacitane = np.load(\"pole.npy\")\n\nprint(\"Načítané z .npy:\", pole_nacitane)\n\n\nNačítané z .npy: [[0 1 2]\n [3 4 5]]\n\n\n\n\n\n\n\nKód\nnp.savez(\"polia.npz\", X=np.arange(5), Y=np.linspace(0, 1, 5))\n\nnacitane_polia = np.load(\"polia.npz\")\n\nprint(\"Kľúče v .npz:\", list(nacitane_polia.keys()))\nprint(\"X:\", nacitane_polia[\"X\"], \"Y:\", nacitane_polia[\"Y\"])\n\n\nKľúče v .npz: ['X', 'Y']\nX: [0 1 2 3 4] Y: [0.   0.25 0.5  0.75 1.  ]",
    "crumbs": [
      "Domov",
      "📚 Knižnice",
      "📐 NumPy",
      "Import a export dát"
    ]
  },
  {
    "objectID": "content/numpy_import_export.html#zhrnutie",
    "href": "content/numpy_import_export.html#zhrnutie",
    "title": "Import a export dát",
    "section": "",
    "text": "Čisté numerické CSV → np.loadtxt\n\nNeúplné/špinavé CSV → np.genfromtxt\n\nExport do textu/CSV → np.savetxt\n\nVýkon a presnosť → np.save / np.savez",
    "crumbs": [
      "Domov",
      "📚 Knižnice",
      "📐 NumPy",
      "Import a export dát"
    ]
  },
  {
    "objectID": "content/numpy_import_export.html#oficiálna-dokumentácia-numpy",
    "href": "content/numpy_import_export.html#oficiálna-dokumentácia-numpy",
    "title": "Import a export dát",
    "section": "",
    "text": "Podrobný popis funkcií, ich parametrov a príkladov použitia nájdete v oficiálnej dokumentácii knižnice NumPy na adrese: https://numpy.org/doc/stable/.",
    "crumbs": [
      "Domov",
      "📚 Knižnice",
      "📐 NumPy",
      "Import a export dát"
    ]
  },
  {
    "objectID": "content/numpy_matematicke_funkcie.html",
    "href": "content/numpy_matematicke_funkcie.html",
    "title": "Matematické funkcie",
    "section": "",
    "text": "NumPy ponúka vektorové (pole‑po‑poli) implementácie bežných matematických funkcií. Všetky pracujú rýchlo nad ndarray, podporujú broadcasting, maskovanie a často aj komplexné čísla. Nižšie nájdete súhrn bežne pouzívaných matematických funkcií potrebných pre riešenie (nielen) geodetických úloh.",
    "crumbs": [
      "Domov",
      "📚 Knižnice",
      "📐 NumPy",
      "Matematické funkcie"
    ]
  },
  {
    "objectID": "content/numpy_matematicke_funkcie.html#úvod",
    "href": "content/numpy_matematicke_funkcie.html#úvod",
    "title": "Matematické funkcie",
    "section": "",
    "text": "NumPy ponúka vektorové (pole‑po‑poli) implementácie bežných matematických funkcií. Všetky pracujú rýchlo nad ndarray, podporujú broadcasting, maskovanie a často aj komplexné čísla. Nižšie nájdete súhrn bežne pouzívaných matematických funkcií potrebných pre riešenie (nielen) geodetických úloh.",
    "crumbs": [
      "Domov",
      "📚 Knižnice",
      "📐 NumPy",
      "Matematické funkcie"
    ]
  },
  {
    "objectID": "content/numpy_matematicke_funkcie.html#goniometrické-funkcie-trigonometria",
    "href": "content/numpy_matematicke_funkcie.html#goniometrické-funkcie-trigonometria",
    "title": "Matematické funkcie",
    "section": "📐 Goniometrické funkcie (trigonometria)",
    "text": "📐 Goniometrické funkcie (trigonometria)\n\n\n\n\n\n\n\n\nKategória\nFunkcia\nPopis\n\n\n\n\nZákladné\nnp.sin(x)\nSínus\n\n\n\nnp.cos(x)\nKosínus\n\n\n\nnp.tan(x)\nTangens\n\n\nInverzné\nnp.arcsin(x)\nInverzný sínus (arcsin)\n\n\n\nnp.arccos(x)\nInverzný kosínus (arccos)\n\n\n\nnp.arctan(x)\nInverzný tangens (arctan)\n\n\n\nnp.arctan2(y, x)\nInverzný tangens s ohľadom na kvadrant (robustnejší výpočet uhla)\n\n\nHyperbolické\nnp.sinh(x)\nHyperbolický sínus\n\n\n\nnp.cosh(x)\nHyperbolický kosínus\n\n\n\nnp.tanh(x)\nHyperbolický tangens\n\n\n\nnp.arcsinh(x)\nInverzný hyperbolický sínus\n\n\n\nnp.arccosh(x)\nInverzný hyperbolický kosínus\n\n\n\nnp.arctanh(x)\nInverzný hyperbolický tangens\n\n\n\n\n⚠️ Vstup je v radiánoch. Na prevod použite np.deg2rad() a späť np.rad2deg().\n\n\n⚠️ V geodézii pracujeme s grádmi. Na prevod grádov do radiánov je potrebné použiť prevodovú konštantu \\(\\frac{\\pi}{200}\\)\n\n\n\nKód\nimport numpy as np\n\nuhly_stupne = np.array([0, 30, 45, 60, 90])\nuhly_radiany = np.deg2rad(uhly_stupne)\n\nsin = np.sin(uhly_radiany)\ncos = np.cos(uhly_radiany)\ntan = np.tan(uhly_radiany)\n\nprint(sin,cos,tan)\n\n\n[0.         0.5        0.70710678 0.8660254  1.        ] [1.00000000e+00 8.66025404e-01 7.07106781e-01 5.00000000e-01\n 6.12323400e-17] [0.00000000e+00 5.77350269e-01 1.00000000e+00 1.73205081e+00\n 1.63312394e+16]",
    "crumbs": [
      "Domov",
      "📚 Knižnice",
      "📐 NumPy",
      "Matematické funkcie"
    ]
  },
  {
    "objectID": "content/numpy_matematicke_funkcie.html#logaritmické-a-exponenciálne-funkcie",
    "href": "content/numpy_matematicke_funkcie.html#logaritmické-a-exponenciálne-funkcie",
    "title": "Matematické funkcie",
    "section": "📈 Logaritmické a exponenciálne funkcie",
    "text": "📈 Logaritmické a exponenciálne funkcie\n\n\n\n\n\n\n\n\nKategória\nFunkcia\nPopis\n\n\n\n\nExponenciála\nnp.exp(x)\nExponenciálna funkcia \\(e^x\\)\n\n\n\nnp.expm1(x)\nPresnejšie pre malé \\(x\\), vracia \\(e^x - 1\\) bez straty presnosti\n\n\nPrirodzený logaritmus\nnp.log(x)\nPrirodzený logaritmus \\(\\ln(x)\\)\n\n\n\nnp.log1p(x)\nStabilnejší výpočet \\(\\ln(1+x)\\) pre malé \\(x\\)\n\n\nĎalšie logaritmy\nnp.log2(x)\nLogaritmus pri základe 2\n\n\n\nnp.log10(x)\nLogaritmus pri základe 10\n\n\nMocniny a korene\nnp.power(x, p)\nUmocnenie \\(x^p\\)\n\n\n\nnp.sqrt(x)\nDruhá odmocnina \\(\\sqrt{x}\\)\n\n\n\nnp.cbrt(x)\nTretia odmocnina \\(\\sqrt[3]{x}\\)",
    "crumbs": [
      "Domov",
      "📚 Knižnice",
      "📐 NumPy",
      "Matematické funkcie"
    ]
  },
  {
    "objectID": "content/numpy_matematicke_funkcie.html#základné-matematické-konštanty",
    "href": "content/numpy_matematicke_funkcie.html#základné-matematické-konštanty",
    "title": "Matematické funkcie",
    "section": "🔢 Základné matematické konštanty",
    "text": "🔢 Základné matematické konštanty\n\n\n\n\n\n\n\n\nKategória\nKonštanta\nPopis\n\n\n\n\nGeometrická\nnp.pi\nLudolfovo číslo π ≈ 3.14159\n\n\nExponenciálna\nnp.e\nEulerovo číslo e ≈ 2.71828\n\n\nŠpeciálne\nnp.euler_gamma\nEuler-Mascheroniho konštanta γ ≈ 0.57721\n\n\nLimitné hodnoty\nnp.inf\nKladná nekonečná hodnota\n\n\n\n-np.inf\nZáporná nekonečná hodnota\n\n\n\nnp.nan\n„Not a Number“ – nedefinovaná hodnota\n\n\n\n\n\nKód\nobvod = 2 * np.pi * 1.5\n\nprint(obvod)\n\n\n9.42477796076938",
    "crumbs": [
      "Domov",
      "📚 Knižnice",
      "📐 NumPy",
      "Matematické funkcie"
    ]
  },
  {
    "objectID": "content/numpy_matematicke_funkcie.html#ďalšie-často-používané-základné-funkcie",
    "href": "content/numpy_matematicke_funkcie.html#ďalšie-často-používané-základné-funkcie",
    "title": "Matematické funkcie",
    "section": "➕ Ďalšie často používané „základné“ funkcie",
    "text": "➕ Ďalšie často používané „základné“ funkcie\n\n\n\n\n\n\n\n\nKategória\nFunkcia\nPopis\n\n\n\n\nAbsolútna hodnota\nnp.abs(x)\nAbsolútna hodnota\n\n\nZaokrúhľovanie\nnp.round(x, decimals)\nZaokrúhlenie na zadaný počet desatinných miest\n\n\n\nnp.floor(x)\nZaokrúhlenie nadol (najväčšie celé ≤ x)\n\n\n\nnp.ceil(x)\nZaokrúhlenie nahor (najmenšie celé ≥ x)\n\n\n\nnp.trunc(x)\nOrezanie desatinnej časti (smerom k nule)\n\n\nZvyšok a celé delenie\nnp.mod(x, y)\nZvyšok po delení (kladný preklad do mod y)\n\n\n\nnp.remainder(x, y)\nZvyšok po delení (s rovnakým znamienkom ako delenec)\n\n\n\nnp.divmod(x, y)\nSúčasne vráti podiel aj zvyšok\n\n\nZnamenie\nnp.sign(x)\nUrčí znamienko: \\(-1, 0, 1\\)\n\n\nClamps a výmeny\nnp.clip(x, min, max)\nOrezanie hodnôt do intervalu \\([min, max]\\)\n\n\n\nnp.nan_to_num(x)\nNahradí nan → 0, +inf → veľké číslo, -inf → malé číslo\n\n\n\n\n\nKód\nx = np.array([-2.7, -0.1, 0.0, 0.1, 2.7])\nrounded = np.round(x, 1)\nfloored = np.floor(x)\nceiled = np.ceil(x)\nsigned = np.sign(x)\nclipped = np.clip(x, -1, 1)\n\nrounded, floored, ceiled, signed, clipped\n\n\n(array([-2.7, -0.1,  0. ,  0.1,  2.7]),\n array([-3., -1.,  0.,  0.,  2.]),\n array([-2., -0.,  0.,  1.,  3.]),\n array([-1., -1.,  0.,  1.,  1.]),\n array([-1. , -0.1,  0. ,  0.1,  1. ]))",
    "crumbs": [
      "Domov",
      "📚 Knižnice",
      "📐 NumPy",
      "Matematické funkcie"
    ]
  },
  {
    "objectID": "content/numpy_matematicke_funkcie.html#oficiálna-dokumentácia-numpy",
    "href": "content/numpy_matematicke_funkcie.html#oficiálna-dokumentácia-numpy",
    "title": "Matematické funkcie",
    "section": "📚 Oficiálna dokumentácia NumPy",
    "text": "📚 Oficiálna dokumentácia NumPy\nPodrobný popis funkcií, ich parametrov a príkladov použitia nájdete v oficiálnej dokumentácii knižnice NumPy na adrese: https://numpy.org/doc/stable/.",
    "crumbs": [
      "Domov",
      "📚 Knižnice",
      "📐 NumPy",
      "Matematické funkcie"
    ]
  },
  {
    "objectID": "content/numpy_matematicke_funkcie.html#videonávod",
    "href": "content/numpy_matematicke_funkcie.html#videonávod",
    "title": "Matematické funkcie",
    "section": "🎞️ Videonávod",
    "text": "🎞️ Videonávod",
    "crumbs": [
      "Domov",
      "📚 Knižnice",
      "📐 NumPy",
      "Matematické funkcie"
    ]
  },
  {
    "objectID": "content/numpy_ndarray.html",
    "href": "content/numpy_ndarray.html",
    "title": "Polia",
    "section": "",
    "text": "Knižnica NumPy poskytuje dátovú štruktúru ndarray (N-rozmerné pole), ktorá je základom pre efektívne numerické výpočty v Pythone.\nndarray môže reprezentovať skalár, vektor, maticu alebo viacrozmerné dáta.",
    "crumbs": [
      "Domov",
      "📚 Knižnice",
      "📐 NumPy",
      "Polia"
    ]
  },
  {
    "objectID": "content/numpy_ndarray.html#úvod",
    "href": "content/numpy_ndarray.html#úvod",
    "title": "Polia",
    "section": "",
    "text": "Knižnica NumPy poskytuje dátovú štruktúru ndarray (N-rozmerné pole), ktorá je základom pre efektívne numerické výpočty v Pythone.\nndarray môže reprezentovať skalár, vektor, maticu alebo viacrozmerné dáta.",
    "crumbs": [
      "Domov",
      "📚 Knižnice",
      "📐 NumPy",
      "Polia"
    ]
  },
  {
    "objectID": "content/numpy_ndarray.html#import-numpy-a-vytvorenie-poľa",
    "href": "content/numpy_ndarray.html#import-numpy-a-vytvorenie-poľa",
    "title": "Polia",
    "section": "📦 Import NumPy a vytvorenie poľa",
    "text": "📦 Import NumPy a vytvorenie poľa\n\n\nKód\nimport numpy as np\n\n\n\nJednorozmerné pole (vektor)\n\n\nKód\nvektor = np.array([1, 2, 3])\nprint(vektor)\n\n\n[1 2 3]\n\n\n\n\nDvojrozmerné pole (matica)\n\n\nKód\nmatica = np.array([[1, 2], [3, 4]])\nprint(matica)\n\n\n[[1 2]\n [3 4]]",
    "crumbs": [
      "Domov",
      "📚 Knižnice",
      "📐 NumPy",
      "Polia"
    ]
  },
  {
    "objectID": "content/numpy_ndarray.html#analógia-k-lineárnej-algebre",
    "href": "content/numpy_ndarray.html#analógia-k-lineárnej-algebre",
    "title": "Polia",
    "section": "🎯 Analógia k lineárnej algebre",
    "text": "🎯 Analógia k lineárnej algebre\n\nSkalár – jedno číslo: np.array(5)\nVektor – jednorozmerné pole\nMatica – dvojrozmerné pole\nTensor – pole s viac ako 2 rozmermi",
    "crumbs": [
      "Domov",
      "📚 Knižnice",
      "📐 NumPy",
      "Polia"
    ]
  },
  {
    "objectID": "content/numpy_ndarray.html#rozmery-a-tvar-poľa",
    "href": "content/numpy_ndarray.html#rozmery-a-tvar-poľa",
    "title": "Polia",
    "section": "📏 Rozmery a tvar poľa",
    "text": "📏 Rozmery a tvar poľa\nprint(vektor.shape) # (3,) = vektor s tromi prvkami print(matica.shape) # (2, 2) = 2 riadky, 2 stĺpce",
    "crumbs": [
      "Domov",
      "📚 Knižnice",
      "📐 NumPy",
      "Polia"
    ]
  },
  {
    "objectID": "content/numpy_ndarray.html#vytvárenie-polí-hodnôt-np.arange-a-np.linspace",
    "href": "content/numpy_ndarray.html#vytvárenie-polí-hodnôt-np.arange-a-np.linspace",
    "title": "Polia",
    "section": "📝 Vytvárenie polí hodnôt np.arange a np.linspace",
    "text": "📝 Vytvárenie polí hodnôt np.arange a np.linspace\n\nnp.arange(start, stop, step)\nVytvára pole hodnôt od start (vrátane) po stop (bez stop) s daným krokom step. Funguje podobne ako vstavaná funkcia range, ale vracia NumPy pole a podporuje desatinné kroky.\n\n\nKód\nprint(np.arange(0, 5, 0.5))  # → [0. , 0.5, 1. , ..., 4.5]\n\n\n[0.  0.5 1.  1.5 2.  2.5 3.  3.5 4.  4.5]\n\n\n\n\nnp.linspace(start, stop, num)\nGeneruje num rovnomerne rozložených hodnôt medzi start a stop (vrátane stop). Používa sa, keď chcete presne určiť počet prvkov v rozsahu namiesto kroku.\n\n\nKód\nprint(np.linspace(0, 5, 6))  # → [0., 1., 2., 3., 4., 5.]\n\n\n[0. 1. 2. 3. 4. 5.]",
    "crumbs": [
      "Domov",
      "📚 Knižnice",
      "📐 NumPy",
      "Polia"
    ]
  },
  {
    "objectID": "content/numpy_ndarray.html#výhody-oproti-zoznamom",
    "href": "content/numpy_ndarray.html#výhody-oproti-zoznamom",
    "title": "Polia",
    "section": "⚡ Výhody oproti zoznamom",
    "text": "⚡ Výhody oproti zoznamom\n\nEfektívne ukladanie a spracovanie veľkých dát\nPodpora vektorových a maticových operácií\nBohatá sada matematických funkcií",
    "crumbs": [
      "Domov",
      "📚 Knižnice",
      "📐 NumPy",
      "Polia"
    ]
  },
  {
    "objectID": "content/numpy_ndarray.html#zhrnutie",
    "href": "content/numpy_ndarray.html#zhrnutie",
    "title": "Polia",
    "section": "🧠 Zhrnutie",
    "text": "🧠 Zhrnutie\n\nndarray je základná dátová štruktúra v NumPy\n1D pole = vektor, 2D pole = matica\nPodporuje rýchle a efektívne operácie\nPri práci s lineárnou algebrou je prirodzenou voľbou",
    "crumbs": [
      "Domov",
      "📚 Knižnice",
      "📐 NumPy",
      "Polia"
    ]
  },
  {
    "objectID": "content/numpy_ndarray.html#oficiálna-dokumentácia-numpy",
    "href": "content/numpy_ndarray.html#oficiálna-dokumentácia-numpy",
    "title": "Polia",
    "section": "📚 Oficiálna dokumentácia NumPy",
    "text": "📚 Oficiálna dokumentácia NumPy\nPodrobný popis funkcií, ich parametrov a príkladov použitia nájdete v oficiálnej dokumentácii knižnice NumPy na adrese: https://numpy.org/doc/stable/.",
    "crumbs": [
      "Domov",
      "📚 Knižnice",
      "📐 NumPy",
      "Polia"
    ]
  },
  {
    "objectID": "content/numpy_ndarray.html#videonávod",
    "href": "content/numpy_ndarray.html#videonávod",
    "title": "Polia",
    "section": "🎞️ Videonávod",
    "text": "🎞️ Videonávod",
    "crumbs": [
      "Domov",
      "📚 Knižnice",
      "📐 NumPy",
      "Polia"
    ]
  },
  {
    "objectID": "content/pandas_dataframe_intro.html",
    "href": "content/pandas_dataframe_intro.html",
    "title": "DataFrame",
    "section": "",
    "text": "Knižnica pandas patrí medzi najpoužívanejšie nástroje v Pythone pre prácu s dátami.\nJe navrhnutá na efektívnu manipuláciu a analýzu tabulkových a časových dát.\nPandas stavia na výkonnej knižnici NumPy a pridáva dva hlavné dátové typy:\n- Series – jednorozmerné pole s indexom (niečo ako stĺpec v tabuľke).\n- DataFrame – dvojrozmerná dátová štruktúra s riadkami a stĺpcami (ako tabuľka v Exceli).",
    "crumbs": [
      "Domov",
      "📚 Knižnice",
      "🗃️ Pandas",
      "DataFrame"
    ]
  },
  {
    "objectID": "content/pandas_dataframe_intro.html#úvod",
    "href": "content/pandas_dataframe_intro.html#úvod",
    "title": "DataFrame",
    "section": "",
    "text": "Knižnica pandas patrí medzi najpoužívanejšie nástroje v Pythone pre prácu s dátami.\nJe navrhnutá na efektívnu manipuláciu a analýzu tabulkových a časových dát.\nPandas stavia na výkonnej knižnici NumPy a pridáva dva hlavné dátové typy:\n- Series – jednorozmerné pole s indexom (niečo ako stĺpec v tabuľke).\n- DataFrame – dvojrozmerná dátová štruktúra s riadkami a stĺpcami (ako tabuľka v Exceli).",
    "crumbs": [
      "Domov",
      "📚 Knižnice",
      "🗃️ Pandas",
      "DataFrame"
    ]
  },
  {
    "objectID": "content/pandas_dataframe_intro.html#základné-informácie-o-dataframe",
    "href": "content/pandas_dataframe_intro.html#základné-informácie-o-dataframe",
    "title": "DataFrame",
    "section": "📊 Základné informácie o DataFrame",
    "text": "📊 Základné informácie o DataFrame\nObjekt DataFrame je jadrom knižnice pandas.\nPredstavuje dátovú tabuľku, ktorá má: - Index riadkov (riadky sú jednoznačne označené indexom).\n- Názvy stĺpcov (každý stĺpec má svoj názov).\n- Dáta – hodnoty uložené v dvojrozmernej štruktúre.\n\n👉 V praxi je DataFrame analógiou k Excelovej tabuľke alebo databázovej tabuľke.",
    "crumbs": [
      "Domov",
      "📚 Knižnice",
      "🗃️ Pandas",
      "DataFrame"
    ]
  },
  {
    "objectID": "content/pandas_dataframe_intro.html#vytvorenie-jednoduchého-dataframe",
    "href": "content/pandas_dataframe_intro.html#vytvorenie-jednoduchého-dataframe",
    "title": "DataFrame",
    "section": "🛠️ Vytvorenie jednoduchého DataFrame",
    "text": "🛠️ Vytvorenie jednoduchého DataFrame\n\n\nKód\nimport pandas as pd\n\n# Vytvorenie DataFrame zo slovníka\ndata = {\n    \"Meno\": [\"Anna\", \"Boris\", \"Cyril\"],\n    \"Vek\": [25, 30, 35],\n    \"Mesto\": [\"Bratislava\", \"Košice\", \"Žilina\"]\n}\n\ndf = pd.DataFrame(data)\n\nprint(df)\n\n\n    Meno  Vek       Mesto\n0   Anna   25  Bratislava\n1  Boris   30      Košice\n2  Cyril   35      Žilina",
    "crumbs": [
      "Domov",
      "📚 Knižnice",
      "🗃️ Pandas",
      "DataFrame"
    ]
  },
  {
    "objectID": "content/pandas_dataframe_intro.html#základné-vlastnosti-dataframe",
    "href": "content/pandas_dataframe_intro.html#základné-vlastnosti-dataframe",
    "title": "DataFrame",
    "section": "🔎 Základné vlastnosti DataFrame",
    "text": "🔎 Základné vlastnosti DataFrame\n\nTvar tabuľky (počet riadkov a stĺpcov)\n\n\nKód\nprint(df.shape)\n\n\n(3, 3)\n\n\n\n\nNázvy dostupných stĺpcov\n\n\nKód\nprint(df.columns)\n\n\nIndex(['Meno', 'Vek', 'Mesto'], dtype='object')\n\n\n\n\nRozsah indexov\n\n\nKód\nprint(df.index)\n\n\nRangeIndex(start=0, stop=3, step=1)\n\n\n\n\nDátové typy stĺpcov\n\n\nKód\nprint(df.dtypes)\n\n\nMeno     object\nVek       int64\nMesto    object\ndtype: object",
    "crumbs": [
      "Domov",
      "📚 Knižnice",
      "🗃️ Pandas",
      "DataFrame"
    ]
  },
  {
    "objectID": "content/pandas_dataframe_intro.html#zhrnutie",
    "href": "content/pandas_dataframe_intro.html#zhrnutie",
    "title": "DataFrame",
    "section": "🧠 Zhrnutie",
    "text": "🧠 Zhrnutie\n\npandas je knižnica na prácu s dátami v Pythone.\n\nZákladná štruktúra je DataFrame, ktorý funguje ako tabuľka s riadkami a stĺpcami.\n\nDáta môžeme jednoducho vytvárať zo slovníkov, zoznamov alebo importovať z externých súborov (CSV, Excel, SQL).",
    "crumbs": [
      "Domov",
      "📚 Knižnice",
      "🗃️ Pandas",
      "DataFrame"
    ]
  },
  {
    "objectID": "content/pandas_dataframe_intro.html#oficiálna-dokumentácia-pandas",
    "href": "content/pandas_dataframe_intro.html#oficiálna-dokumentácia-pandas",
    "title": "DataFrame",
    "section": "📚 Oficiálna dokumentácia Pandas",
    "text": "📚 Oficiálna dokumentácia Pandas\nPodrobný popis funkcií, ich parametrov a príkladov použitia nájdete v oficiálnej dokumentácii knižnice Pandas na adrese: https://pandas.pydata.org/docs/.",
    "crumbs": [
      "Domov",
      "📚 Knižnice",
      "🗃️ Pandas",
      "DataFrame"
    ]
  },
  {
    "objectID": "content/pandas_dataframe_intro.html#videonávod",
    "href": "content/pandas_dataframe_intro.html#videonávod",
    "title": "DataFrame",
    "section": "🎞️ Videonávod",
    "text": "🎞️ Videonávod",
    "crumbs": [
      "Domov",
      "📚 Knižnice",
      "🗃️ Pandas",
      "DataFrame"
    ]
  },
  {
    "objectID": "content/pandas_import_export.html",
    "href": "content/pandas_import_export.html",
    "title": "Import a export",
    "section": "",
    "text": "Knižnica pandas umožňuje jednoducho importovať a exportovať dáta v rôznych formátoch.\nNajčastejšie používané funkcie sú:\n\nImport:\n\npd.read_csv() – CSV súbory\npd.read_excel() – Excel súbory\npd.read_table() – textové súbory\n\nExport:\n\ndf.to_csv() – export do CSV\ndf.to_excel() – export do Excelu",
    "crumbs": [
      "Domov",
      "📚 Knižnice",
      "🗃️ Pandas",
      "Import a export"
    ]
  },
  {
    "objectID": "content/pandas_import_export.html#úvod",
    "href": "content/pandas_import_export.html#úvod",
    "title": "Import a export",
    "section": "",
    "text": "Knižnica pandas umožňuje jednoducho importovať a exportovať dáta v rôznych formátoch.\nNajčastejšie používané funkcie sú:\n\nImport:\n\npd.read_csv() – CSV súbory\npd.read_excel() – Excel súbory\npd.read_table() – textové súbory\n\nExport:\n\ndf.to_csv() – export do CSV\ndf.to_excel() – export do Excelu",
    "crumbs": [
      "Domov",
      "📚 Knižnice",
      "🗃️ Pandas",
      "Import a export"
    ]
  },
  {
    "objectID": "content/pandas_import_export.html#import-z-csv-súboru",
    "href": "content/pandas_import_export.html#import-z-csv-súboru",
    "title": "Import a export",
    "section": "🗂️ Import z CSV súboru",
    "text": "🗂️ Import z CSV súboru\n\n\nKód\nimport pandas as pd\n\n# Načítanie dát zo súboru data.csv\ndf = pd.read_csv(\"pandas_data.csv\")\n\nprint(df.head())   # vypíše prvých 5 riadkov\n\n\n    Meno  Vek       Mesto  Body\n0   Anna   25  Bratislava    88\n1  Boris   30      Košice    92\n2  Cyril   35      Žilina    75\n3   Dora   28  Bratislava    90\n4    Eva   22       Nitra    66",
    "crumbs": [
      "Domov",
      "📚 Knižnice",
      "🗃️ Pandas",
      "Import a export"
    ]
  },
  {
    "objectID": "content/pandas_import_export.html#import-z-excelu",
    "href": "content/pandas_import_export.html#import-z-excelu",
    "title": "Import a export",
    "section": "📑 Import z Excelu",
    "text": "📑 Import z Excelu\n\n\nKód\n# Načítanie dát z Excel súboru\ndf = pd.read_excel(\"pandas_data.xlsx\", sheet_name=\"List1\")\n\nprint(df.head())\n\n\n    Meno  Vek       Mesto  Body\n0   Anna   25  Bratislava    88\n1  Boris   30      Košice    92\n2  Cyril   35      Žilina    75\n3   Dora   28  Bratislava    90\n4    Eva   22       Nitra    66",
    "crumbs": [
      "Domov",
      "📚 Knižnice",
      "🗃️ Pandas",
      "Import a export"
    ]
  },
  {
    "objectID": "content/pandas_import_export.html#import-z-textového-súboru",
    "href": "content/pandas_import_export.html#import-z-textového-súboru",
    "title": "Import a export",
    "section": "📜 Import z textového súboru",
    "text": "📜 Import z textového súboru\n\n\nKód\n# Načítanie dát z textového súboru oddeleného tabulátorom\ndf = pd.read_table(\"pandas_data.txt\", sep=\"\\t\")\n\nprint(df.head())\n\n\n    Meno  Vek       Mesto  Body\n0   Anna   25  Bratislava    88\n1  Boris   30      Košice    92\n2  Cyril   35      Žilina    75\n3   Dora   28  Bratislava    90\n4    Eva   22       Nitra    66",
    "crumbs": [
      "Domov",
      "📚 Knižnice",
      "🗃️ Pandas",
      "Import a export"
    ]
  },
  {
    "objectID": "content/pandas_import_export.html#export-do-csv",
    "href": "content/pandas_import_export.html#export-do-csv",
    "title": "Import a export",
    "section": "📤 Export do CSV",
    "text": "📤 Export do CSV\n\n\nKód\n# Export DataFrame do CSV súboru\ndf.to_csv(\"export.csv\", index=False)  # index=False znamená, že index sa neuloží ako samostatný stĺpec",
    "crumbs": [
      "Domov",
      "📚 Knižnice",
      "🗃️ Pandas",
      "Import a export"
    ]
  },
  {
    "objectID": "content/pandas_import_export.html#export-do-excelu",
    "href": "content/pandas_import_export.html#export-do-excelu",
    "title": "Import a export",
    "section": "📤 Export do Excelu",
    "text": "📤 Export do Excelu\n\n\nKód\n# Export DataFrame do Excel súboru\ndf.to_excel(\"export.xlsx\", sheet_name=\"List1\", index=False)",
    "crumbs": [
      "Domov",
      "📚 Knižnice",
      "🗃️ Pandas",
      "Import a export"
    ]
  },
  {
    "objectID": "content/pandas_import_export.html#zhrnutie",
    "href": "content/pandas_import_export.html#zhrnutie",
    "title": "Import a export",
    "section": "🧠 Zhrnutie",
    "text": "🧠 Zhrnutie\n\nImport dát: CSV, Excel, TXT.\n\nExport dát: to_csv(), to_excel().\n\nPandas tak umožňuje pohodlný prenos dát medzi rôznymi formátmi a prostrediami.",
    "crumbs": [
      "Domov",
      "📚 Knižnice",
      "🗃️ Pandas",
      "Import a export"
    ]
  },
  {
    "objectID": "content/pandas_import_export.html#oficiálna-dokumentácia-pandas",
    "href": "content/pandas_import_export.html#oficiálna-dokumentácia-pandas",
    "title": "Import a export",
    "section": "📚 Oficiálna dokumentácia Pandas",
    "text": "📚 Oficiálna dokumentácia Pandas\nPodrobný popis funkcií, ich parametrov a príkladov použitia nájdete v oficiálnej dokumentácii knižnice Pandas na adrese: https://pandas.pydata.org/docs/.",
    "crumbs": [
      "Domov",
      "📚 Knižnice",
      "🗃️ Pandas",
      "Import a export"
    ]
  },
  {
    "objectID": "content/pandas_import_export.html#videonávod",
    "href": "content/pandas_import_export.html#videonávod",
    "title": "Import a export",
    "section": "🎞️ Videonávod",
    "text": "🎞️ Videonávod",
    "crumbs": [
      "Domov",
      "📚 Knižnice",
      "🗃️ Pandas",
      "Import a export"
    ]
  },
  {
    "objectID": "content/podmienky.html",
    "href": "content/podmienky.html",
    "title": "Podmienky",
    "section": "",
    "text": "Pomocou podmienok vieme rozhodovať, ktorý kód sa vykoná. Typicky na základe nejakého vstupu alebo výpočtu.\n\n⚠️ Všetok kód, ktorý patrí do if, else alebo elif, musí byť odsadený (zvyčajne 4 medzery alebo 1 tabulátor).",
    "crumbs": [
      "Domov",
      "🏗️ Riadiace štruktúry",
      "Podmienky"
    ]
  },
  {
    "objectID": "content/podmienky.html#úvod",
    "href": "content/podmienky.html#úvod",
    "title": "Podmienky",
    "section": "",
    "text": "Pomocou podmienok vieme rozhodovať, ktorý kód sa vykoná. Typicky na základe nejakého vstupu alebo výpočtu.\n\n⚠️ Všetok kód, ktorý patrí do if, else alebo elif, musí byť odsadený (zvyčajne 4 medzery alebo 1 tabulátor).",
    "crumbs": [
      "Domov",
      "🏗️ Riadiace štruktúry",
      "Podmienky"
    ]
  },
  {
    "objectID": "content/podmienky.html#základná-podmienka-if",
    "href": "content/podmienky.html#základná-podmienka-if",
    "title": "Podmienky",
    "section": "🧪 Základná podmienka if",
    "text": "🧪 Základná podmienka if\n\n\nKód\nvek = 18\n\nif vek &gt;= 18:\n    print(\"Máš prístup.\")\n\n\nMáš prístup.",
    "crumbs": [
      "Domov",
      "🏗️ Riadiace štruktúry",
      "Podmienky"
    ]
  },
  {
    "objectID": "content/podmienky.html#else-iná-možnosť",
    "href": "content/podmienky.html#else-iná-možnosť",
    "title": "Podmienky",
    "section": "➕ else – iná možnosť",
    "text": "➕ else – iná možnosť\n\n\nKód\nvek = 16\n\nif vek &gt;= 18:\n    print(\"Máš prístup.\")\nelse:\n    print(\"Prístup zamietnutý.\")\n\n\nPrístup zamietnutý.",
    "crumbs": [
      "Domov",
      "🏗️ Riadiace štruktúry",
      "Podmienky"
    ]
  },
  {
    "objectID": "content/podmienky.html#elif-ďalšie-možnosti",
    "href": "content/podmienky.html#elif-ďalšie-možnosti",
    "title": "Podmienky",
    "section": "🔁 elif – ďalšie možnosti",
    "text": "🔁 elif – ďalšie možnosti\n\n\nKód\nznámka = 3\n\nif známka == 1:\n    print(\"Výborný\")\nelif známka == 2:\n    print(\"Chválitebný\")\nelif známka == 3:\n    print(\"Dobrý\")\nelse:\n    print(\"Iná známka\")\n\n\nDobrý",
    "crumbs": [
      "Domov",
      "🏗️ Riadiace štruktúry",
      "Podmienky"
    ]
  },
  {
    "objectID": "content/podmienky.html#odsadenie",
    "href": "content/podmienky.html#odsadenie",
    "title": "Podmienky",
    "section": "🔧 Odsadenie",
    "text": "🔧 Odsadenie\nVšetok kód, ktorý patrí do if, else alebo elif, musí byť odsadený (zvyčajne 4 medzery alebo 1 tabulátor).\nChybný príklad:\nif 5 &gt; 3:\nprint(\"OK\")  # ❌ chyba – chýba odsadenie\nSprávne:\nif 5 &gt; 3:\n    print(\"OK\")  # ✅",
    "crumbs": [
      "Domov",
      "🏗️ Riadiace štruktúry",
      "Podmienky"
    ]
  },
  {
    "objectID": "content/podmienky.html#príklady",
    "href": "content/podmienky.html#príklady",
    "title": "Podmienky",
    "section": "💡 Príklady",
    "text": "💡 Príklady\n\n⚖️ Porovnanie čísel:\n\n\nKód\na = 5\nb = 10\n\nif a &gt; b:\n    print(\"a je väčšie\")\nelif a == b:\n    print(\"a a b sú rovnaké\")\nelse:\n    print(\"b je väčšie\")\n\n\nb je väčšie\n\n\n\n\n⌨️ S funckiou input()\n\n\nKód\nvek = int(input(\"Zadaj vek: \"))\n\nif vek &gt;= 18:\n    print(\"Plnoletý\")\nelse:\n    print(\"Neplnoletý\")\n\n\nZadaj vek:  21\n\n\nPlnoletý",
    "crumbs": [
      "Domov",
      "🏗️ Riadiace štruktúry",
      "Podmienky"
    ]
  },
  {
    "objectID": "content/podmienky.html#zhrnutie",
    "href": "content/podmienky.html#zhrnutie",
    "title": "Podmienky",
    "section": "🧠 Zhrnutie",
    "text": "🧠 Zhrnutie\n\nif – vykoná sa, ak je podmienka pravdivá\nelse – vykoná sa, ak if neplatí\nelif – pridáva ďalšie podmienky\nPodmienky porovnávajú hodnoty pomocou relačných (porovnávacích) operátorov: ==, !=, &gt;, &lt;, &gt;=, &lt;=\nKód vo vetvách musí byť odsadený",
    "crumbs": [
      "Domov",
      "🏗️ Riadiace štruktúry",
      "Podmienky"
    ]
  },
  {
    "objectID": "content/podmienky.html#videonávod",
    "href": "content/podmienky.html#videonávod",
    "title": "Podmienky",
    "section": "🎞️ Videonávod",
    "text": "🎞️ Videonávod",
    "crumbs": [
      "Domov",
      "🏗️ Riadiace štruktúry",
      "Podmienky"
    ]
  },
  {
    "objectID": "content/rozsahy_a_iteracia.html",
    "href": "content/rozsahy_a_iteracia.html",
    "title": "Práca s rozsahmi a iteráciou",
    "section": "",
    "text": "Pri opakovaní kódu často potrebujeme prechádzať číselné rozsahy alebo zoznamy s indexmi. Na to slúžia funkcie range() a enumerate().",
    "crumbs": [
      "Domov",
      "🏗️ Riadiace štruktúry",
      "Práca s rozsahmi a iteráciou"
    ]
  },
  {
    "objectID": "content/rozsahy_a_iteracia.html#úvod",
    "href": "content/rozsahy_a_iteracia.html#úvod",
    "title": "Práca s rozsahmi a iteráciou",
    "section": "",
    "text": "Pri opakovaní kódu často potrebujeme prechádzať číselné rozsahy alebo zoznamy s indexmi. Na to slúžia funkcie range() a enumerate().",
    "crumbs": [
      "Domov",
      "🏗️ Riadiace štruktúry",
      "Práca s rozsahmi a iteráciou"
    ]
  },
  {
    "objectID": "content/rozsahy_a_iteracia.html#range-generovanie-čísel",
    "href": "content/rozsahy_a_iteracia.html#range-generovanie-čísel",
    "title": "Práca s rozsahmi a iteráciou",
    "section": "🔢 range() – generovanie čísel",
    "text": "🔢 range() – generovanie čísel\n\n📌 Základný tvar:\n\n\nKód\nfor i in range(5):\n    print(i)\n\n\n0\n1\n2\n3\n4\n\n\n\n❗ range(n) vytvorí čísla od 0 do `n-1",
    "crumbs": [
      "Domov",
      "🏗️ Riadiace štruktúry",
      "Práca s rozsahmi a iteráciou"
    ]
  },
  {
    "objectID": "content/rozsahy_a_iteracia.html#vlastný-začiatok-a-krok",
    "href": "content/rozsahy_a_iteracia.html#vlastný-začiatok-a-krok",
    "title": "Práca s rozsahmi a iteráciou",
    "section": "🛠️ Vlastný začiatok a krok",
    "text": "🛠️ Vlastný začiatok a krok\n\n\nKód\nfor i in range(2, 10, 2):\n    print(i)  # 2, 4, 6, 8\n\n\n2\n4\n6\n8\n\n\n\n\nKód\nfor i in range(10, 0, -1):\n    print(i)  # 10, 9, ..., 1\n\n\n10\n9\n8\n7\n6\n5\n4\n3\n2\n1\n\n\n\n❗ range(a, b, k) – od a po b-1, po krokoch k",
    "crumbs": [
      "Domov",
      "🏗️ Riadiace štruktúry",
      "Práca s rozsahmi a iteráciou"
    ]
  },
  {
    "objectID": "content/rozsahy_a_iteracia.html#enumerate-index-hodnota",
    "href": "content/rozsahy_a_iteracia.html#enumerate-index-hodnota",
    "title": "Práca s rozsahmi a iteráciou",
    "section": "🔍 enumerate() – index + hodnota",
    "text": "🔍 enumerate() – index + hodnota\n\n\nKód\novocie = [\"jablko\", \"banán\", \"kiwi\"]\nfor index, hodnota in enumerate(ovocie):\n    print(index, \"→\", hodnota)\n\n\n0 → jablko\n1 → banán\n2 → kiwi\n\n\n\n🔢 Voliteľný začiatok indexovania:\n\n\nKód\nfor index, hodnota in enumerate(ovocie, start=1):\n    print(index, hodnota)\n\n\n1 jablko\n2 banán\n3 kiwi\n\n\n\n\n🤔 Kedy použiť enumerate()?\n\n✅ Keď potrebujete index a hodnotu zároveň\n\n\nKód\nzoznam = ['a', 'b', 'c']\nfor i, hodnota in enumerate(zoznam):\n    print(i, hodnota)\n\n\n0 a\n1 b\n2 c\n\n\n\n\n✅ Keď chcete začať index od iného čísla\n\n\nKód\nfor i, meno in enumerate(['Anna', 'Ján', 'Eva'], start=1):\n    print(f\"{i}. {meno}\")\n\n\n1. Anna\n2. Ján\n3. Eva\n\n\n\n\n✅ Zvýšenie čitateľnosti\nHoršie:\n\n\nKód\n\nzoznam = ['x', 'y', 'z']\nfor i in range(len(zoznam)):\n    print(i, zoznam[i])\n\n\n0 x\n1 y\n2 z\n\n\nLepšie:\n\n\nKód\nfor i, val in enumerate(zoznam):\n    print(i, val)\n\n\n0 x\n1 y\n2 z\n\n\n\n\n⛔ Kedy enumerate() netreba ?\n\n\nKód\nfor meno in [\"Anna\", \"Ján\", \"Eva\"]:\n    print(meno)\n\n\nAnna\nJán\nEva\n\n\n\n❗ Ak nepotrebujete index, iba hodnotu.",
    "crumbs": [
      "Domov",
      "🏗️ Riadiace štruktúry",
      "Práca s rozsahmi a iteráciou"
    ]
  },
  {
    "objectID": "content/rozsahy_a_iteracia.html#zhrnutie",
    "href": "content/rozsahy_a_iteracia.html#zhrnutie",
    "title": "Práca s rozsahmi a iteráciou",
    "section": "🧠 Zhrnutie",
    "text": "🧠 Zhrnutie\n\nrange(n) vytvorí čísla od 0 do n-1\nrange(a, b, k) – od a po b-1, po krokoch k\nenumerate() dáva index aj hodnotu zo zoznamu\nPoužite enumerate(), ak potrebujete pracovať s pozíciou prvkov",
    "crumbs": [
      "Domov",
      "🏗️ Riadiace štruktúry",
      "Práca s rozsahmi a iteráciou"
    ]
  },
  {
    "objectID": "content/rozsahy_a_iteracia.html#videonávod",
    "href": "content/rozsahy_a_iteracia.html#videonávod",
    "title": "Práca s rozsahmi a iteráciou",
    "section": "🎞️ Videonávod",
    "text": "🎞️ Videonávod",
    "crumbs": [
      "Domov",
      "🏗️ Riadiace štruktúry",
      "Práca s rozsahmi a iteráciou"
    ]
  },
  {
    "objectID": "content/sympy_derivovanie_integrovanie.html",
    "href": "content/sympy_derivovanie_integrovanie.html",
    "title": "Derivácie a integrály",
    "section": "",
    "text": "Balíček SymPy umožňuje symbolicky derivovať a integrovať výrazy.\nKľúčové funkcie: - Derivácie: diff, Derivative (formálny objekt), doit()\n- Integrály: integrate, Integral (formálny objekt), doit()\n- Hodnotenie: subs, evalf / N —",
    "crumbs": [
      "Domov",
      "📚 Knižnice",
      "🧮 SymPy",
      "Derivácie a integrály"
    ]
  },
  {
    "objectID": "content/sympy_derivovanie_integrovanie.html#úvod",
    "href": "content/sympy_derivovanie_integrovanie.html#úvod",
    "title": "Derivácie a integrály",
    "section": "",
    "text": "Balíček SymPy umožňuje symbolicky derivovať a integrovať výrazy.\nKľúčové funkcie: - Derivácie: diff, Derivative (formálny objekt), doit()\n- Integrály: integrate, Integral (formálny objekt), doit()\n- Hodnotenie: subs, evalf / N —",
    "crumbs": [
      "Domov",
      "📚 Knižnice",
      "🧮 SymPy",
      "Derivácie a integrály"
    ]
  },
  {
    "objectID": "content/sympy_derivovanie_integrovanie.html#derivovanie",
    "href": "content/sympy_derivovanie_integrovanie.html#derivovanie",
    "title": "Derivácie a integrály",
    "section": "🧮 Derivovanie",
    "text": "🧮 Derivovanie\n\n\nKód\nimport sympy as sp\nsp.init_printing()\n\nx, y, a = sp.symbols('x y a')\n\n\n\nJednoduché derivácie\n\n\nKód\nsp.diff(x**3 + 2*x - 5, x)          # 3*x**2 + 2\n\n\n\\(\\displaystyle 3 x^{2} + 2\\)\n\n\n\n\nKód\nsp.diff(sp.sin(x) + sp.exp(2*x), x)       # cos(x) + 2*exp(2*x)\n\n\n\\(\\displaystyle 2 e^{2 x} + \\cos{\\left(x \\right)}\\)\n\n\n\n\nKód\nsp.diff(sp.log(x), x)                  # 1/x\n\n\n\\(\\displaystyle \\frac{1}{x}\\)\n\n\n\n\nVyšší rád derivácie\n\n\nKód\nsp.diff(sp.sin(x), x, 2), \n\n\n\\(\\displaystyle \\left( - \\sin{\\left(x \\right)},\\right)\\)\n\n\n\n\nKód\nsp.diff(sp.exp(a*x), x, 3)\n\n\n\\(\\displaystyle a^{3} e^{a x}\\)\n\n\n\n\nParciálne derivácie\n\n\nKód\nf = x**2 * y + sp.sin(x*y)\n\n\n\n\nKód\nsp.diff(f, x)\n\n\n\\(\\displaystyle 2 x y + y \\cos{\\left(x y \\right)}\\)\n\n\n\n\nKód\nsp.diff(f, y)\n\n\n\\(\\displaystyle x^{2} + x \\cos{\\left(x y \\right)}\\)\n\n\n\nZmiešaná parciálna derivácia\n\n\nKód\nsp.diff(f, x, 1, y, 2) \n\n\n\\(\\displaystyle - x \\left(x y \\cos{\\left(x y \\right)} + 2 \\sin{\\left(x y \\right)}\\right)\\)\n\n\nTento zápis namená derivovanie funkcie f podľa viacerých premenných naraz. - f – funkcia, ktorú derivujeme, - x, 1 – derivuje raz podľa x, - y, 2 – derivuje dvakrát podľa y.\n➡️ Výsledkom je zmiešaná parciálna derivácia.\n\n\n\nFormálny diferenciálny objekt a vyhodnotenie\n\n\nKód\nD = sp.Derivative(sp.sin(x**2), x)\nD, D.doit()\n\n\n\\(\\displaystyle \\left( \\frac{d}{d x} \\sin{\\left(x^{2} \\right)}, \\  2 x \\cos{\\left(x^{2} \\right)}\\right)\\)",
    "crumbs": [
      "Domov",
      "📚 Knižnice",
      "🧮 SymPy",
      "Derivácie a integrály"
    ]
  },
  {
    "objectID": "content/sympy_derivovanie_integrovanie.html#integrovanie",
    "href": "content/sympy_derivovanie_integrovanie.html#integrovanie",
    "title": "Derivácie a integrály",
    "section": "🧮 Integrovanie",
    "text": "🧮 Integrovanie\n\nNeurčitý integrál\n\n⚠️ SymPy nevracia „+c“ — integračná konštanta je implicitná.\n\n\n\nKód\nsp.integrate(3*x**2 + 2, x), \n\n\n\\(\\displaystyle \\left( x^{3} + 2 x,\\right)\\)\n\n\n\n\nKód\nsp.integrate(sp.exp(a*x), x)\n\n\n\\(\\displaystyle \\begin{cases} \\frac{e^{a x}}{a} & \\text{for}\\: a \\neq 0 \\\\x & \\text{otherwise} \\end{cases}\\)\n\n\n\n\nKód\nsp.integrate(sp.cos(x), x)\n\n\n\\(\\displaystyle \\sin{\\left(x \\right)}\\)\n\n\n\n\nUrčitý integrál\n\n\nKód\nsp.integrate(sp.sin(x), (x, 0, sp.pi)), \n\n\n\\(\\displaystyle \\left( 2,\\right)\\)\n\n\n\n\nKód\nsp.integrate(x**2, (x, -1, 2))\n\n\n\\(\\displaystyle 3\\)\n\n\n\nFormálny objekt a vyhodnotenie\n\n\nKód\nI = sp.Integral((x**2),(x,0,10))\nI, I.doit()\n\n\n\\(\\displaystyle \\left( \\int\\limits_{0}^{10} x^{2}\\, dx, \\  \\frac{1000}{3}\\right)\\)",
    "crumbs": [
      "Domov",
      "📚 Knižnice",
      "🧮 SymPy",
      "Derivácie a integrály"
    ]
  },
  {
    "objectID": "content/sympy_derivovanie_integrovanie.html#zhrnutie",
    "href": "content/sympy_derivovanie_integrovanie.html#zhrnutie",
    "title": "Derivácie a integrály",
    "section": "🧠 Zhrnutie",
    "text": "🧠 Zhrnutie\n\nDerivácie: diff(expr, var, n).\nIntegrály: integrate(expr, (var, a, b)) alebo integrate(expr, var).\nFormálne objekty: Derivative, Integral + doit().",
    "crumbs": [
      "Domov",
      "📚 Knižnice",
      "🧮 SymPy",
      "Derivácie a integrály"
    ]
  },
  {
    "objectID": "content/sympy_derivovanie_integrovanie.html#oficiálna-dokumentácia-sympy",
    "href": "content/sympy_derivovanie_integrovanie.html#oficiálna-dokumentácia-sympy",
    "title": "Derivácie a integrály",
    "section": "📚 Oficiálna dokumentácia SymPy",
    "text": "📚 Oficiálna dokumentácia SymPy\nPodrobný popis funkcií, ich parametrov a príkladov použitia nájdete v oficiálnej dokumentácii knižnice SymPy na adrese: https://docs.sympy.org/latest/index.html.",
    "crumbs": [
      "Domov",
      "📚 Knižnice",
      "🧮 SymPy",
      "Derivácie a integrály"
    ]
  },
  {
    "objectID": "content/sympy_derivovanie_integrovanie.html#videonávod",
    "href": "content/sympy_derivovanie_integrovanie.html#videonávod",
    "title": "Derivácie a integrály",
    "section": "🎞️ Videonávod",
    "text": "🎞️ Videonávod",
    "crumbs": [
      "Domov",
      "📚 Knižnice",
      "🧮 SymPy",
      "Derivácie a integrály"
    ]
  },
  {
    "objectID": "content/sympy_symbolicke_vyrazy.html",
    "href": "content/sympy_symbolicke_vyrazy.html",
    "title": "Symbolické výrazy a premenné",
    "section": "",
    "text": "Balíček SymPy je určený na symbolickú matematiku v Pythone. Umožňuje pracovať so symbolickými premennými, výrazmi a funkciami podobne ako v algebre a analýze – t.j. bez okamžitej numerickej evaluácie.\n\n\nKód\nimport sympy as sp\nsp.init_printing()  # krajšie (2D) zobrazenie výrazov v notebooku",
    "crumbs": [
      "Domov",
      "📚 Knižnice",
      "🧮 SymPy",
      "Symbolické výrazy a premenné"
    ]
  },
  {
    "objectID": "content/sympy_symbolicke_vyrazy.html#úvod",
    "href": "content/sympy_symbolicke_vyrazy.html#úvod",
    "title": "Symbolické výrazy a premenné",
    "section": "",
    "text": "Balíček SymPy je určený na symbolickú matematiku v Pythone. Umožňuje pracovať so symbolickými premennými, výrazmi a funkciami podobne ako v algebre a analýze – t.j. bez okamžitej numerickej evaluácie.\n\n\nKód\nimport sympy as sp\nsp.init_printing()  # krajšie (2D) zobrazenie výrazov v notebooku",
    "crumbs": [
      "Domov",
      "📚 Knižnice",
      "🧮 SymPy",
      "Symbolické výrazy a premenné"
    ]
  },
  {
    "objectID": "content/sympy_symbolicke_vyrazy.html#definovanie-symbolov",
    "href": "content/sympy_symbolicke_vyrazy.html#definovanie-symbolov",
    "title": "Symbolické výrazy a premenné",
    "section": "🆎 Definovanie symbolov",
    "text": "🆎 Definovanie symbolov\n\nDefinovanie jednej symbolickej premennej\n\n\nKód\ni = sp.Symbol('i')\ni\n\n\n\\(\\displaystyle i\\)\n\n\n\n\nDefinovanie viacerých symbolických premenných\n\n\nKód\nx, y, z = sp.symbols('x y z')\nx, y, z\n\n\n\\(\\displaystyle \\left( x, \\  y, \\  z\\right)\\)\n\n\n\n\nSymbol vs. symbols a assumptions\n\nsymbols('x y') je skratka na vytváranie viacerých symbolov naraz.\nTrieda Symbol vytvorí jediný symbol; užitočné, keď chcete zadať predpoklady (assumptions), napr. že premenná je kladná alebo celé číslo.\n\n\n\nKód\na = sp.Symbol('a', positive=True, real=True)   # a &gt; 0, a ∈ ℝ\nn = sp.Symbol('n', integer=True)               # n ∈ ℤ\na, n\n\n\n\\(\\displaystyle \\left( a, \\  n\\right)\\)\n\n\n\n\nZobrazenie výrazov\n\n\nKód\ndisplay(i)\ndisplay(x,y,z)\n\n\n\\(\\displaystyle i\\)\n\n\n\\(\\displaystyle x\\)\n\n\n\\(\\displaystyle y\\)\n\n\n\\(\\displaystyle z\\)",
    "crumbs": [
      "Domov",
      "📚 Knižnice",
      "🧮 SymPy",
      "Symbolické výrazy a premenné"
    ]
  },
  {
    "objectID": "content/sympy_symbolicke_vyrazy.html#práca-so-symbolickými-výrazmi",
    "href": "content/sympy_symbolicke_vyrazy.html#práca-so-symbolickými-výrazmi",
    "title": "Symbolické výrazy a premenné",
    "section": "🧮 Práca so symbolickými výrazmi",
    "text": "🧮 Práca so symbolickými výrazmi\nVýrazy skladáme rovnako, ako píšeme matematiku. SymPy si uchováva strom výrazov, s ktorým vie ďalej pracovať.\n\n\nKód\nvyraz_1 = x + y + 2*z\nvyraz_2 = x**2 + 3*x*y + y**2\nvyraz_3 = (x + y)**2\n\nvyraz_1, vyraz_2, vyraz_3\n\n\n\\(\\displaystyle \\left( x + y + 2 z, \\  x^{2} + 3 x y + y^{2}, \\  \\left(x + y\\right)^{2}\\right)\\)",
    "crumbs": [
      "Domov",
      "📚 Knižnice",
      "🧮 SymPy",
      "Symbolické výrazy a premenné"
    ]
  },
  {
    "objectID": "content/sympy_symbolicke_vyrazy.html#zjednodušovanie-výrazov-simplify",
    "href": "content/sympy_symbolicke_vyrazy.html#zjednodušovanie-výrazov-simplify",
    "title": "Symbolické výrazy a premenné",
    "section": "🔄 Zjednodušovanie výrazov — simplify",
    "text": "🔄 Zjednodušovanie výrazov — simplify\nsimplify() sa pokúsi nájsť algebraicky jednoduchšiu (alebo kanonickejšiu) formu výrazu.\n\n\nKód\nvyraz = (x**2 + 2*x + 1) / (x + 1)\nsp.simplify(vyraz)\n\n\n\\(\\displaystyle x + 1\\)",
    "crumbs": [
      "Domov",
      "📚 Knižnice",
      "🧮 SymPy",
      "Symbolické výrazy a premenné"
    ]
  },
  {
    "objectID": "content/sympy_symbolicke_vyrazy.html#rozšírenie-a-rozklad-polynómov-expand-factor",
    "href": "content/sympy_symbolicke_vyrazy.html#rozšírenie-a-rozklad-polynómov-expand-factor",
    "title": "Symbolické výrazy a premenné",
    "section": "📦 Rozšírenie a rozklad polynómov — expand, factor",
    "text": "📦 Rozšírenie a rozklad polynómov — expand, factor\n\n\nKód\npolynom = (x + y)**2\n\nrozsireny = sp.expand(polynom)\nfaktorizovany = sp.factor(rozsireny)\n\nrozsireny, faktorizovany\n\n\n\\(\\displaystyle \\left( x^{2} + 2 x y + y^{2}, \\  \\left(x + y\\right)^{2}\\right)\\)",
    "crumbs": [
      "Domov",
      "📚 Knižnice",
      "🧮 SymPy",
      "Symbolické výrazy a premenné"
    ]
  },
  {
    "objectID": "content/sympy_symbolicke_vyrazy.html#použitie-funkcií-a-konštánt-v-symbolických-výrazoch",
    "href": "content/sympy_symbolicke_vyrazy.html#použitie-funkcií-a-konštánt-v-symbolických-výrazoch",
    "title": "Symbolické výrazy a premenné",
    "section": "📐 Použitie funkcií a konštánt v symbolických výrazoch",
    "text": "📐 Použitie funkcií a konštánt v symbolických výrazoch\n\n\nKód\ngoniometricky_vyraz = sp.sin(x)**2 + sp.cos(x)**2\nsp.simplify(goniometricky_vyraz)\n\n\n\\(\\displaystyle 1\\)\n\n\n\n\nKód\nsp.pi, sp.E\n\n\n\\(\\displaystyle \\left( \\pi, \\  e\\right)\\)",
    "crumbs": [
      "Domov",
      "📚 Knižnice",
      "🧮 SymPy",
      "Symbolické výrazy a premenné"
    ]
  },
  {
    "objectID": "content/sympy_symbolicke_vyrazy.html#substitúcia",
    "href": "content/sympy_symbolicke_vyrazy.html#substitúcia",
    "title": "Symbolické výrazy a premenné",
    "section": "🎯Substitúcia",
    "text": "🎯Substitúcia\nDo symbolických výrazov môžeme dosadiť čísla, iné symboly alebo celé výrazy.\n\n\nKód\nvyraz = x**2 + y\n\n\n\nDosadenie jedinej hodnoty\n\n\nKód\ndosadenie_1 = vyraz.subs(x, 3)\ndosadenie_1\n\n\n\\(\\displaystyle y + 9\\)\n\n\n\n\nDosadenie viacerých hodnôd\n\n\nKód\ndosadenie_2 = vyraz.subs({x: 2, y: 5})\ndosadenie_2\n\n\n\\(\\displaystyle 9\\)\n\n\n\n\nDosadenie výrazu do výrazu\n\n\nKód\ndosadenie_vyrazu = vyraz.subs(y, (1 - x))\ndosadenie_vyrazu\n\n\n\\(\\displaystyle x^{2} - x + 1\\)",
    "crumbs": [
      "Domov",
      "📚 Knižnice",
      "🧮 SymPy",
      "Symbolické výrazy a premenné"
    ]
  },
  {
    "objectID": "content/sympy_symbolicke_vyrazy.html#numerická-evaluácia",
    "href": "content/sympy_symbolicke_vyrazy.html#numerická-evaluácia",
    "title": "Symbolické výrazy a premenné",
    "section": "📊 Numerická evaluácia",
    "text": "📊 Numerická evaluácia\nAk chcete desatinné čísla (floating-point), použite evalf(). Je bežné kombinovať subs → evalf.\n\n\nKód\nvyraz = ((x + 1)/3)\ndisplay(vyraz)\ntype(vyraz)\n\n\n\\(\\displaystyle \\frac{x}{3} + \\frac{1}{3}\\)\n\n\nsympy.core.add.Add\n\n\n\n\nKód\nhodnota = vyraz.subs(x,2)\ndisplay(hodnota)\ntype(hodnota)\n\n\n\\(\\displaystyle 1\\)\n\n\nsympy.core.numbers.One\n\n\n\n\nKód\nhodnota = hodnota.evalf()\ndisplay(hodnota)\ntype(hodnota)\n\n\n\\(\\displaystyle 1.0\\)\n\n\nsympy.core.numbers.Float",
    "crumbs": [
      "Domov",
      "📚 Knižnice",
      "🧮 SymPy",
      "Symbolické výrazy a premenné"
    ]
  },
  {
    "objectID": "content/sympy_symbolicke_vyrazy.html#predpoklady-assumptions-a-ich-vplyv",
    "href": "content/sympy_symbolicke_vyrazy.html#predpoklady-assumptions-a-ich-vplyv",
    "title": "Symbolické výrazy a premenné",
    "section": "🔐 Predpoklady (assumptions) a ich vplyv",
    "text": "🔐 Predpoklady (assumptions) a ich vplyv\nPredpoklady môžu zjednodušiť výsledky (napr. positive=True umožní rušiť absolútne hodnoty).\n\n\nKód\nb = sp.Symbol('b', positive=True)\nsp.simplify((b**2)**(1/2))  # pre b&gt;0 sa √(b²) zjednoduší na b\n\n\n\\(\\displaystyle b^{1.0}\\)",
    "crumbs": [
      "Domov",
      "📚 Knižnice",
      "🧮 SymPy",
      "Symbolické výrazy a premenné"
    ]
  },
  {
    "objectID": "content/sympy_symbolicke_vyrazy.html#zhrnutie",
    "href": "content/sympy_symbolicke_vyrazy.html#zhrnutie",
    "title": "Symbolické výrazy a premenné",
    "section": "🧠 Zhrnutie",
    "text": "🧠 Zhrnutie\n\nSymboly: symbols('x y z'), Symbol('a', positive=True, integer=True, ...)\n\nVýrazy: bežná algebra s + - * / **, funkcie sin, cos, exp, …\n\nUpravy: expand, factor, simplify\n\nDosadzovanie: subs (aj viacnásobné)\n\nNumerika: evalf (väčšinou po subs)\n\nPredpoklady: uľahčujú zjednodušenia a kontrolu domény symbolov.",
    "crumbs": [
      "Domov",
      "📚 Knižnice",
      "🧮 SymPy",
      "Symbolické výrazy a premenné"
    ]
  },
  {
    "objectID": "content/sympy_symbolicke_vyrazy.html#oficiálna-dokumentácia-sympy",
    "href": "content/sympy_symbolicke_vyrazy.html#oficiálna-dokumentácia-sympy",
    "title": "Symbolické výrazy a premenné",
    "section": "📚 Oficiálna dokumentácia SymPy",
    "text": "📚 Oficiálna dokumentácia SymPy\nPodrobný popis funkcií, ich parametrov a príkladov použitia nájdete v oficiálnej dokumentácii knižnice SymPy na adrese: https://docs.sympy.org/latest/index.html.",
    "crumbs": [
      "Domov",
      "📚 Knižnice",
      "🧮 SymPy",
      "Symbolické výrazy a premenné"
    ]
  },
  {
    "objectID": "content/sympy_symbolicke_vyrazy.html#videonávod",
    "href": "content/sympy_symbolicke_vyrazy.html#videonávod",
    "title": "Symbolické výrazy a premenné",
    "section": "🎞️ Videonávod",
    "text": "🎞️ Videonávod",
    "crumbs": [
      "Domov",
      "📚 Knižnice",
      "🧮 SymPy",
      "Symbolické výrazy a premenné"
    ]
  },
  {
    "objectID": "content/venv.html",
    "href": "content/venv.html",
    "title": "Virtuálne prostredia",
    "section": "",
    "text": "Virtuálne prostredie je izolovaný priestor, v ktorom môžeme nainštalovať konkrétne verzie balíkov bez ovplyvnenia iných projektov. V prostredí Anaconda môžeme virtuálne prostredia spravovať pohodlne aj cez grafické rozhranie – Anaconda Navigator.",
    "crumbs": [
      "Domov",
      "🚀 Základy Pythonu",
      "Virtuálne prostredia"
    ]
  },
  {
    "objectID": "content/venv.html#význam-virtuálneho-prostredia",
    "href": "content/venv.html#význam-virtuálneho-prostredia",
    "title": "Virtuálne prostredia",
    "section": "",
    "text": "Virtuálne prostredie je izolovaný priestor, v ktorom môžeme nainštalovať konkrétne verzie balíkov bez ovplyvnenia iných projektov. V prostredí Anaconda môžeme virtuálne prostredia spravovať pohodlne aj cez grafické rozhranie – Anaconda Navigator.",
    "crumbs": [
      "Domov",
      "🚀 Základy Pythonu",
      "Virtuálne prostredia"
    ]
  },
  {
    "objectID": "content/venv.html#vytvorenie-virtuálneho-prostredia-v-anaconda-navigator",
    "href": "content/venv.html#vytvorenie-virtuálneho-prostredia-v-anaconda-navigator",
    "title": "Virtuálne prostredia",
    "section": "🧭 Vytvorenie virtuálneho prostredia v Anaconda Navigator",
    "text": "🧭 Vytvorenie virtuálneho prostredia v Anaconda Navigator\n\nSpustite Anaconda Navigator\nPrejdite na kartu Environments\nKliknite na Create\nVyplňte:\n\nVhodný názov prostredia, napr. programovanie_1\nZvoľte jazyk Python a jeho verziu napr. 3.12.11\n\nKliknite na Create",
    "crumbs": [
      "Domov",
      "🚀 Základy Pythonu",
      "Virtuálne prostredia"
    ]
  },
  {
    "objectID": "content/venv.html#videonávod",
    "href": "content/venv.html#videonávod",
    "title": "Virtuálne prostredia",
    "section": "🎞️ Videonávod",
    "text": "🎞️ Videonávod",
    "crumbs": [
      "Domov",
      "🚀 Základy Pythonu",
      "Virtuálne prostredia"
    ]
  },
  {
    "objectID": "content/vstup_input.html",
    "href": "content/vstup_input.html",
    "title": "Vstup od používateľa",
    "section": "",
    "text": "Funkcia input() slúži na získanie údajov od používateľa. Keď program zavolá input(), čaká, kým používateľ niečo zadá a stlačí Enter. Zadaný text sa vráti ako reťazec (str).\n\n⚠️ Kedže webová stránka nie je dynamická, je potrebné si kódy s funkciou ´input´ spustiť vo vlastnom prostredí.",
    "crumbs": [
      "Domov",
      "🚀 Základy Pythonu",
      "Vstup od používateľa"
    ]
  },
  {
    "objectID": "content/vstup_input.html#úvod",
    "href": "content/vstup_input.html#úvod",
    "title": "Vstup od používateľa",
    "section": "",
    "text": "Funkcia input() slúži na získanie údajov od používateľa. Keď program zavolá input(), čaká, kým používateľ niečo zadá a stlačí Enter. Zadaný text sa vráti ako reťazec (str).\n\n⚠️ Kedže webová stránka nie je dynamická, je potrebné si kódy s funkciou ´input´ spustiť vo vlastnom prostredí.",
    "crumbs": [
      "Domov",
      "🚀 Základy Pythonu",
      "Vstup od používateľa"
    ]
  },
  {
    "objectID": "content/vstup_input.html#základné-použitie",
    "href": "content/vstup_input.html#základné-použitie",
    "title": "Vstup od používateľa",
    "section": "🧪 Základné použitie",
    "text": "🧪 Základné použitie\n\n\nKód\nmeno = input(\"Ako sa voláš? \")\nprint(\"Ahoj,\", meno)",
    "crumbs": [
      "Domov",
      "🚀 Základy Pythonu",
      "Vstup od používateľa"
    ]
  },
  {
    "objectID": "content/vstup_input.html#hodnota-je-vždy-str",
    "href": "content/vstup_input.html#hodnota-je-vždy-str",
    "title": "Vstup od používateľa",
    "section": "📦 Hodnota je vždy str",
    "text": "📦 Hodnota je vždy str\n\n\nKód\nvek = input(\"Zadaj vek: \")\nprint(type(vek))",
    "crumbs": [
      "Domov",
      "🚀 Základy Pythonu",
      "Vstup od používateľa"
    ]
  },
  {
    "objectID": "content/vstup_input.html#prevod-na-číslo",
    "href": "content/vstup_input.html#prevod-na-číslo",
    "title": "Vstup od používateľa",
    "section": "🔁 Prevod na číslo",
    "text": "🔁 Prevod na číslo\n\n\nKód\nvek = input(\"Zadaj vek: \")\nvek = int(vek)\nprint(\"O rok budeš mať\", vek + 1)\n\n\n\n💡 Príklad\n\n\nKód\ncena = float(input(\"Zadaj cenu v €: \"))\nprint(\"Cena s DPH:\", cena * 1.23)",
    "crumbs": [
      "Domov",
      "🚀 Základy Pythonu",
      "Vstup od používateľa"
    ]
  },
  {
    "objectID": "content/vstup_input.html#chyby-pri-zlom-vstupe",
    "href": "content/vstup_input.html#chyby-pri-zlom-vstupe",
    "title": "Vstup od používateľa",
    "section": "💥 Chyby pri zlom vstupe",
    "text": "💥 Chyby pri zlom vstupe\n\n\nKód\n# cislo = int(input(\"Zadaj číslo: \"))  # Zadajte text ako \"abc\" a spôsobí chybu",
    "crumbs": [
      "Domov",
      "🚀 Základy Pythonu",
      "Vstup od používateľa"
    ]
  },
  {
    "objectID": "content/vstup_input.html#viac-vstupov-naraz",
    "href": "content/vstup_input.html#viac-vstupov-naraz",
    "title": "Vstup od používateľa",
    "section": "🔄 Viac vstupov naraz",
    "text": "🔄 Viac vstupov naraz\n\n\nKód\nx, y = input(\"Zadaj dve čísla: \").split()\nx = int(x)\ny = int(y)\nprint(\"Súčet:\", x + y)",
    "crumbs": [
      "Domov",
      "🚀 Základy Pythonu",
      "Vstup od používateľa"
    ]
  },
  {
    "objectID": "content/vstup_input.html#zhrnutie",
    "href": "content/vstup_input.html#zhrnutie",
    "title": "Vstup od používateľa",
    "section": "🧠 Zhrnutie",
    "text": "🧠 Zhrnutie\n\ninput() získa vstup od používateľa ako reťazec\nPre čísla použijeme int() alebo float() na prevod\nVstup môžeme priamo uložiť do premennej\nViac vstupov naraz oddelíme a spracujeme so split(), prípadne jednotlivé dopyty pomocou funckie input() odelíme v kóde.",
    "crumbs": [
      "Domov",
      "🚀 Základy Pythonu",
      "Vstup od používateľa"
    ]
  },
  {
    "objectID": "content/vstup_input.html#videonávod",
    "href": "content/vstup_input.html#videonávod",
    "title": "Vstup od používateľa",
    "section": "🎞️ Videonávod",
    "text": "🎞️ Videonávod",
    "crumbs": [
      "Domov",
      "🚀 Základy Pythonu",
      "Vstup od používateľa"
    ]
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Programovanie v jazyku Python",
    "section": "",
    "text": "Predmet Programovanie 1 je úvodom do sveta algoritmizácie a programovania s využitím viacerých softvérových riešení. Jedným z týchto riešení je aj programovací jazyk Python.\nKurz je určený najmä študentom prvého ročníka študijného programu Geodézia a kartografia a kladie dôraz na praktické využitie programovania v jazkyu Python v technických a analytických úlohách.\nTáto webová stránka slúži ako online skriptá, kde nájdete všetky potrebné informácie pre získanie základných zručností, potrebných na osvojenie si jazyka Python."
  },
  {
    "objectID": "index.html#vitajte-na-stránke-predmetu-programovanie-1",
    "href": "index.html#vitajte-na-stránke-predmetu-programovanie-1",
    "title": "Programovanie v jazyku Python",
    "section": "",
    "text": "Predmet Programovanie 1 je úvodom do sveta algoritmizácie a programovania s využitím viacerých softvérových riešení. Jedným z týchto riešení je aj programovací jazyk Python.\nKurz je určený najmä študentom prvého ročníka študijného programu Geodézia a kartografia a kladie dôraz na praktické využitie programovania v jazkyu Python v technických a analytických úlohách.\nTáto webová stránka slúži ako online skriptá, kde nájdete všetky potrebné informácie pre získanie základných zručností, potrebných na osvojenie si jazyka Python."
  },
  {
    "objectID": "index.html#čo-sa-naučíte",
    "href": "index.html#čo-sa-naučíte",
    "title": "Programovanie v jazyku Python",
    "section": "🎯 Čo sa naučíte?",
    "text": "🎯 Čo sa naučíte?\n\nZáklady programovacieho jazyka Python a jeho syntaktické pravidlá\nPrácu s číselnými a symbolickými výpočtami pomocou knižníc NumPy a SymPy\nTvorbu základných grafov a vizualizácií pomocou knižnice Matplotlib\nSpracovanie dát a tabuliek pomocou modulu Pandas\nZáklady algoritmizácie a efektívneho riešenia technických problémov"
  },
  {
    "objectID": "index.html#prečo-sa-to-učíme",
    "href": "index.html#prečo-sa-to-učíme",
    "title": "Programovanie v jazyku Python",
    "section": "❓ Prečo sa to učíme?",
    "text": "❓ Prečo sa to učíme?\nProgramovanie je dnes neoddeliteľnou súčasťou moderného inžinierstva. V oblasti geodézie a kartografie je dôležité vedieť realizovať zložitejšie matematické výpočty. S vývojom oboru geodézie je dôležitou zručnosťou, schopnosť automatizovať výpočty, spracovávať veľké objemy dát, vizualizovať výsledky a vytvárať vlastné analytické nástroje, či implementovať už existujúce riešenia.\nJazyk Python je výkonný a pritom prístupný jazyk, ktorý umožňuje efektívne riešiť reálne technické problémy. Získané zručnosti môžete využiť počas ďalšieho štúdia, pri riešení zadaní, záverečných prácach, aj v profesionálnej praxi."
  },
  {
    "objectID": "index.html#pre-koho-je-kurz-určený",
    "href": "index.html#pre-koho-je-kurz-určený",
    "title": "Programovanie v jazyku Python",
    "section": "🔧 Pre koho je kurz určený?",
    "text": "🔧 Pre koho je kurz určený?\nPre všetkých, ktorí chcú získať pevné základy v používaní jazyka Python a pripraviť sa na neskoršie aplikácie výpočtovej techniky v geodézii, kartografii, alebo príbuzných technických odboroch.\n\n\n📚 Tento kurz tvorí základ na efektívnu prácu s rozličnými dátami v geodetických aj iných inžinierskych aplikáciách."
  },
  {
    "objectID": "toc.html",
    "href": "toc.html",
    "title": "Obsah",
    "section": "",
    "text": "Inštalácia a vývojové prostredie\nVirtuálne prostredia\nPrvé programy a výstup (print)\nPremenné a dátové typy (int, float, str, bool)\nOperátory (aritmetické, relačné, logické)\nFunkcia type() a konverzia dátových typov\nVstup od používateľa (input)\nKomentovanie kódu\n\n\n\n\n\n\nZoznamy (list)\nN-tice (tuple)\nMnožiny (set)\nSlovníky (dict)\n\n\n\n\n\n\nPodmienky (if, elif, else)\nCykly (for, while)\nPráca s rozsahmi a iteráciou (range, enumerate)\nVnorené cykly a podmienky\n\n\n\n\n\n\nDefinovanie vlastných funkcií\n\n\n\n\n\n\nInštalácia a import\n\n\n\n\nPolia (ndarray)\nIndexovanie a rezanie\nVektorové výpočty\nMatematické funkcie\nImport/export dát zo súborov\n\n\n\n\n\nSymbolické výrazy a premenné\nRiešenie (sústav) rovníc\nDerivovanie, integrovanie\n\n\n\n\n\nZákladné typy grafov (plot, scatter, bar)\nDoplnkové typy grafov (pie, histogram)\nUkladanie grafov do súborov a úprava vzhľadu (.png, .pdf)\n\n\n\n\n\nDátová štruktúra DataFrame\nNačítanie a zápis .csv súborov\nIndexovanie a filtrovanie dát\nZákladné štatistické výpočty a agregácie\n\n\n\n\n\n\n\nDoplnkové kapitoly (nielen) pre študentov, ktorých Python pohltil.\n\n\n\n📁 Zručnosti z tohto predmetu využijete pri spracovaní meraní, analýze dát výpočtoch a automatizácii rozličných geodetických úloh počas ďalšieho štúdia aj v praxi."
  },
  {
    "objectID": "toc.html#štruktúra-znalostí-programovanie-v-jazyku-python",
    "href": "toc.html#štruktúra-znalostí-programovanie-v-jazyku-python",
    "title": "Obsah",
    "section": "",
    "text": "Inštalácia a vývojové prostredie\nVirtuálne prostredia\nPrvé programy a výstup (print)\nPremenné a dátové typy (int, float, str, bool)\nOperátory (aritmetické, relačné, logické)\nFunkcia type() a konverzia dátových typov\nVstup od používateľa (input)\nKomentovanie kódu\n\n\n\n\n\n\nZoznamy (list)\nN-tice (tuple)\nMnožiny (set)\nSlovníky (dict)\n\n\n\n\n\n\nPodmienky (if, elif, else)\nCykly (for, while)\nPráca s rozsahmi a iteráciou (range, enumerate)\nVnorené cykly a podmienky\n\n\n\n\n\n\nDefinovanie vlastných funkcií\n\n\n\n\n\n\nInštalácia a import\n\n\n\n\nPolia (ndarray)\nIndexovanie a rezanie\nVektorové výpočty\nMatematické funkcie\nImport/export dát zo súborov\n\n\n\n\n\nSymbolické výrazy a premenné\nRiešenie (sústav) rovníc\nDerivovanie, integrovanie\n\n\n\n\n\nZákladné typy grafov (plot, scatter, bar)\nDoplnkové typy grafov (pie, histogram)\nUkladanie grafov do súborov a úprava vzhľadu (.png, .pdf)\n\n\n\n\n\nDátová štruktúra DataFrame\nNačítanie a zápis .csv súborov\nIndexovanie a filtrovanie dát\nZákladné štatistické výpočty a agregácie\n\n\n\n\n\n\n\nDoplnkové kapitoly (nielen) pre študentov, ktorých Python pohltil.\n\n\n\n📁 Zručnosti z tohto predmetu využijete pri spracovaní meraní, analýze dát výpočtoch a automatizácii rozličných geodetických úloh počas ďalšieho štúdia aj v praxi."
  }
]